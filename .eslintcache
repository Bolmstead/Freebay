[{"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\index.js":"1","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\App.js":"2","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\rootReducer.js":"4","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\PrimarySearchAppBar.js":"5","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Routes.js":"6","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductCard.js":"7","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Api.js":"8","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductList.js":"9","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductCategoryList.js":"10","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductDetails.js":"11","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\hooks\\useLocalStorage.js":"12","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Alert.js":"13","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Context.js":"14","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\LoadingSpinner.js":"15","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Profile.js":"16","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Notifications.js":"17","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleHomepagePic.js":"18","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\stylePrimarySearchAppBar.js":"19","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductList.js":"20","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductDetails.js":"21","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductCard.js":"22","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Stylings\\styleNotifications.js":"23","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Stylings\\styleProfile.js":"24","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\CategoriesBar.js":"25","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\Category.js":"26","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\styleCategoriesBar.js":"27","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\styleCategory.js":"28","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\HomePage\\Home.js":"29","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\HomePage\\Stylings\\styleHome.js":"30","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\HomePage\\FaqCard.js":"31","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\HomePage\\HomePagePic.js":"32","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\AllWinsFeed.js":"33","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\EndingSoonFeed.js":"34","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleWinsFeed.js":"35","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Login.js":"36","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Stylings\\styleLogin.js":"37","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Signup.js":"38","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Stylings\\styleSignup.js":"39","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleApp.js":"40","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\UserBidsFeed.js":"41","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleBidsFeed.js":"42","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\UserWinsFeed.js":"43","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\WhatsTrendingFeed.js":"44","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleWhatsTrendingFeed.js":"45","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductCardMini.js":"46","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductCardMini.js":"47","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\WelcomePage.js":"48","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleWelcomePage.js":"49","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\NotificationItem.js":"50","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\BidConfirmation.js":"51","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleBidConfirmation.js":"52","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\index.js":"53","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\reportWebVitals.js":"54","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\App.js":"55","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\rootReducer.js":"56","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Routes.js":"57","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleApp.js":"58","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\Context.js":"59","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\CategoriesBar.js":"60","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\PrimarySearchAppBar.js":"61","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Api.js":"62","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\Home.js":"63","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\stylePrimarySearchAppBar.js":"64","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\BidConfirmation.js":"65","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\WelcomePage.js":"66","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Login.js":"67","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Profile.js":"68","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Signup.js":"69","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\ProductDetails.js":"70","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\Category.js":"71","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\NotificationItem.js":"72","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\styleCategoriesBar.js":"73","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\Stylings\\styleHome.js":"74","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\ProductCard.js":"75","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\ProductCardMini.js":"76","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\styleCategory.js":"77","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductDetails.js":"78","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleBidConfirmation.js":"79","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleWelcomePage.js":"80","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Stylings\\styleNotifications.js":"81","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductCard.js":"82","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductCardMini.js":"83","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductList.js":"84","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Stylings\\styleProfile.js":"85","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Stylings\\styleSignup.js":"86","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Notifications.js":"87","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Stylings\\styleLogin.js":"88","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\NotFound.js":"89","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\FeedItem.js":"90","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\hooks\\useLocalStorageHook.js":"91","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\LoadingText.js":"92","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\Stylings\\styleHomepagePic.js":"93","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\UserBidsOrWinsFeed.js":"94","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleBidsOrWinsFeed.js":"95","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\Alert.js":"96","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\RecentBiddersFeed.js":"97","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleRecentBidsFeed.js":"98","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\ProductsList.js":"99","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductListItem.js":"100","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleFeedItem.js":"101","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\HomePagePic2.js":"102","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\HomePagePic3.js":"103","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\HomePagePic1.js":"104","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\RecentWinsFeed.js":"105","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\MobileCategory.js":"106"},{"size":707,"mtime":1615092187711,"results":"107","hashOfConfig":"108"},{"size":3895,"mtime":1615351261706,"results":"109","hashOfConfig":"108"},{"size":362,"mtime":499162500000,"results":"110","hashOfConfig":"108"},{"size":346,"mtime":1615092187715,"results":"111","hashOfConfig":"108"},{"size":8688,"mtime":1615353232674,"results":"112","hashOfConfig":"108"},{"size":1674,"mtime":1615326408383,"results":"113","hashOfConfig":"108"},{"size":3577,"mtime":1615263695821,"results":"114","hashOfConfig":"108"},{"size":3603,"mtime":1614841256564,"results":"115","hashOfConfig":"108"},{"size":4008,"mtime":1615353187474,"results":"116","hashOfConfig":"108"},{"size":3446,"mtime":1614251670754,"results":"117","hashOfConfig":"108"},{"size":8235,"mtime":1615329121873,"results":"118","hashOfConfig":"108"},{"size":1010,"mtime":1612979792113,"results":"119","hashOfConfig":"108"},{"size":464,"mtime":1612981170300,"results":"120","hashOfConfig":"108"},{"size":103,"mtime":1612981894841,"results":"121","hashOfConfig":"108"},{"size":554,"mtime":1613632955362,"results":"122","hashOfConfig":"108"},{"size":3269,"mtime":1614840311619,"results":"123","hashOfConfig":"108"},{"size":2189,"mtime":1615268640484,"results":"124","hashOfConfig":"108"},{"size":1901,"mtime":1614293156304,"results":"125","hashOfConfig":"108"},{"size":1722,"mtime":1615271633198,"results":"126","hashOfConfig":"108"},{"size":413,"mtime":1614662784379,"results":"127","hashOfConfig":"108"},{"size":866,"mtime":1614666216269,"results":"128","hashOfConfig":"108"},{"size":437,"mtime":1615263061493,"results":"129","hashOfConfig":"108"},{"size":497,"mtime":1614807123835,"results":"130","hashOfConfig":"108"},{"size":722,"mtime":1614809704222,"results":"131","hashOfConfig":"108"},{"size":3467,"mtime":1614286117341,"results":"132","hashOfConfig":"108"},{"size":3035,"mtime":1614285305771,"results":"133","hashOfConfig":"108"},{"size":1319,"mtime":1614840434494,"results":"134","hashOfConfig":"108"},{"size":228,"mtime":1614293127658,"results":"135","hashOfConfig":"108"},{"size":2031,"mtime":1615329732806,"results":"136","hashOfConfig":"108"},{"size":346,"mtime":1615247411242,"results":"137","hashOfConfig":"108"},{"size":1244,"mtime":1614828682528,"results":"138","hashOfConfig":"108"},{"size":1657,"mtime":1614828689984,"results":"139","hashOfConfig":"108"},{"size":2586,"mtime":1615263823310,"results":"140","hashOfConfig":"108"},{"size":2791,"mtime":1614914660571,"results":"141","hashOfConfig":"108"},{"size":517,"mtime":1614902773664,"results":"142","hashOfConfig":"108"},{"size":3779,"mtime":1614829029761,"results":"143","hashOfConfig":"108"},{"size":522,"mtime":1614829040563,"results":"144","hashOfConfig":"108"},{"size":5046,"mtime":1615263228274,"results":"145","hashOfConfig":"108"},{"size":522,"mtime":1614829040124,"results":"146","hashOfConfig":"108"},{"size":407,"mtime":1614840654415,"results":"147","hashOfConfig":"108"},{"size":2780,"mtime":1615328986827,"results":"148","hashOfConfig":"108"},{"size":543,"mtime":1615329017347,"results":"149","hashOfConfig":"108"},{"size":2570,"mtime":1615328891880,"results":"150","hashOfConfig":"108"},{"size":2184,"mtime":1615330819373,"results":"151","hashOfConfig":"108"},{"size":556,"mtime":1614902780531,"results":"152","hashOfConfig":"108"},{"size":496,"mtime":1615330137978,"results":"153","hashOfConfig":"108"},{"size":3262,"mtime":1615330638286,"results":"154","hashOfConfig":"108"},{"size":2100,"mtime":1615269947646,"results":"155","hashOfConfig":"108"},{"size":577,"mtime":1615261977465,"results":"156","hashOfConfig":"108"},{"size":1998,"mtime":1615270643467,"results":"157","hashOfConfig":"108"},{"size":2837,"mtime":1615327932364,"results":"158","hashOfConfig":"108"},{"size":536,"mtime":1615327898637,"results":"159","hashOfConfig":"108"},{"size":373,"mtime":1615786920807,"results":"160","hashOfConfig":"161"},{"size":375,"mtime":1615412327734,"results":"162","hashOfConfig":"161"},{"size":4678,"mtime":1616549937745,"results":"163","hashOfConfig":"161"},{"size":346,"mtime":1615412327734,"results":"164","hashOfConfig":"161"},{"size":1637,"mtime":1616467937304,"results":"165","hashOfConfig":"161"},{"size":407,"mtime":1615412327690,"results":"166","hashOfConfig":"161"},{"size":103,"mtime":1615412327688,"results":"167","hashOfConfig":"161"},{"size":7080,"mtime":1616780928047,"results":"168","hashOfConfig":"161"},{"size":9973,"mtime":1616892216814,"results":"169","hashOfConfig":"161"},{"size":3839,"mtime":1616462038181,"results":"170","hashOfConfig":"161"},{"size":2155,"mtime":1616780204741,"results":"171","hashOfConfig":"161"},{"size":1804,"mtime":1615412327710,"results":"172","hashOfConfig":"161"},{"size":2421,"mtime":1616549255278,"results":"173","hashOfConfig":"161"},{"size":1621,"mtime":1616620280809,"results":"174","hashOfConfig":"161"},{"size":3779,"mtime":1615412327719,"results":"175","hashOfConfig":"161"},{"size":3504,"mtime":1616461266884,"results":"176","hashOfConfig":"161"},{"size":5042,"mtime":1616549762249,"results":"177","hashOfConfig":"161"},{"size":11368,"mtime":1616470195731,"results":"178","hashOfConfig":"161"},{"size":3469,"mtime":1616549547965,"results":"179","hashOfConfig":"161"},{"size":2000,"mtime":1616891081024,"results":"180","hashOfConfig":"161"},{"size":1618,"mtime":1616780872722,"results":"181","hashOfConfig":"161"},{"size":498,"mtime":1616442078219,"results":"182","hashOfConfig":"161"},{"size":3977,"mtime":1616714899502,"results":"183","hashOfConfig":"161"},{"size":3123,"mtime":1616549227237,"results":"184","hashOfConfig":"161"},{"size":228,"mtime":1615412327709,"results":"185","hashOfConfig":"161"},{"size":866,"mtime":1615412327718,"results":"186","hashOfConfig":"161"},{"size":195,"mtime":1616442606393,"results":"187","hashOfConfig":"161"},{"size":232,"mtime":1616557982003,"results":"188","hashOfConfig":"161"},{"size":497,"mtime":1615412327726,"results":"189","hashOfConfig":"161"},{"size":437,"mtime":1615412327715,"results":"190","hashOfConfig":"161"},{"size":543,"mtime":1616437493372,"results":"191","hashOfConfig":"161"},{"size":413,"mtime":1615412327719,"results":"192","hashOfConfig":"161"},{"size":722,"mtime":1615412327726,"results":"193","hashOfConfig":"161"},{"size":522,"mtime":1615412327727,"results":"194","hashOfConfig":"161"},{"size":2428,"mtime":1616890951633,"results":"195","hashOfConfig":"161"},{"size":522,"mtime":1615412327726,"results":"196","hashOfConfig":"161"},{"size":1060,"mtime":1616549287967,"results":"197","hashOfConfig":"161"},{"size":1222,"mtime":1616890039396,"results":"198","hashOfConfig":"161"},{"size":1046,"mtime":1615786405853,"results":"199","hashOfConfig":"161"},{"size":635,"mtime":1616442784858,"results":"200","hashOfConfig":"161"},{"size":1901,"mtime":1616475678913,"results":"201","hashOfConfig":"161"},{"size":1229,"mtime":1616889135521,"results":"202","hashOfConfig":"161"},{"size":582,"mtime":1616443821014,"results":"203","hashOfConfig":"161"},{"size":483,"mtime":1616457475240,"results":"204","hashOfConfig":"161"},{"size":2510,"mtime":1616779916928,"results":"205","hashOfConfig":"161"},{"size":670,"mtime":1616779908105,"results":"206","hashOfConfig":"161"},{"size":3811,"mtime":1616818315589,"results":"207","hashOfConfig":"161"},{"size":582,"mtime":1616468150602,"results":"208","hashOfConfig":"161"},{"size":604,"mtime":1616468653643,"results":"209","hashOfConfig":"161"},{"size":1622,"mtime":1616473322803,"results":"210","hashOfConfig":"161"},{"size":1633,"mtime":1616541830904,"results":"211","hashOfConfig":"161"},{"size":1620,"mtime":1616476699920,"results":"212","hashOfConfig":"161"},{"size":3313,"mtime":1616629332237,"results":"213","hashOfConfig":"161"},{"size":1546,"mtime":1616775985815,"results":"214","hashOfConfig":"161"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},"1t2oi43",{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"217"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"217"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"217"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"217"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"217"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"217"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"217"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"217"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"217"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"217"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"217"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"217"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"217"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"217"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"217"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"217"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"217"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"217"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"217"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"217"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"217"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"217"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"217"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"217"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"217"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"217"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"217"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},"jebst4",{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"352"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"352"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"352"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"352"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"352"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"352"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"352"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"352"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"352"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"352"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"352"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"352"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"352"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"352"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"352"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"352"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"352"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"352"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"352"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"352"},"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\index.js",[],["478","479"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\App.js",["480"],"import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Redirect } from 'react-router-dom';\r\nimport jwt from \"jsonwebtoken\";\r\nimport PrimarySearchAppBar from './Components/Navigation/PrimarySearchAppBar.js'\r\nimport CategoriesBar from './Components/Navigation/CategoriesBar.js'\r\nimport Routes from './Routes.js'\r\nimport Container from '@material-ui/core/Container';\r\nimport Context from \"./Components/Common/Context.js\";\r\nimport FreebayAPI from './Api'\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\nimport LoadingSpinner from './Components/Common/LoadingSpinner.js';\r\nimport useStyles from './Components/Common/Stylings/styleApp.js'\r\n\r\n\r\nexport const TOKEN_STORAGE_ID = \"freebay-token\";\r\n\r\n// Renders entire Application\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [infoLoaded, setInfoLoaded] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [updateAppBar, setUpdateAppBar] = useState(false);\r\n  const [searchObject, setSearchObject] = useState(null)\r\n\r\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\r\n  \r\n  console.debug(\r\n    \"App\",\r\n    \"infoLoaded=\", infoLoaded,\r\n    \"currentUser=\", currentUser,\r\n    \"token=\", token,\r\n  );\r\n\r\n  useEffect(function loadUserInfo() {\r\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\r\n\r\n    async function getCurrentUser() {\r\n      if (token) {\r\n        try {\r\n          let { username } = jwt.decode(token);\r\n          console.log(\"FreebayAPI.token\", FreebayAPI.token)\r\n          FreebayAPI.token = token;\r\n          let userResult = await FreebayAPI.getUser(username);\r\n          console.log(\"userResult\",userResult)\r\n          setCurrentUser(userResult);\r\n          console.log(\"currentUser\", currentUser, \"token\", token)\r\n        } catch (err) {\r\n          console.error(\"App loadUserInfo: problem loading\", err);\r\n          setCurrentUser(null);\r\n        }\r\n      }\r\n      setInfoLoaded(true)\r\n      // setUpdateAppBar(false)\r\n    }\r\n\r\n    setInfoLoaded(false)\r\n    getCurrentUser();\r\n\r\n  }, [token, updateAppBar]);\r\n\r\n  async function login(loginData) {\r\n    try {\r\n      let loginToken = await FreebayAPI.login(loginData);\r\n      console.log(\"currentUser\", currentUser, \"token\", token)\r\n      setToken(loginToken);\r\n      return { success: true };\r\n    } catch (errors) {\r\n      console.error(\"login failed\", errors);\r\n      return { success: false, errors };\r\n    }\r\n  }\r\n\r\n  function logout() {\r\n    setCurrentUser(null);\r\n    setToken(null);\r\n    return <Redirect to=\"/\" />\r\n\r\n  }\r\n\r\n  async function signup(data) {\r\n    try {\r\n      let token = await FreebayAPI.signup(data);\r\n      setToken(token);\r\n      return { success: true };\r\n    } catch (errors) {\r\n      console.error(\"signup failed\", errors);\r\n      return { success: false, errors };\r\n    }\r\n  }\r\n\r\n\r\n\r\n// Product Hooks\r\n  async function getProducts(query) {\r\n    let res = await FreebayAPI.getProducts(query);\r\n    setProducts(res);\r\n    console.log(\"products\", products)\r\n  }\r\n\r\n  async function getProduct(id) {\r\n    let res = await FreebayAPI.getProduct(id);\r\n    setProducts(res);\r\n    console.log(\"products\", products)\r\n  }\r\n\r\n\r\n  console.log(\"currentUser\", currentUser)\r\n  console.log(\"token\", token)\r\n\r\n  if (!infoLoaded) return <LoadingSpinner />;\r\n\r\n\r\n  return (\r\n    <div className={classes.appWrapper}>\r\n      <Context.Provider value={{ currentUser, setCurrentUser, signup, login, logout, products, getProduct, getProducts, setUpdateAppBar, searchObject, setSearchObject}}>\r\n\r\n        <BrowserRouter>\r\n\r\n        <Container>\r\n        <PrimarySearchAppBar />\r\n        <hr className={classes.hr}/>\r\n        <CategoriesBar/>\r\n        </Container>\r\n        <Container>\r\n        <Routes/>\r\n        </Container>\r\n        </BrowserRouter>\r\n\r\n        </Context.Provider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\rootReducer.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\PrimarySearchAppBar.js",["481","482","483","484","485","486","487","488","489","490","491"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Context from \"../Common/Context\";\r\nimport {Redirect, useHistory} from 'react-router-dom';\r\nimport FreebayAPI from \"../../Api.js\"\r\nimport useStyles from \"./Stylings/stylePrimarySearchAppBar.js\"\r\nimport NotificationItem from \"../User/NotificationItem\"\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\n\r\n\r\n// Search Bar to allow user to search products.\r\n// If logged in, displays user's account balance, notifications \r\n// icon, and profile icon. When clicked on, the notifications icon \r\n// will show user's unread notifications. If not logged in, shows \r\n// login and signup links.\r\n\r\n\r\nfunction PrimarySearchAppBar() {\r\n  const classes = useStyles();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [accountAnchorEl, setaccountAnchorEl] = useState(null);\r\n  const [notificationsAnchorEl, setNotificationsAnchorEl] = useState(null);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const { currentUser, logout, } = useContext(Context);\r\n\r\n  console.log(\"currentUser from PrimarySearchAppBar\", currentUser)\r\n\r\n  const history = useHistory()\r\n\r\n  let notifications;\r\n  let onlyNewNotifications;\r\n\r\n  if (currentUser){\r\n    notifications = currentUser.notifications;\r\n    console.log(\"notifications from PrimarySearchAppBar\", notifications)\r\n    onlyNewNotifications = notifications.filter( n => !n.wasViewed)\r\n\r\n  }\r\n\r\n  const [newNotifications, setNewNotifications] = useState(onlyNewNotifications);\r\n\r\n  function handleChange(evt) {\r\n    setSearchTerm(evt.target.value);\r\n    console.log(\"searchTerm\", searchTerm)\r\n  }\r\n\r\n  // Handle functionality of the app bar\r\n  const isAccountMenuOpen = Boolean(accountAnchorEl);\r\n  const isNotificationsMenuOpen = Boolean(notificationsAnchorEl);\r\n  const accountMenuId = isAccountMenuOpen ? 'simple-popover' : undefined;\r\n\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setaccountAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleProfileMenuClose = () => {\r\n    setaccountAnchorEl(null);\r\n  };\r\n\r\n  const handleNotificationsMenuOpen = (event) => {\r\n    console.log(\"handleNotificationsMenuOpen\")\r\n    setNotificationsAnchorEl(event.currentTarget);\r\n    setNewNotifications(0)\r\n  };\r\n\r\n  const handleNotificationsMenuClose = () => {\r\n    setNotificationsAnchorEl(null);\r\n  };\r\n\r\n  \r\n\r\n  useEffect(function viewNotifications() {\r\n    async function viewNotificationsApi() {\r\n        try {\r\n          await FreebayAPI.viewNotifications(currentUser.email);\r\n        } catch (err) {\r\n          console.error(\"Error with FreebayAPI.viewNotifications()\", err);\r\n        }\r\n      }\r\n    viewNotificationsApi();\r\n  }, [notificationsAnchorEl]);\r\n\r\n\r\n  // Handle the Input in the Search Bar\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    console.log(\"searchTerm from handleSubmit\", searchTerm)\r\n    let newUrl = `/products?name=` + searchTerm\r\n    console.log(\"newUrl from the handlesubmit in searchbar\",newUrl)\r\n    history.push(newUrl)\r\n   }\r\n    \r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderAccountMenu = (\r\n    <Popover\r\n      anchorEl={accountAnchorEl}\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isAccountMenuOpen}\r\n      onClose={handleProfileMenuClose}\r\n      className={classes.link}\r\n    >\r\n      { currentUser \r\n      ? \r\n        <Link href={\"/Profile/\" + currentUser.username} color=\"inherit\" style={{ textDecoration: 'none' }}><MenuItem onClick={handleProfileMenuClose} className={classes.link}>Profile</MenuItem></Link>\r\n      : \r\n        <MenuItem onClick={handleProfileMenuClose} className={classes.link}>Profile</MenuItem>\r\n      } \r\n      <Link className=\"m-2\" onClick={logout} color=\"inherit\" className={classes.link} style={{ textDecoration: 'none' }}><MenuItem onClick={handleProfileMenuClose}>Logout</MenuItem></Link>\r\n    </Popover>\r\n  );\r\n\r\n\r\n\r\n\r\n  const renderNotificationsMenu = (\r\n  \r\n    <Popover\r\n      anchorEl={notificationsAnchorEl}\r\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isNotificationsMenuOpen}\r\n      onClose={handleNotificationsMenuClose}\r\n    >\r\n    { currentUser\r\n      ? ( onlyNewNotifications.length > 0\r\n        ?\r\n          onlyNewNotifications.map( n => (\r\n          <MenuItem onClick={handleNotificationsMenuClose}>\r\n            {( n.relatedProductId\r\n            ? <Link href={\"/product/\"+ n.relatedProductId} \r\n                    color=\"inherit\" \r\n                    style={{ textDecoration: 'none' }}\r\n              >\r\n                <NotificationItem n={n} />\r\n              </Link>\r\n            : <Link href={\"/profile\"} \r\n                    color=\"inherit\" \r\n                    style={{ textDecoration: 'none' }}\r\n              >\r\n                <NotificationItem n={n} />\r\n              </Link>\r\n            )}\r\n          </MenuItem>))\r\n        :\r\n        <MenuItem onClick={handleNotificationsMenuClose}>    \r\nNo new notifications\r\n        </MenuItem>\r\n        )\r\n      : <div></div>\r\n    }\r\n    </Popover>\r\n  );\r\n\r\n\r\n  console.log(\r\n    \"PrimarySearchAppBar\",\r\n    \"currentUser=\", currentUser,\r\n    \"onlyNewNotifications=\", onlyNewNotifications,\r\n  );\r\n    \r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" style= {{background: \"#FFFFFF\"}} elevation={0}>\r\n        <Toolbar className= \"flex\">  \r\n          <Link href=\"/\">\r\n            <img src=\"/images/logo.png\" alt=\"logo\" className={classes.logo}></img>\r\n          </Link>\r\n          <div className={classes.search}>\r\n          <form onSubmit={handleSubmit} >\r\n            <div className={classes.searchIcon}>\r\n              <button type=\"submit\" className={classes.searchButton} >\r\n                <SearchIcon />\r\n              </button>\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search for anything\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              value={searchTerm}\r\n              onChange={handleChange}\r\n            />\r\n          </form>\r\n          </div>\r\n          {currentUser \r\n          ?  <div>\r\n\r\n                <div className={classes.sectionDesktop}>\r\n                <Typography className={classes.balance}>{\"$\" + currentUser.balance}</Typography>\r\n                <IconButton aria-label=\"show notifications\"\r\n                onClick={handleNotificationsMenuOpen}>\r\n                 <Badge badgeContent={newNotifications.length} color=\"secondary\" >      \r\n                      <NotificationsIcon \r\n                      edge=\"end\"\r\n                      aria-label=\"account of current user\"\r\n                      aria-controls={menuId}\r\n                      aria-haspopup=\"true\"/>\r\n                    </Badge>\r\n                </IconButton>\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  aria-label=\"account of current user\"\r\n                  aria-controls={menuId}\r\n                  onClick={handleProfileMenuOpen}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <AccountCircle />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          :  <div>\r\n                <Button color=\"default\" href=\"/login\" className={classes.button}>Login</Button>\r\n                <Button color=\"default\" href=\"/signup\" className={classes.button}>Signup</Button>\r\n             </div>\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n      {renderNotificationsMenu}\r\n      {renderAccountMenu}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrimarySearchAppBar;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Routes.js",["492"],"import { Switch, Route  } from \"react-router-dom\";\r\nimport React  from \"react\";\r\n\r\nimport Home from \"./Components/HomePage/Home.js\";\r\nimport Login from \"./Components/User/Login\";\r\nimport Signup from \"./Components/User/Signup\";\r\nimport Profile from \"./Components/User/Profile\";\r\nimport Welcome from \"./Components/Common/WelcomePage\";\r\nimport BidConfirmation from \"./Components/Common/BidConfirmation\";\r\n\r\n\r\n\r\nimport ProductList from \"./Components/Products/ProductList\";\r\nimport ProductCategoryList from \"./Components/Products/ProductCategoryList\";\r\nimport ProductDetails from \"./Components/Products/ProductDetails\";\r\n\r\n\r\n/** All routes of website along with a catch all route to display a not found route */\r\n\r\nfunction Routes() {\r\n  return (\r\n    <div>\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n                <Login />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n                <Signup />\r\n            </Route>\r\n            <Route exact path=\"/welcome\">\r\n                <Welcome />\r\n            </Route>\r\n            <Route exact path=\"/products\" >\r\n                <ProductList />\r\n            </Route>\r\n            <Route exact path=\"/bidPlaced/:id\" >\r\n                <BidConfirmation />\r\n            </Route>\r\n            <Route exact path=\"/product/:id\">\r\n                <ProductDetails />\r\n            </Route>\r\n            <Route exact path=\"/profile/:username\">\r\n                <Profile />\r\n            </Route>\r\n        \r\n            <Route><h1>Not Found!</h1></Route>\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductCard.js",["493","494","495","496","497"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport useStyles from './Stylings/styleProductCard.js'\r\n\r\n// Card of product image and some information regarding the product.\r\n// Will be rendered within the ProductList components.\r\n\r\nfunction ProductCard({product}) {\r\n  const classes = useStyles();\r\n  console.log(\"product in productCard\", product)\r\n\r\n  let {id, name, startingBid, imageUrl, rating, numOfRatings, auctionEndDt, bidderUsername, bidPrice} = product\r\n  let bidDisplay;\r\n\r\n  function truncate(str, n){\r\n    if (str !== undefined) {\r\n    return (str.length > n) ? str.substr(0, n-1) + '...' : str;}\r\n  };\r\n\r\n  if (bidPrice){\r\n    bidDisplay = parseFloat(bidPrice).toFixed(2);\r\n  } else {\r\n    bidDisplay = parseFloat(startingBid).toFixed(2);\r\n  }\r\n  const shortName = truncate(name, 50)\r\n\r\n  const auctionEndObj = new Date(auctionEndDt)\r\n\r\n  function getTimeRemaining(endtime){\r\n    const total = Date.parse(endtime) - Date.parse(new Date());\r\n    const seconds = Math.floor( (total/1000) % 60 );\r\n    const minutes = Math.floor( (total/1000/60) % 60 );\r\n    const hours = Math.floor( (total/(1000*60*60)) % 24 );\r\n    const days = Math.floor( total/(1000*60*60*24) );\r\n  \r\n    return {\r\n      total,\r\n      days,\r\n      hours,\r\n      minutes,\r\n      seconds\r\n    };\r\n  }\r\n\r\n  const countdown = getTimeRemaining(auctionEndObj)\r\n\r\n  const countdownDisplay = `${countdown.days}d ${countdown.hours}h`\r\n\r\n  return (\r\n    <Link href={\"/product/\" + id} color=\"inherit\" style={{ textDecoration: 'none' }}>\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardActionArea>\r\n        <div className={classes.imageContainer}>\r\n          <img\r\n            className={classes.media}\r\n            src={imageUrl}\r\n            title={shortName}\r\n          />\r\n        </div>\r\n        <CardContent style={{ minHeight: \"120px\"}}>\r\n          <div>\r\n          <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n            {shortName}\r\n          </Typography>\r\n          <Rating name=\"read-only\" value={product[\"rating\"]} size=\"small\" readOnly display=\"inline\"/>   \r\n\r\n      </div>\r\n          { bidderUsername\r\n          ?\r\n            <div>\r\n              <Typography variant=\"h6\" color=\"body2\" component=\"p\" display=\"inline\"  className={classes.price}>\r\n                ${bidDisplay}{'  '}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" display=\"inline\" >\r\n                bid by {bidderUsername}\r\n              </Typography>\r\n            </div>\r\n          :\r\n            <div>\r\n              <Typography variant=\"h6\" color=\"body2\" component=\"p\" display=\"inline\" fontWeight=\"fontWeightBold\" className={classes.price}>\r\n                ${bidDisplay}{'  '}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" display=\"inline\" component=\"p\">\r\n                Starting bid\r\n              </Typography>\r\n            </div>\r\n\r\n          }\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{countdownDisplay}</Typography>\r\n\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  </Link>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Api.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductList.js",["498","499","500"],"import React, { useState, useEffect } from \"react\";\r\nimport ProductCard from './ProductCard.js'\r\nimport {\r\n    Grid\r\n  } from '@material-ui/core/'\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport FreebayAPI from '../../Api.js'\r\nimport { useLocation } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useStyles from './Stylings/styleProductList.js'\r\nimport {Typography} from '@material-ui/core/'\r\nimport Context from \"../Common/Context\";\r\n\r\n\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst ProductList = () => {\r\n  const classes = useStyles();\r\n  const [products, setProducts] = useState([]);\r\n  const [nextPageQuery, setNextPageQuery] = useState(null);\r\n  const [prevPageQuery, setPrevPageQuery] = useState(null);\r\n\r\n  let query = useQuery()\r\n  let searchQuery = Object.fromEntries(new URLSearchParams(query))\r\n  const [searchObject, setSearchObject] = useState(searchQuery)\r\n\r\n\r\n  // grab the number of the page\r\n\r\n  // let subCategory = query.get(\"subCategory\")\r\n  // let page = query.get(\"page\")\r\n  // if (!page) {\r\n  //   page = \"1\"\r\n  // };\r\n\r\n  console.log(\"searchObject\",searchObject)\r\n  let { page, subCategory} = searchObject\r\n\r\n //grab products\r\n  useEffect(() => {\r\n    async function getProductsInCategory() {\r\n      let res = await FreebayAPI.getProducts(searchObject);\r\n      console.log(\"res from ProductList\", res.products)\r\n      let products = res.products\r\n      let numOfProducts = res.count\r\n      setProducts(products);\r\n      \r\n      /////// PAGINATION /////////\r\n      // Grab page number from the search query. If no page in query, set page to 1\r\n      if (!page) {\r\n        page = \"1\"\r\n      }\r\n      page = parseInt(page)\r\n\r\n      // Create the url query string for the link to next page\r\n      if ((numOfProducts - (page*24) > 0)) {\r\n        const nextPage = (page + 1).toString()\r\n        query.set(\"page\", nextPage)\r\n        setNextPageQuery(query.toString())\r\n      } else {\r\n        setNextPageQuery(null)\r\n      }\r\n\r\n      // If not on first page, create url query string for the link to previous page\r\n      if (page > 1) {\r\n        let prevPage = (page - 1).toString()\r\n        query.set(\"page\", prevPage)\r\n        setPrevPageQuery(query.toString())\r\n      } else {\r\n        setPrevPageQuery(null)\r\n      }\r\n\r\n    }\r\n    getProductsInCategory()\r\n  }, [searchObject]);\r\n\r\n\r\n  // Add \"Clothing & Accessories to title if in fashion category\"\r\n  let categoryTitle;\r\n  if (subCategory === \"Women\" || subCategory === \"Men\" || subCategory === \"Boys\" || subCategory === \"Girls\" || subCategory === \"Baby\"){\r\n    categoryTitle = subCategory + \" Clothing & Accessories\"\r\n  } else {\r\n    categoryTitle = subCategory\r\n  }\r\n\r\n  if (!products) return <CircularProgress />;\r\n\r\n  return (\r\n    <Container><br/>\r\n      <Typography variant=\"h4\" spacing={5} className={classes.listTitle}>\r\n        {categoryTitle}\r\n      </Typography>\r\n      <br/>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {products.map((product) =>{\r\n          return <Grid item s={4} m={3} spacing={3}>\r\n                    <ProductCard product={product}/>\r\n                  </Grid>\r\n        })}\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        {(prevPageQuery)\r\n        ? <Button size=\"medium\" className={classes.button} href={\"/products?\" + prevPageQuery}>\r\n            {\"< Previous page\"}\r\n          </Button>\r\n        : <Button size=\"medium\" className={classes.button} disabled>\r\n            {\"< Previous page\"}\r\n          </Button>\r\n        }\r\n        {(nextPageQuery)\r\n        ? <Button size=\"medium\" className={classes.button} href={\"/products?\" + nextPageQuery}>\r\n            {\"Next page >\"}\r\n          </Button>\r\n        : <Button size=\"medium\" className={classes.button} disabled>\r\n            {\"Next page >\"}\r\n          </Button>\r\n        }\r\n\r\n      </Grid>\r\n      </Container>\r\n      )\r\n};\r\n\r\nexport default ProductList;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductCategoryList.js",["501"],"import React, { useState, useEffect } from \"react\";\r\nimport ProductCard from './ProductCard.js'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Grid\r\n} from '@material-ui/core/'\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport FreebayAPI from '../../Api.js'\r\nimport { useLocation} from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n// The list of product categories when a user clicks on a subcategory\r\n// that is listed within the categories navigation bar\r\n\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \r\n    root: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      textTransform: 'none'\r\n\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nconst ProductList = () => {\r\n  const classes = useStyles();\r\n  const [products, setProducts] = useState([]);\r\n  // grab the number of the page\r\n  let query = useQuery()\r\n  let subCategory = query.get(\"subCategory\")\r\n  let page = query.get(\"page\")\r\n  if (!page) {\r\n    page = \"1\"\r\n  }\r\n\r\n  let searchObject = {\r\n    page: page,\r\n    subCategory: subCategory\r\n  }\r\n\r\n  console.log(\"searchObject\", searchObject)\r\n //grab products\r\n  useEffect(() => {\r\n    async function getProductsInCategory() {\r\n      let res = await FreebayAPI.getProducts(searchObject);\r\n      setProducts(res);\r\n      console.log(\"products\", products)\r\n    }\r\n    getProductsInCategory()\r\n  }, []);\r\n\r\n\r\n  // grab the next page number\r\n  const nextPage = (parseInt(page) + 1).toString()\r\n  console.log(\"nextPage\", nextPage)\r\n\r\n  query.set(\"page\", nextPage)\r\n  \r\n  const nextPageQuery = query.toString()\r\n  console.log(\"nextPageQuery\", nextPageQuery)\r\n\r\n  // grab the previous page number\r\n  let prevPage;\r\n  console.log(\"declared prevPage Boolean Value\", Boolean(prevPage))\r\n  if (parseInt(page) > 1) {\r\n    prevPage = (parseInt(page) - 1).toString()\r\n\r\n    console.log(\"prevPage\", prevPage)\r\n\r\n    query.set(\"page\", prevPage)\r\n    \r\n    const prevPageQuery = query.toString()\r\n    console.log(\"prevPageQuery\", prevPageQuery)\r\n  }\r\n\r\n\r\n\r\n  // Add \"Clothing & Accessories to title if in fashion category\"\r\n  let categoryTitle;\r\n\r\n  if (subCategory === \"Women\" || subCategory === \"Men\" || subCategory === \"Boys\" || subCategory === \"Girls\" || subCategory === \"Baby\"){\r\n    categoryTitle = subCategory + \" Clothing & Accessories\"\r\n  } else {\r\n    categoryTitle = subCategory\r\n  }\r\n\r\n  if (!products) return <CircularProgress />;\r\n\r\n  return (\r\n    <Container>\r\n      <h1>{categoryTitle}</h1>\r\n      <Grid container spacing={3}>\r\n        {products.map((product) =>{\r\n          return <Grid item s={4} m={3} spacing={3}>\r\n                    <ProductCard id={product[\"id\"]} imageUrl = {product[\"imageUrl\"]} name ={product[\"name\"]} bidPrice = {product[\"marketPrice\"]} rating = {product[\"rating\"]} numOfRatings = {product[\"numOfRatings\"]} auctionEndDt = {product[\"auctionEndDt\"]}/>\r\n                  </Grid>\r\n        })}\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        {(!prevPage)\r\n        ? <Button size=\"medium\" className={classes.button} disabled>\r\n            {\"< Previous page\"}\r\n          </Button>\r\n        : <Button size=\"medium\" className={classes.button}>\r\n            {\"< Previous page\"}\r\n          </Button>}\r\n      <Button size=\"medium\" className={classes.button} href={\"/products?\" + nextPageQuery}>\r\n          {\"Next page >\"}\r\n      </Button>\r\n      </Grid>\r\n      </Container>\r\n      )\r\n};\r\n\r\nexport default ProductList;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductDetails.js",["502","503","504","505","506","507","508","509","510","511"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useParams, Redirect, useHistory, withRouter, ReactDOM } from 'react-router-dom';\r\nimport FreebayAPI from '../../Api.js'\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LoadingSpinner from '../Common/LoadingSpinner.js'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Countdown from 'react-countdown';\r\nimport useStyles from './Stylings/styleProductDetails.js'\r\nimport Context from \"../Common/Context\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography\r\n} from '@material-ui/core/'\r\n\r\n\r\n\r\n// Component that displays all information of a product.\r\n// Renders a countdown to the end of the auction along with an input\r\n// to allow the user to bid on the product.\r\n\r\nfunction ProductDetails() {\r\n  const classes = useStyles();\r\n  const [infoLoaded, setInfoLoaded] = useState(false);\r\n  const [product, setProduct] = useState(null);\r\n  const [countdown, setCountdown] = useState([]);\r\n  const [bidAmount, setBidAmount] = useState(null);\r\n  const [formErrors, setFormErrors] = useState(null);\r\n\r\n\r\n  const history = useHistory()\r\n  const {id} = useParams();\r\n  const { currentUser, setUpdateAppBar } = useContext(Context);\r\n\r\n\r\n  useEffect(() => {\r\n    async function getProduct(id) {\r\n      const result = await FreebayAPI.getProduct(id)\r\n      if (result.currentBid){\r\n        let bidDisplay = parseFloat(result.currentBid).toFixed(2);\r\n        result.bidDisplay = bidDisplay;\r\n      } else {\r\n        let bidDisplay = parseFloat(result.startingBid).toFixed(2);\r\n        result.bidDisplay = bidDisplay;\r\n      }\r\n      console.log(\"result\", typeof(result.bidCount))\r\n      setProduct(result);\r\n      getTimeLeft(result.auctionEndDt)\r\n      setInfoLoaded(true)\r\n\r\n    }\r\n    setInfoLoaded(false)\r\n    getProduct(id)\r\n  }, []);\r\n\r\n  // Create countdown timer\r\n  function getTimeLeft(dateTime){\r\n    const auctionEndObj = new Date(dateTime)\r\n    const totalTimeLeft = Date.parse(auctionEndObj) - Date.parse(new Date());\r\n    setCountdown(totalTimeLeft);\r\n    }\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    if (!currentUser){\r\n      setFormErrors(\"Please login to place bid\")\r\n      return\r\n    } \r\n\r\n    const balance = parseFloat(currentUser.balance)\r\n    const bid = parseFloat(bidAmount)\r\n    const currentBid = parseFloat(product.currentBid)\r\n    const startingBid = parseFloat(product.startingBid)\r\n\r\n    console.log(\"bid\", typeof(bid), bid)\r\n    console.log(\"balance:\", typeof(balance), balance)\r\n    console.log(\"currentBid\", typeof(product.currentBid), product.currentBid)\r\n\r\n    if (isNaN(bid)){\r\n      setFormErrors(\"Please submit a real bid\")\r\n    } else if (bid > balance){\r\n      setFormErrors(\"You do not have sufficient funds to place this bid\")\r\n    } else if (bid < currentBid){\r\n      setFormErrors(\"Please submit bid higher than the current bid\")\r\n    } else if (bid < startingBid){\r\n      setFormErrors(\"Please submit bid higher than the starting bid\")\r\n    } else{\r\n      await FreebayAPI.addBid(id, bid)\r\n\r\n      setUpdateAppBar(true)\r\n      history.push('/bidPlaced/' + product.id)\r\n    }\r\n  }\r\n\r\n  function handleChange(evt) {\r\n    setBidAmount(evt.target.value);\r\n    console.log(\"bidAmount\", bidAmount)\r\n  }\r\n\r\n  if (!infoLoaded) return <LoadingSpinner />;\r\n  console.log(\"countdown\",countdown)\r\n\r\n  return (\r\n    <Container>\r\n    <br/>\r\n\r\n\r\n      <Grid container spacing={4} justifyContent=\"center\" alignItems=\"center\" >\r\n        <Grid item  xs={12} md={6}>\r\n          <div className={classes.imageContainer}>\r\n          <img\r\n              className={classes.media}\r\n              src={product.imageUrl}\r\n            />\r\n            </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent className={classes.content} justify=\"center\">\r\n                <Typography variant=\"h5\">\r\n                  {product.name}\r\n                </Typography><br/>\r\n                <div className={classes.ratingContainer}>\r\n                <Rating name=\"read-only\" value={product.rating} size=\"medium\" readOnly display=\"inline\"/>      \r\n                <Typography variant=\"caption\" display=\"inline\" className=\"ratingNumber\" color=\"textSecondary\">\r\n                  {product.numOfRatings} ratings\r\n                </Typography>\r\n                </div>\r\n                <br/>\r\n\r\n                <hr className={classes.hr}/><br/>\r\n                { \r\n                product.currentBid \r\n                ? <div>\r\n                    <Typography variant=\"h4\" className={classes.price} color=\"textPrimary\" display=\"inline\" >\r\n                      ${product.bidDisplay}{' '}                 \r\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\" display=\"inline\">\r\n                        is the current bid by {' '} \r\n                        <Link href={\"/Profile/\" + product.bidderUsername}>\r\n                          {product.bidderUsername}\r\n                        </Link>\r\n                      </Typography>\r\n                    </Typography>\r\n                  </div>\r\n                : <div>\r\n                <Typography variant=\"h4\" className={classes.price} color=\"textPrimary\"  display=\"inline\">\r\n                  ${product.bidDisplay}{' '}\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\" display=\"inline\">\r\n                     is the starting bid\r\n                  </Typography>\r\n                </Typography>\r\n\r\n                  </div>\r\n                }\r\n\r\n                <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n\r\n                  <TextField id=\"outlined-basic\" label=\"Bid\" variant=\"outlined\" size=\"small\" onChange={handleChange}/>\r\n                  <span>{\"  \"}</span>       \r\n                  <Button size=\"medium\" type=\"submit\" variant=\"contained\" color=\"Primary\" className={classes.margin}>\r\n                    Place Bid\r\n                  </Button>\r\n                </form>\r\n                <br/>\r\n\r\n                {formErrors\r\n                    ? \r\n                      <div>\r\n                        <Alert severity=\"error\" variant=\"filled\">{formErrors}</Alert>\r\n                      </div>\r\n                    : \r\n                      <div>\r\n                          <Countdown date={Date.now() + countdown} renderer={props => \r\n                          <Typography  variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n                            {'  '}{\"Time left: \" + props.days + \"d \" + props.hours + \"h \" + props.minutes + \"m \" + props.seconds + \"s\"}\r\n                          </Typography>} \r\n                        />\r\n\r\n                        <Typography  variant=\"subtitle1\" color=\"textSecondary\" component=\"p\" fontWeight=\"fontWeightBold\">\r\n                        {product.bidCount}\r\n                          { \r\n                          (product.bidCount == 1)\r\n                          ? \" bid\" : \" bids\"\r\n                          }\r\n                        </Typography>\r\n                        </div>\r\n                    }\r\n\r\n              </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item  xs={12}>\r\n          <Card variant=\"outlined\">\r\n              <CardContent className={classes.content}>\r\n                <Typography variant=\"h5\">\r\n                  Description\r\n                </Typography><br/>\r\n\r\n                <hr className={classes.hr}/>\r\n                <br/>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  {product.description} \r\n                  </Typography>\r\n\r\n              </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default withRouter(ProductDetails);\r\n\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Alert.js",[],["512","513"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Context.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\LoadingSpinner.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Profile.js",["514","515","516","517","518","519","520","521","522","523","524","525"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport {useParams} from 'react-router-dom';\r\nimport FreebayAPI from '../../Api.js'\r\nimport Context from \"../Common/Context\";\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport UserBidsFeed from \"../Feeds/UserBidsFeed\";\r\nimport UserWinsFeed from \"../Feeds/UserWinsFeed\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport useStyles from './Stylings/styleProfile.js'\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardHeader,\r\n} from '@material-ui/core/'\r\n\r\n\r\n// A users profile. If the profile is the current user, notifications \r\n// are displayed. If the profile does not match the current user, \r\n// notifications would not be displayed.\r\n\r\n\r\nfunction Profile() {\r\n  const classes = useStyles();\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const {username} = useParams();\r\n  const { currentUser } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    async function getUserProfile(username) {\r\n        let userObject = await FreebayAPI.getUser(username);\r\n        console.log(\"username from params in Profile component\", username)\r\n        setUserProfile(userObject);\r\n    }\r\n    getUserProfile(username);\r\n    console.log(\"userProfile,\", userProfile)\r\n  }, []);\r\n\r\n  if (!userProfile) return <CircularProgress />;\r\n\r\n  const {  firstName, lastName, email, balance, products_won, highest_bids, notifications } = userProfile\r\n\r\n  return (\r\n    <Container >\r\n      <Grid container justify=\"center\" alignItems=\"center\"   direction=\"row\" spacing={5}>\r\n        <Grid item xs={12} sm={9} md={6}><br/>\r\n          <Paper variant=\"outlined\"> \r\n            <CardContent className={classes.profileHeader}>\r\n              <Typography className = {classes.userName} variant=\"h5\" component=\"h2\" align=\"center\">\r\n              {username}\r\n              </Typography>\r\n              <Typography className={classes.pos} color=\"textSecondary\" align=\"center\">\r\n                  {firstName} {lastName}\r\n                </Typography>\r\n            </CardContent>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\" alignItems=\"center\"   direction=\"row\" spacing={3} className={classes.feedGrid}>\r\n        <Grid item xs={12} md={8}>\r\n            <Notifications userProfile={userProfile}/>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} spacing={3} justify=\"center\" alignItems=\"top\" direction=\"row\" className={classes.feedGrid}>\r\n        <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n              Products Won\r\n          </Typography>\r\n            <UserWinsFeed userProfile={userProfile}/>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} spacing={3} justify=\"center\" alignItems=\"top\" direction=\"row\" className={classes.feedGrid}>\r\n          <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n              Current Bids\r\n          </Typography>\r\n            <UserBidsFeed userProfile={userProfile}/>\r\n        </Grid>\r\n      </Grid>\r\n\r\n        \r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Notifications.js",["526","527","528","529","530","531","532","533","534","535"],"import React, { useState, useEffect, useContext } from \"react\";import { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Context from \"../Common/Context\";\r\nimport useStyles from './Stylings/styleNotifications.js'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport NotificationItem from './NotificationItem'\r\n\r\n\r\n// Displays a feed of a user's viewed and unviewed notifications. \r\n// If a user has not viewed a notification, the notification will be highlighted.\r\n\r\n\r\nexport default function Notifications(userProfile) {\r\n  const classes = useStyles();\r\n  const { currentUser } = useContext(Context);\r\n\r\n  const profileUsername = userProfile.userProfile.username\r\n\r\n  console.log(\"profileUsername\", profileUsername)\r\n\r\n  if (!currentUser) {\r\n    return <div></div>\r\n  }\r\n\r\n  if (profileUsername !== currentUser.username) {\r\n    return <div></div>\r\n  }\r\n\r\n  let { notifications } = currentUser\r\n\r\n  console.log(\"notifications descrucutred from currentUser in Notifications component\", notifications)\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n    <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n    Notifications\r\n  </Typography>\r\n        <Paper className={classes.card} variant=\"outlined\">  \r\n            <CardContent className={classes.cardContent}>\r\n              <List >\r\n        { notifications.length > 0\r\n          ? notifications.map( n => (\r\n              <NotificationItem n={n} />\r\n            ))\r\n          : <Typography variant=\"h6\" component=\"h2\" align=\"center\" color=\"textSecondary\">\r\n               None yet!\r\n            </Typography>  \r\n        }\r\n            </List>\r\n\r\n            </CardContent>\r\n          </Paper>\r\n          </div>\r\n  );\r\n}\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleHomepagePic.js",["536"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-end\",\r\n    margin: \"10px\",\r\n    color: \"white\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  headerSecondary: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-end\",\r\n    margin: \"10px\",\r\n    color: \"white\",\r\n  },\r\n  imageTitle: {\r\n    margin: 0,\r\n    padding: \"1rem\",\r\n    color: \"white\",\r\n    textShadow: \"2px 2px 4px\",\r\n  },\r\n  img: {\r\n    padding: 0,\r\n    margin: 0,\r\n    height: \"auto\"\r\n  },\r\n  card: {\r\n    padding: 0,\r\n    margin: 0,\r\n    height: \"250px\",\r\n  }\r\n}));\r\n\r\nexport const FiCard = withStyles({\r\n  root: {\r\n    position: \"relative\"\r\n  }\r\n})(Card);\r\n\r\nexport const FiCardActionArea = withStyles({\r\n  root: {\r\n    position: \"relative\"\r\n  }\r\n})(CardActionArea);\r\n\r\nexport const FiCardActions = withStyles({\r\n  root: {\r\n    position: \"relative\"\r\n  }\r\n})(CardActions);\r\n\r\nexport const FiCardContent = withStyles({\r\n  root: {\r\n    position: \"relative\",\r\n    backgroundColor: \"transparent\"\r\n  }\r\n})(CardContent);\r\n\r\nexport const FiCardMedia = withStyles({\r\n  root: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    boxShadow: \"0 3000px rgba(0, 0, 0, 0.3) inset\"\r\n    \r\n  }\r\n})(CardMedia);\r\n\r\n// --- Exports --- //\r\nexport default {\r\n  FiCard,\r\n  FiCardActionArea,\r\n  FiCardActions,\r\n  FiCardContent,\r\n  FiCardMedia\r\n};\r\n\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\stylePrimarySearchAppBar.js",["537","538","539","540"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  balance: {\n    color: \"#282828\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    display: \"flex\"\n  },\n  flexbox: {\n    display: \"flex\"\n  },\n  logo: {\n    width: \"150px\"\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    textTransform: 'none',\n    color: '#282828'\t\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.07),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.12),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    flex: 3,\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(.65, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  inputRoot: {\n    color: 'black',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    [theme.breakpoints.up('md')]: {\n      width: '50ch',\n    },\n  },\n  flex: {\n      display: 'flex',\n    },\n  searchButton: {\n    background: 'none',\n    padding: '0px',\n    border: 'none',\n  },\n\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n\n  sectionDesktop: {\n    display: 'flex',\n  },\n\n\n}));\n\nexport default useStyles;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductList.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductDetails.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductCard.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Stylings\\styleNotifications.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Stylings\\styleProfile.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\CategoriesBar.js",["541","542","543","544","545","546","547","548","549","550"],"import React from 'react';\nimport Category from './Category'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport useStyles from './Stylings/styleCategoriesBar';\n\n// Navigation bar for a user to get to certain product pages of certain categories.\n// Rendered below the Search Navigation bar and renders multiple category components.\n\nfunction ProductCategoriesBar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n\n  return (\n      <AppBar position=\"static\" className={classes.appBar} elevation={0}>\n        <Toolbar className=\"center\" className= {classes.root}ariant=\"dense\">\n          <Container>\n          <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n            <Grid item >\n              <Category category={\"Electronics\"} className= \"flexItem\"\n              subCategories = {[\"Cell Phones & Accessories\", \"Computers & Accessories\", \"Photo\", \"Smart Home\"]}/>\n            </Grid>\n            <Grid item >\n              <Category category={\"Fashion\"} className= \"flexItem\"\n              subCategories = {[\"Women\", \"Men\", \"Boys\", \"Girls\", \"Baby\"]}/>\n            </Grid>\n            <Grid item >\n              <Category category={\"Home & Garden\"} className= \"flexItem\"\n              subCategories = {[\"Appliances\", \"Household\", \"Home Improvement\", \"Kitchen & Dining\"]}/>\n            </Grid>\n            <Grid item >\n              <Category category={\"Movies, TV, & Games\"} className= \"flexItem\"\n              subCategories = {[\"Movies & TV\", \"Toys & Games\", \"Video Games\"]}/>\n            </Grid>\n            <Grid item >\n              <Category category={\"Misc.\"} className= \"flexItem\" \n              subCategories = {[\"Arts & Crafts\", \"Automotive\", \"Grocery\", \"Pet Supplies\", \"Sports & Hobbies\"]}/>\n            </Grid>\n          </Grid>\n          </Container>\n        </Toolbar>\n      </AppBar>\n  );\n}\n\nexport default ProductCategoriesBar;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\Category.js",["551"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport { v4 as uuid } from 'uuid';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport useStyles from './Stylings/styleCategory.js';\r\n\r\n// A category of the CategoriesBar component.\r\n// shows a submenu of sub-categories when clicked.\r\n\r\nexport default function MenuListComposition({category, subCategories}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container>\r\n        <Button\r\n          ref={anchorRef}\r\n          aria-controls={open ? 'menu-list-grow' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n          style={{textTransform: \"none\", color: \"#282828\"}}\r\n          \r\n        >\r\n          {category}\r\n        </Button>\r\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList style={{ minWidth: \"200px\" }}autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                  {subCategories.map((item)=>{\r\n                      return <Link id={uuid()} href={\"/products?subCategory=\" + item} style={{ textDecoration: 'none' }}>\r\n                                <MenuItem style={{color: \"#282828\"}} id={uuid()} onClick={handleClose} >{item}</MenuItem>\r\n                             </Link>\r\n                    })}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\styleCategoriesBar.js",["552"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  center: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    border: 1,\r\n  },\r\n  menuButton: {\r\n    maxWidth: '30px', \r\n    maxHeight: '30px', \r\n    minWidth: '30px', \r\n    minHeight: '30px'\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '40px'\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n    textTransform: 'none',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    textTransform: 'none',\r\n  },\r\n  inputRoot: {\r\n    color: 'black',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  flexItem: {\r\n    flex: 1,\r\n    textTransform: 'none',\r\n    },\r\n\r\n}));\r\n\r\nexport default  useStyles;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\styleCategory.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\HomePage\\Home.js",["553","554","555","556"],"import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HomePagePic from './HomePagePic'\r\nimport FaqCard from './FaqCard'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AllWinsFeed from '../Feeds/AllWinsFeed.js'\r\nimport WhatsTrendingFeed from '../Feeds/WhatsTrendingFeed.js'\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ProductCardMini from '../Products/ProductCardMini'\r\n\r\n\r\n\r\n\r\nimport useStyles from './Stylings/styleHome.js'\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\n/* Home page that will render a feed of users who have \r\nrecently won products, an image link and a link to a FAQ's page */\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Grid  container spacing={3} direction=\"row\" justify=\"center\" alignItems=\"flex-start\">\r\n        <Grid item xs={12} alignItems=\"center\" justify=\"center\">\r\n          <HomePagePic />\r\n        </Grid>\r\n        {/* <Grid item xs={12} sm={10} md={6}>\r\n          <FaqCard />\r\n        </Grid> */}\r\n      </Grid>\r\n      <Grid  container spacing={3} direction=\"row\" alignItems=\"flex-start\">\r\n        <Grid item xs={12} md={4}>\r\n        <Typography component=\"h5\" variant=\"h5\" className={classes.feedTitle}>\r\n          New auction winners\r\n        </Typography>\r\n          <AllWinsFeed />\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n        <Typography component=\"h5\" variant=\"h5\" className={classes.feedTitle}>\r\n          What's trending\r\n        </Typography>\r\n          <WhatsTrendingFeed/>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={5} justify=\"center\" align=\"center\">\r\n        <Grid item xs={12} margin={5} alignItems=\"center\" justify=\"center\">\r\n          <Link href={\"/Welcome/\"} >\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Questions? Click here\r\n            </Typography>\r\n          </Link>\r\n          </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\HomePage\\Stylings\\styleHome.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\HomePage\\FaqCard.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\HomePage\\HomePagePic.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\AllWinsFeed.js",["557","558","559","560"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport useStyles from './Stylings/styleWinsFeed.js'\r\nimport FreebayAPI from '../../Api'\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n// Feed of a user's highest bids. To be displayed for anyone viewing the page\r\n\r\nexport default function AllWinsFeed() {\r\n  const classes = useStyles();\r\n  const [allWins, setAllWins] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    async function getRecentWins() {\r\n      const result = await FreebayAPI.getWinsFeed()\r\n      result.map( p => ( \r\n        p.name = (p.name.substring(0, 50) + \"...\")\r\n        // p.initial = (p.name.substring(0,1))\r\n      ))\r\n      setAllWins(result)\r\n      console.log(\"result\", result)\r\n\r\n    }\r\n    getRecentWins();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n        { allWins\r\n        ? \r\n        allWins.map( p => (\r\n          <div>\r\n\r\n              <ListItem alignItems=\"flex-start\">\r\n              <Link href={\"/Profile/\" + p.username} style={{ textDecoration: 'none' }}>\r\n              <ListItemAvatar>\r\n              <Avatar alt=\"Product Image\" className={classes.large}>\r\n                B\r\n              </Avatar>\r\n              </ListItemAvatar>\r\n              </Link>\r\n              <Link href={\"/Profile/\" + p.username}>\r\n            <ListItemText\r\n              primary={p.username}\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    className={classes.inline}\r\n                    color=\"textSecondary\"\r\n                  >\r\n                    {p.name}\r\n                  </Typography>\r\n                </React.Fragment>\r\n                }\r\n              />\r\n              </Link>\r\n              </ListItem>\r\n            \r\n            <Divider variant=\"inset\" component=\"li\" />\r\n          </div>\r\n        ))\r\n\r\n        :\r\n        \r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemText secondary=\"None yet!\"/>\r\n          </ListItem>\r\n        }\r\n\r\n    </List>\r\n\r\n  )}\r\n\r\n\r\n  ","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\EndingSoonFeed.js",["561","562","563","564","565","566","567","568"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport useStyles from './Stylings/styleWinsFeed.js'\r\nimport FreebayAPI from '../../Api'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\n\r\n// Feed of a user's highest bids. To be displayed for anyone viewing the page\r\n\r\nexport default function EndingSoonFeed() {\r\n  const classes = useStyles();\r\n  const [productsEndingSoon, setProductsEndingSoon] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    async function getProductsEndingSoon() {\r\n      const result = await FreebayAPI.getProductsEndingSoon()\r\n      setProductsEndingSoon(result)\r\n      console.log(\"result\", result)\r\n    }\r\n    getProductsEndingSoon();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      \r\n        { productsEndingSoon\r\n        \r\n        ? \r\n          \r\n        productsEndingSoon.map( p => (\r\n          <div>\r\n            <Link href={\"/Product/\" + p.id} dense={true}>\r\n\r\n              <ListItem alignItems=\"flex-start\">\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"Product Image\" src={p.imageUrl} \r\n                className={classes.large}/>\r\n              </ListItemAvatar>\r\n            <ListItemText\r\n              primary={p.name}\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    className={classes.inline}\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    {\r\n                      p.bidPrice\r\n                    ? p.bidPrice\r\n                    : p.startingBid\r\n                    }\r\n                  </Typography>\r\n                </React.Fragment>\r\n                }\r\n              />\r\n              </ListItem>\r\n            </Link>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n          </div>\r\n        ))\r\n\r\n        :\r\n        \r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemText secondary=\"None yet!\"/>\r\n          </ListItem>\r\n        }\r\n\r\n    </List>\r\n\r\n  )}\r\n\r\n\r\n\r\n",["569","570"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleWinsFeed.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Login.js",["571","572"],"import React, { useState, useContext } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Context from \"../Common/Context\";\r\nimport useStyles from \"./Stylings/styleLogin\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\n// Renders a login form. User is redirected to the home page once logged in\r\n\r\nexport default function Login( ) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { login, logout } = useContext(Context);\r\n\r\n  \r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [formErrors, setFormErrors] = useState([]);\r\n\r\n  console.debug(\r\n      \"LoginForm\",\r\n      \"login=\", typeof login,\r\n      \"formData=\", formData,\r\n      \"formErrors\", formErrors,\r\n  );\r\n\r\n  /** Handle form submit:\r\n   *\r\n   * Calls login func prop and, if successful, redirect to /companies.\r\n   */\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let result = await login(formData);\r\n    if (result.success) {\r\n      history.push(\"/\");\r\n    } else {\r\n      setFormErrors(result.errors);\r\n    }\r\n  }\r\n\r\n  /** Update form data field */\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setFormData(l => ({ ...l, [name]: value }));\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h4\">\r\n          Hello\r\n        </Typography><br></br>\r\n        <span style={{display: 'inline-block'}}>\r\n          Log in to freeBay\r\n        </span>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {formErrors.length\r\n                    ? \r\n                    <div>\r\n                      <br/>\r\n                      <Alert variant=\"filled\" severity=\"error\">\r\n                        {formErrors}\r\n                      </Alert>\r\n                    </div>\r\n                    : null\r\n                }\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/Signup\" variant=\"body2\">\r\n                Don't have an account? Create one here\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Stylings\\styleLogin.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Signup.js",["573","574"],"import React, { useState, useContext } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Context from \"../Common/Context\";\r\nimport useStyles from \"./Stylings/styleSignup\"\r\n\r\n// Renders a Signin form to create an account. User is redirected \r\n// to the home page once an account has been created.\r\n\r\nexport default function Signup() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { signup, logout } = useContext(Context);\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n  });\r\n  const [formErrors, setFormErrors] = useState([]);\r\n\r\n  console.debug(\r\n      \"Signup\",\r\n      \"signup=\", typeof signup,\r\n      \"formData=\", formData,\r\n      \"formErrors=\", formErrors,\r\n  );\r\n\r\n  /** Handle form submit:\r\n   *\r\n   * Calls login func prop and, if successful, redirect to /companies.\r\n   */\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let result = await signup(formData);\r\n    if (result.success) {\r\n      history.push(\"/welcome\");\r\n    } else {\r\n      setFormErrors(result.errors);\r\n    }\r\n  }\r\n\r\n  /** Update form data field */\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setFormData(data => ({ ...data, [name]: value }));\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h4\">\r\n          Hello\r\n        </Typography><br></br>\r\n        <span style={{display: 'inline-block'}}>\r\n          Create a freeBay account\r\n        </span>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {formErrors.length\r\n                    ? \r\n                    <div>\r\n                      <br/>\r\n                      <Alert variant=\"filled\" severity=\"error\">\r\n                        {formErrors}\r\n                      </Alert>\r\n                    </div>\r\n                    : null\r\n                }\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/Login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link><br/>\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n    </Container>\r\n  );\r\n}","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Stylings\\styleSignup.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleApp.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\UserBidsFeed.js",["575","576","577"],"import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport useStyles from './Stylings/styleBidsFeed.js'\r\n\r\n// Feed of a user's highest bids. To be displayed for anyone viewing the page\r\n\r\nexport default function BidsFeed(userProfile) {\r\n  const classes = useStyles();\r\n\r\n  console.log(\"userProfile in UserBidsFeed\", userProfile )\r\n\r\n  const { highest_bids } = userProfile[\"userProfile\"]\r\n\r\n  console.log(\"highest_bids in UserBidsFeed\", highest_bids )\r\n\r\n  function truncate(str, n){\r\n    if (str !== undefined) {\r\n    return (str.length > n) ? str.substr(0, n-1) + '...' : str;}\r\n  };\r\n\r\n  if (highest_bids) {\r\n    highest_bids.forEach( product=> product.name = truncate(product.name, 50))\r\n    console.log(\"highest_bids\", highest_bids)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.card} variant=\"outlined\">\r\n      <CardContent className={classes.cardContent}>\r\n    <List className={classes.root}>\r\n        { highest_bids.length > 0 \r\n        ? \r\n        highest_bids.map( p => (  \r\n          <Link href={\"/Product/\" + p.id} className={classes.product} style={{ textDecoration: 'none' }}>\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"Product Image\" src={p.imageUrl}\r\n                className={classes.large} />\r\n              </ListItemAvatar>\r\n            <ListItemText\r\n              primary={p.name}\r\n              className={classes.product}\r\n              color=\"textPrimary\"\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    className={classes.inline}\r\n                    color=\"textPrimary\"\r\n                    className={classes.product}\r\n                  >\r\n                    ${p.bidPrice}\r\n                  </Typography>\r\n                </React.Fragment>\r\n                }\r\n              />\r\n            </ListItem>\r\n          </Link>\r\n        ))\r\n        :\r\n\r\n        <Typography variant=\"h6\" component=\"h2\" align=\"center\" color=\"textSecondary\">\r\n                      <br></br>None yet!\r\n          </Typography>\r\n        }\r\n    </List>\r\n    </CardContent>\r\n    </Paper>\r\n    </div>\r\n\r\n  )}\r\n\r\n\r\n  ","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleBidsFeed.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\UserWinsFeed.js",["578"],"import React from \"react\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport useStyles from './Stylings/styleWinsFeed.js'\r\n\r\n// Feed of a user's highest bids. To be displayed for anyone viewing the page\r\n\r\nexport default function UserWinsFeed(userProfile) {\r\n  const classes = useStyles();\r\n\r\n  console.log(\"userProfile in WonOrBids Feed\", userProfile )\r\n\r\n  const { productsWon } = userProfile.userProfile\r\n\r\n  console.log(\"productsWon in WonOrBids Feed\", productsWon )\r\n\r\n  function truncate(str, n){\r\n    if (str !== undefined) {\r\n    return (str.length > n) ? str.substr(0, n-1) + '...' : str;}\r\n  };\r\n\r\n\r\n   if (productsWon) {\r\n    productsWon.forEach( product=> product.name = truncate(product.name, 50))\r\n    console.log(\"productsWon\", productsWon)\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n    <Paper className={classes.card} variant=\"outlined\">\r\n    <CardContent className={classes.cardContent}>\r\n    <List className={classes.root}>\r\n      <h1>{userProfile.username}</h1>\r\n        { productsWon\r\n        \r\n        ? \r\n          \r\n        productsWon.map( p => (  \r\n          <Link href={\"/Product/\" + p.id} style={{ textDecoration: 'none' }}>\r\n\r\n            <ListItem alignItems=\"flex-start\">\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Product Image\" src={p.imageUrl} \r\n              className={classes.large}/>\r\n            </ListItemAvatar>\r\n          <ListItemText\r\n            primary={p.name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  className={classes.inline}\r\n                  color=\"textPrimary\"\r\n                >\r\n                  ${p.bidPrice}\r\n                </Typography>\r\n              </React.Fragment>\r\n              }\r\n            />\r\n            </ListItem>\r\n          </Link>\r\n        ))\r\n\r\n        :\r\n        \r\n        <Typography variant=\"h6\" component=\"h2\" align=\"center\" color=\"textSecondary\">\r\n              None yet!\r\n          </Typography>\r\n        }\r\n    </List>\r\n    </CardContent>\r\n    </Paper>\r\n    </div>\r\n\r\n  )}\r\n\r\n\r\n  ","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\WhatsTrendingFeed.js",["579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport FreebayAPI from '../../Api'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport useStyles from './Stylings/styleWhatsTrendingFeed';\r\nimport ProductCardMini from '../Products/ProductCardMini.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\n// Feed of a user's highest bids. To be displayed for anyone viewing the page\r\n\r\nexport default function WhatsTrendingFeed() {\r\n  const classes = useStyles();\r\n  const [trendingProducts, setTrendingProducts] = useState([]);\r\n  const [infoLoaded, setInfoLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleGetWhatsTrending = async () => {\r\n      const result = await FreebayAPI.getWhatsTrending()\r\n\r\n      const mappedResult = result.map( p => ( \r\n        p.name = p.name.substring(0, 50) + \"...\"\r\n      ))\r\n\r\n      setTrendingProducts(result);\r\n    }\r\n    handleGetWhatsTrending();\r\n  }, []);\r\n\r\n  console.log(\"trendingProducts\", trendingProducts)\r\n\r\n  return (\r\n    <Grid  container spacing={3} direction=\"row\" justify=\"flex-start\" align=\"left\">\r\n    { trendingProducts.length > 0\r\n      ?trendingProducts.map( product => (\r\n        <ProductCardMini product={product} />      ))\r\n      :<ListItem alignItems=\"flex-start\">\r\n          <ListItemText secondary=\"Loading...\"/>\r\n        </ListItem>\r\n      }\r\n    </Grid>\r\n  )\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleWhatsTrendingFeed.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductCardMini.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductCardMini.js",["598","599","600","601","602","603","604"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport useStyles from './Stylings/styleProductCardMini.js';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n// Card of product image and some information regarding the product.\r\n// Will be rendered within the ProductList components.\r\n\r\nfunction ProductCardMini({product}) {\r\n  const classes = useStyles();\r\n  console.log(\"product in ProductCardMini\", product)\r\n\r\n  let {id, name, startingBid, imageUrl, rating, numOfRatings, auctionEndDt, bidderUsername, bidPrice, bidCount} = product\r\n  let bidDisplay;\r\n\r\n  function truncate(str, n){\r\n    if (str !== undefined) {\r\n    return (str.length > n) ? str.substr(0, n-1) + '...' : str;}\r\n  };\r\n\r\n  if (bidPrice){\r\n    bidDisplay = parseFloat(bidPrice).toFixed(2);\r\n  } else {\r\n    bidDisplay = parseFloat(startingBid).toFixed(2);\r\n  }\r\n  const shortName = truncate(name, 50)\r\n\r\n  const auctionEndObj = new Date(auctionEndDt)\r\n\r\n  function getTimeRemaining(endtime){\r\n    const total = Date.parse(endtime) - Date.parse(new Date());\r\n    const seconds = Math.floor( (total/1000) % 60 );\r\n    const minutes = Math.floor( (total/1000/60) % 60 );\r\n    const hours = Math.floor( (total/(1000*60*60)) % 24 );\r\n    const days = Math.floor( total/(1000*60*60*24) );\r\n  \r\n    return {\r\n      total,\r\n      days,\r\n      hours,\r\n      minutes,\r\n      seconds\r\n    };\r\n  }\r\n\r\n  const countdown = getTimeRemaining(auctionEndObj)\r\n\r\n  const countdownDisplay = `${countdown.days}d ${countdown.hours}h`\r\n\r\n  return (\r\n    <Grid item xs={12} md={4} lg={3}>\r\n    <Link href={\"/product/\" + id} color=\"inherit\" style={{ textDecoration: 'none' }}>\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardActionArea>\r\n        <div className={classes.imageContainer}>\r\n          <img\r\n            className={classes.media}\r\n            src={imageUrl}\r\n            title={shortName}\r\n          />\r\n        </div>\r\n        <CardContent style={{ minHeight: \"120px\"}}>\r\n          <div>\r\n\r\n      </div>\r\n      <Rating name=\"read-only\" value={product[\"rating\"]} size=\"small\" readOnly display=\"inline\"/>  \r\n      <div>\r\n        <Typography variant=\"h6\" color=\"body2\" component=\"p\" display=\"inline\"  className={classes.price}>\r\n          ${bidDisplay}{'  '}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" display=\"inline\" >\r\n        {bidCount} \r\n        { \r\n          (product.bidCount == 1)\r\n          ? \" bid\" : \" bids\"\r\n        }\r\n        </Typography>\r\n      </div>\r\n\r\n          \r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Current bid by </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{bidderUsername}</Typography>\r\n          \r\n\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  </Link>\r\n  </Grid>\r\n  );\r\n}\r\n\r\nexport default ProductCardMini;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\WelcomePage.js",["605","606","607","608","609","610","611","612","613","614","615"],"import React, { useState, useContext } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Context from \"../Common/Context\";\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport useStyles from './Stylings/styleWelcomePage'\r\n// Renders a welcome page to explain what the website is about\r\n\r\nexport default function Welcome() {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" align=\"center\"><br/><br/><br/>\r\n        <Grid xs={12} item><br/><br/><br/>\r\n        <EmojiEmotionsIcon className={classes.smiley} color=\"disabled\" />\r\n\r\n            <Typography component=\"h1\" variant=\"h3\">\r\n                Welcome to freeBay\r\n            </Typography>\r\n        </Grid>\r\n        <Grid item xs={10} md={6}>\r\n            <Typography component=\"h1\" variant=\"body1\" className={classes.bodyText}>\r\n            The website that lets you bid on fake products with fake money!\r\n            </Typography><br/>\r\n\r\n            <Typography component=\"h1\" variant=\"body1\" className={classes.bodyText}>\r\n            To find products, click from the categories above or use the search bar. All products are up for auction, so the user with the highest bid at the end of the time limit \"wins\" the product! After creating an account, you can find your highest bids, products you've won, and your notifications by clicking on the Profile button from the top right icon.\r\n            </Typography><br/>\r\n            <Typography component=\"h1\" variant=\"body1\" className={classes.bodyText}>\r\n            Enjoy!\r\n            </Typography>\r\n        </Grid>\r\n    \r\n    </Grid>\r\n  );\r\n}","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleWelcomePage.js",["616","617","618","619","620","621"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  smiley: {\r\n    fontSize: 200,\r\n    color: \"#FFD066\"\r\n  },\r\n  bodyText: {\r\n    color: \"blueu\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\NotificationItem.js",["622","623","624","625","626","627","628","629","630","631","632"],"import React, { useState, useEffect, useContext } from \"react\";import { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Context from \"../Common/Context\";\r\nimport useStyles from './Stylings/styleNotifications.js'\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\n\r\n\r\n// Displays a feed of a user's viewed and unviewed notifications. \r\n// If a user has not viewed a notification, the notification will be highlighted.\r\n\r\n\r\nexport default function NotificationItem(n) {\r\n  const classes = useStyles();\r\n  const { currentUser } = useContext(Context);\r\n\r\n  if (!currentUser) {\r\n    return <div></div>\r\n  }\r\n\r\n  let icon;\r\n\r\n  if (n.n.category === \"bid\") {\r\n    icon = <AttachMoneyIcon />\r\n  } else if (n.n.category === \"outbid\") {\r\n    icon = <SentimentDissatisfiedIcon />\r\n  } else if (n.n.category === \"win\") {\r\n    icon = <InsertEmoticonIcon />\r\n  } else if (n.n.category === \"gift\") {\r\n    icon = <CardGiftcardIcon />\r\n  }\r\n\r\n  console.log(\"n\",n.n.category)\r\n  return (\r\n    <ListItem dense=\"true\">\r\n      <ListItemAvatar>\r\n        <Avatar>\r\n          {icon}\r\n        </Avatar>\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={n.n.text}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\BidConfirmation.js",["633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useParams, Redirect, useHistory, withRouter, ReactDOM } from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Context from \"./Context\";\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport useStyles from './Stylings/styleBidConfirmation'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport FreebayAPI from '../../Api.js'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Countdown from 'react-countdown';\r\nimport ProductCard from '../Products/ProductCard.js'\r\n\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography\r\n} from '@material-ui/core/'\r\n// Renders a welcome page to explain what the website is about\r\n\r\nexport default function Welcome() {\r\n    const classes = useStyles();\r\n    const {id} = useParams();\r\n    const [product, setProduct] = useState(null);\r\n    const [infoLoaded, setInfoLoaded] = useState(false);\r\n\r\n    const { currentUser } = useContext(Context);\r\n\r\n\r\n    useEffect(() => {\r\n        async function getProduct(id) {\r\n            console.log(\"id from bidConfirmation\", id)\r\n          const result = await FreebayAPI.getProduct(id)\r\n          console.log(\"result from bidConfirmation\", result)\r\n          if (result.currentBid){\r\n            let bidDisplay = parseFloat(result.currentBid).toFixed(2);\r\n            result.bidDisplay = bidDisplay;\r\n          } else {\r\n            let bidDisplay = parseFloat(result.startingBid).toFixed(2);\r\n            result.bidDisplay = bidDisplay;\r\n          }\r\n          console.log(\"result\", typeof(result.bidCount))\r\n          setProduct(result);\r\n          setInfoLoaded(true)\r\n    \r\n        }\r\n        setInfoLoaded(false)\r\n        getProduct(id)\r\n      }, []);\r\n\r\n\r\n    if (!infoLoaded) return(                 \r\n        <Typography component=\"h1\" variant=\"h3\">\r\n            Loading...\r\n        </Typography>\r\n    )\r\n\r\n    console.log(\"product\",product)\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} justify=\"center\" align=\"center\"><br/><br/><br/>\r\n            <Grid xs={12} item><br/>\r\n            <EmojiEmotionsIcon className={classes.smiley} color=\"disabled\" />\r\n\r\n                <Typography component=\"h3\" variant=\"h5\">\r\n                    Congrats {currentUser.firstName}, you're now the high bidder!\r\n                </Typography> <br/>\r\n            </Grid>\r\n            <ProductCard product={product}/>\r\n        \r\n        </Grid>\r\n    );\r\n}","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleBidConfirmation.js",["652","653","654","655","656","657"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  smiley: {\r\n    fontSize: 150,\r\n    color: \"#FFD066\"\r\n  }\r\n}));\r\n\r\nexport default useStyles;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\index.js",[],["658","659"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\App.js",["660","661"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport jwt from \"jsonwebtoken\";\r\nimport PrimarySearchAppBar from './Components/Navigation/PrimarySearchAppBar.js'\r\nimport CategoriesBar from './Components/Navigation/CategoriesBar.js'\r\nimport Routes from './Routes.js'\r\nimport Container from '@material-ui/core/Container';\r\nimport Context from \"./Components/Common/Context.js\";\r\nimport FreebayAPI from './Api'\r\nimport useLocalStorage from \"./hooks/useLocalStorageHook\";\r\nimport useStyles from './Components/Common/Stylings/styleApp.js'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  Grid\r\n} from '@material-ui/core/'\r\nimport LoadingText from './Components/Common/LoadingText'\r\n\r\n// Key name for storing token in localStorage for \"remember me\" re-login\r\nexport const TOKEN_STORAGE_ID = \"freebay-token\";\r\n\r\n/** FreeBay application.\r\n *\r\n * - infoLoaded: has data been pulled from API?\r\n *   (if not, shows a \"loading...\" text)\r\n *\r\n * - currentUser: user obj from API. This becomes the way to tell\r\n *   if someone is logged in. This is passed around via context throughout app.\r\n *\r\n * - token: for logged in users, this is their authentication JWT.\r\n *   Is required to be set for most API calls. This is initially read from\r\n *   localStorage and synced to there via the useLocalStorage hook.\r\n * \r\n * - updateAppBar: Boolean value that, when changed, the useEffect \r\n *   loadUserInfo() is triggered which pulls the user's most current \r\n *   information held in the API. The currentUser state is\r\n *   then changed which triggers a rerender of the App bar to show show the most \r\n *   current balance and the notifications icon\r\n * \r\n * - searchObject: \r\n * \r\n *\r\n * App -> Routes\r\n */\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [infoLoaded, setInfoLoaded] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [updateAppBar, setUpdateAppBar] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [searchObject, setSearchObject] = useState(null)\r\n\r\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\r\n\r\n  const history = useHistory()\r\n\r\n  \r\n  console.debug(\r\n    \"App\",\r\n    \"infoLoaded=\", infoLoaded,\r\n    \"currentUser=\", currentUser,\r\n    \"token=\", token,\r\n  );\r\n\r\n  // Load user info from API. Until a user is logged in and they have a token,\r\n  // this should not run. It only needs to re-run when a user logs out or \r\n  // when a bid is placed (to update user info in App Bar), so\r\n  // the value of the token and updateAppBar are dependencies for this effect.\r\n\r\n  useEffect(function loadUserInfo() {\r\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\r\n\r\n    async function getCurrentUser() {\r\n      if (token) {\r\n        try {\r\n          let { username } = jwt.decode(token);\r\n          // put the token on the Api class so it can use it to call the API.\r\n          FreebayAPI.token = token;\r\n          let userResult = await FreebayAPI.getUser(username);\r\n          setCurrentUser(userResult);\r\n        } catch (err) {\r\n          setCurrentUser(null);\r\n        }\r\n      }\r\n      setInfoLoaded(true)\r\n    }\r\n\r\n    // set infoLoaded to false while async getCurrentUser runs; once the\r\n    // data is fetched (or even if an error happens!), this will be set back\r\n    // to false to control the loading text.\r\n    setInfoLoaded(false)\r\n    getCurrentUser();\r\n\r\n  }, [token, updateAppBar]);\r\n\r\n  // Handles site-wide login\r\n  async function login(loginData) {\r\n    try {\r\n      let loginToken = await FreebayAPI.login(loginData);\r\n      setToken(loginToken);\r\n      return { success: true };\r\n    } catch (errors) {\r\n      return { success: false, errors };\r\n    }\r\n  }\r\n\r\n  // Handles site-wide login\r\n  function logout() {\r\n    setCurrentUser(null);\r\n    setToken(null);\r\n    history.push('/')\r\n  }\r\n\r\n  // Handles site-wide signup\r\n  async function signup(data) {\r\n    try {\r\n      let token = await FreebayAPI.signup(data);\r\n      setToken(token);\r\n      return { success: true };\r\n    } catch (errors) {\r\n      return { success: false, errors };\r\n    }\r\n  }\r\n\r\n  if (!infoLoaded) return (\r\n    <LoadingText/>\r\n  )\r\n\r\n\r\n  return (\r\n    <div className={classes.appWrapper}>\r\n      <Context.Provider value={{ currentUser, setCurrentUser, signup, login, logout, setUpdateAppBar, searchObject, setSearchObject, products, setProducts}}>\r\n        <Container>\r\n          <PrimarySearchAppBar />\r\n          <hr className={classes.hr}/>\r\n          <CategoriesBar/>\r\n          <Routes/>\r\n        </Container>\r\n      </Context.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\rootReducer.js",[],["662","663"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Routes.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleApp.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\Context.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\CategoriesBar.js",["664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680"],"import React from 'react';\r\nimport Category from './Category'\r\nimport MobileCategory from './MobileCategory'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport useStyles from './Stylings/styleCategoriesBar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport MuiAccordion from '@material-ui/core/Accordion';\r\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\r\n\r\n\r\n/** Application bar located at the top of every page on site below the\r\n *  PrimarySearchAppBar. Displays <Category> components of all possible \r\n *  product categories. When a category is clickend a menue dropdown \r\n *  renders of subcategory links renders. \r\n */\r\n\r\n const Accordion = withStyles({\r\n  accordion: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    backgroundColor: 'rgba(0, 0, 0, .03)',\r\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\r\n    marginBottom: -1,\r\n    minHeight: 56,\r\n    '&$expanded': {\r\n      minHeight: 56,\r\n    },\r\n  },\r\n  content: {\r\n    '&$expanded': {\r\n      margin: '12px 0',\r\n    },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiAccordionDetails);\r\n\r\n\r\nfunction ProductCategoriesBar() {\r\n  const classes = useStyles();\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const renderMenu = (\r\n    <AppBar position=\"static\" className={classes.sectionDesktop} elevation={0}>\r\n      <Toolbar className=\"center\" className= {classes.root} variant=\"dense\">\r\n        <Container>\r\n          <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n            <Grid item >\r\n              <Category category={\"Electronics\"} className= \"flexItem\"\r\n              subCategories = {[\"Cell Phones & Accessories\", \r\n              \"Computers & Accessories\", \"Photo\", \"Smart Home\"]}/>\r\n            </Grid>\r\n            <Grid item >\r\n              <Category category={\"Fashion\"} className= \"flexItem\"\r\n              subCategories = {[\"Women\", \"Men\", \"Boys\", \"Girls\", \"Baby\"]}/>\r\n            </Grid>\r\n            <Grid item >\r\n              <Category category={\"Home & Garden\"} className= \"flexItem\"\r\n              subCategories = {[\"Appliances\", \"Household\", \r\n              \"Home Improvement\", \"Kitchen & Dining\"]}/>\r\n            </Grid>\r\n            <Grid item >\r\n              <Category category={\"Movies, TV, & Games\"} className= \"flexItem\"\r\n              subCategories = {[\"Movies & TV\", \"Toys & Games\", \"Video Games\"]}/>\r\n            </Grid>\r\n            <Grid item >\r\n              <Category category={\"Misc.\"} className= \"flexItem\" \r\n              subCategories = {[\"Arts & Crafts\", \"Grocery\", \r\n              \"Pet Supplies\", \"Sports & Hobbies\"]}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n\r\n  )\r\n  const renderMobileMenu = (\r\n    <div className={classes.sectionMobile}>\r\n      <Accordion square expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n        <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n          <Typography>Electronics</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <MobileCategory\r\n            subCategories = {[\"Cell Phones & Accessories\", \r\n            \"Computers & Accessories\", \"Photo\", \"Smart Home\"]}/>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n        <AccordionSummary aria-controls=\"panel2d-content\" id=\"panel2d-header\">\r\n          <Typography>Fashion</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <MobileCategory\r\n              subCategories = {[\"Women\", \"Men\", \"Boys\", \"Girls\", \"Baby\"]}/>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion square expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n        <AccordionSummary aria-controls=\"panel3d-content\" id=\"panel3d-header\">\r\n          <Typography>Home & Garden</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <MobileCategory\r\n              subCategories = {[\"Appliances\", \"Household\", \r\n              \"Home Improvement\", \"Kitchen & Dining\"]}/>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion square expanded={expanded === 'panel4'} onChange={handleChange('panel4')}>\r\n        <AccordionSummary aria-controls=\"panel4d-content\" id=\"panel4d-header\">\r\n          <Typography>Movies, TV, & Games</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <MobileCategory\r\n              subCategories = {[\"Movies & TV\", \"Toys & Games\", \"Video Games\"]}/>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion square expanded={expanded === 'panel5'} onChange={handleChange('panel5')}>\r\n        <AccordionSummary aria-controls=\"panel5d-content\" id=\"panel5d-header\">\r\n          <Typography>Misc.</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n        <MobileCategory\r\n              subCategories = {[\"Arts & Crafts\", \"Grocery\", \r\n              \"Pet Supplies\", \"Sports & Hobbies\"]}/>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <br></br>\r\n      \r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductCategoriesBar;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\PrimarySearchAppBar.js",["681","682","683","684","685","686"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Api.js",["687"],"import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\r\n\r\n/** API Class.\r\n *\r\n * Static class tying together methods used to get/send to to the API. *\r\n */\r\n\r\nclass FreebayAPI {\r\n  // the token for with the API will be stored here.\r\n  static token;\r\n\r\n  static async request(endpoint, data = {}, method = \"get\") {\r\n    console.debug(\"API Call:\", endpoint, data, method);\r\n\r\n    const url = `${BASE_URL}/${endpoint}`;\r\n    const headers = { Authorization: `Bearer ${FreebayAPI.token}` };\r\n    const params = (method === \"get\")\r\n        ? data\r\n        : {};\r\n\r\n    try {\r\n      return (await axios({ url, method, data, params, headers })).data;\r\n    } catch (err) {\r\n      console.error(\"API Error:\", err.response);\r\n      let message = err.response.data.error.message;\r\n      throw Array.isArray(message) ? message : [message];\r\n    }\r\n  }\r\n\r\n  // Individual API routes\r\n\r\n  /** Get details on a product by id. */\r\n\r\n  static async getProduct(id) {\r\n    let res = await this.request(`products/${id}`);\r\n    // console.log(\"res\",res)\r\n    return res.product;\r\n  }\r\n\r\n  /** Get details on all products. */\r\n\r\n  static async getProducts(searchObject) {\r\n    console.log(\"searchObject from Api.js getProducts\", searchObject)\r\n    const queryString = Object.keys(searchObject).map(key => key + '=' + searchObject[key]).join('&');\r\n\r\n    // console.log(\"queryString from Api.js getProducts\", queryString)\r\n\r\n    let url = `products/?` + queryString\r\n    // console.log(\"url\", url)\r\n    let res = await this.request(url);\r\n    // console.log(\"res from getProducts,\", res)\r\n\r\n    return res;\r\n  }\r\n\r\n  /** Login for site. */\r\n\r\n  static async login(data) {\r\n    let res = await this.request(`auth/token`, data, \"post\");\r\n    // console.log(\"res from api.js login method\", res)\r\n\r\n    return res.token;\r\n  }\r\n\r\n  /** Signup for site. */\r\n\r\n  static async signup(data) {\r\n    let res = await this.request(`auth/register`, data, \"post\");\r\n    // console.log(\"res from api.js signup method\", res)\r\n\r\n    return res.token;\r\n  }\r\n\r\n  /** Get current user information. */\r\n  \r\n  static async getUser(username) {\r\n    // console.log(\"madeit to getUser API method\")\r\n    let res = await this.request(`users/${username}`);\r\n    console.log(\"madeit to getUser API method after this.request\",res)\r\n\r\n    return res;\r\n  }\r\n\r\n  /** Post new Bid */\r\n\r\n  static async addBid(productId, bidAmount) {\r\n    let data={}\r\n    let res = await this.request(`products/${productId}/bid/${bidAmount}`, data, \"post\");\r\n    // console.log(\"res from api.js addBid method\", res)\r\n    return res;\r\n  }\r\n\r\n  /** Post method for when a user views a notification */\r\n\r\n  static async viewNotifications(email) {\r\n    let data = {}\r\n    console.log(\"made it to viewNotificatinos Api.js\", data)\r\n    let res = await this.request(`users/view_notifications/${email}`, data, \"post\");\r\n    console.log(\"res from viewNotifications Api.js\", res)\r\n\r\n    // console.log(\"res from api.js addBid method\", res)\r\n    return res;\r\n  }\r\n\r\n  static async getProductsEndingSoon() {\r\n    let res = await this.request(`products/auctionsEndingSoon`);\r\n    console.log(\"res from getEndingSoon in API.js\",res)\r\n    return res;\r\n  }\r\n\r\n  static async getWinsFeed() {\r\n    let res = await this.request(`products/recentWinners`);\r\n    console.log(\"res in api.js getWinsFeed()\",res)\r\n    return res;\r\n  }\r\n\r\n  static async recentBidders() {\r\n    let res = await this.request(`products/recentBidders`);\r\n    console.log(\"res from getEndingSoon in API.js\",res)\r\n    return res;\r\n  }\r\n\r\n  static async getUser(username) {\r\n    // console.log(\"madeit to getUser API method\")\r\n    let res = await this.request(`users/${username}`);\r\n    console.log(\"madeit to getUser API method after this.request\",res)\r\n\r\n    return res;\r\n  }\r\n \r\n}\r\n\r\nexport default FreebayAPI;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\Home.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\stylePrimarySearchAppBar.js",["688","689","690","691"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  balance: {\r\n    color: \"#282828\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    display: \"flex\"\r\n  },\r\n  flexbox: {\r\n    display: \"flex\"\r\n  },\r\n  logo: {\r\n    width: \"150px\"\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    textTransform: 'none',\r\n    color: '#282828'\t\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.black, 0.07),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.black, 0.12),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: theme.spacing(2),\r\n    flex: 3,\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(.65, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: 'black',\r\n  },\r\n  inputRoot: {\r\n    color: 'black',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '50ch',\r\n    },\r\n  },\r\n  flex: {\r\n      display: 'flex',\r\n    },\r\n  searchButton: {\r\n    background: 'none',\r\n    padding: '0px',\r\n    border: 'none',\r\n  },\r\n\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n\r\n  sectionDesktop: {\r\n    display: 'flex',\r\n  },\r\n\r\n\r\n}));\r\n\r\nexport default useStyles;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\BidConfirmation.js",["692"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport Context from \"./Context\";\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport useStyles from './Stylings/styleBidConfirmation'\r\nimport FreebayAPI from '../../Api.js'\r\nimport ProductCard from '../Products/ProductCard.js'\r\nimport {\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core/'\r\n\r\n// Displays page explaining a user's bid was successfully submitted\r\n\r\nexport default function BidConfirmation() {\r\n    const classes = useStyles();\r\n    const { currentUser } = useContext(Context);\r\n    const { id } = useParams();\r\n    const [product, setProduct] = useState(null);\r\n    const [infoLoaded, setInfoLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function getProduct(id) {\r\n\r\n          // Grab information for product bidded on\r\n          // from API using the product ID in URL\r\n          const result = await FreebayAPI.getProduct(id)\r\n\r\n          // Convert current bid (if bid placed) or starting bid \r\n          // (if no bid placed) \r\n          // to float and display bid the proper price format. \r\n          // Then add to result object.\r\n          if (result.bidPrice){\r\n            let bidDisplay = parseFloat(result.bidPrice).toFixed(2);\r\n            result.bidDisplay = bidDisplay;\r\n          } else {\r\n            let bidDisplay = parseFloat(result.startingBid).toFixed(2);\r\n            result.bidDisplay = bidDisplay;\r\n          }\r\n          \r\n          setProduct(result);\r\n          setInfoLoaded(true)\r\n        }\r\n        setInfoLoaded(false)\r\n        getProduct(id)\r\n      }, []);\r\n\r\n    // Render loading text while page loads information from API\r\n    if (!infoLoaded) return(                 \r\n        <Typography component=\"h1\" variant=\"h3\">\r\n            Loading...\r\n        </Typography>\r\n    )\r\n\r\n    return (\r\n        <Grid container spacing={2} justify=\"center\" align=\"center\"><br/>\r\n        <br/>\r\n        <br/>\r\n            <Grid xs={12} item>\r\n              <br/>\r\n            <EmojiEmotionsIcon className={classes.smiley} color=\"disabled\" />\r\n                <Typography component=\"h3\" variant=\"h5\">\r\n                    Congrats {currentUser.firstName}, you're now the high bidder!\r\n                </Typography>\r\n                 <br/>\r\n            </Grid>\r\n            <ProductCard product={product}/>\r\n        </Grid>\r\n    );\r\n}","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\WelcomePage.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Login.js",["693","694"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Profile.js",["695","696","697","698","699","700","701","702","703","704"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport {useParams} from 'react-router-dom';\r\nimport FreebayAPI from '../../Api.js'\r\nimport Context from \"../Common/Context\";\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport UserBidsOrWinsFeed from \"../Feeds/UserBidsOrWinsFeed\";\r\nimport LoadingText from \"../Common/LoadingText\"\r\nimport Alert from \"../Common/Alert\"\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport useStyles from './Stylings/styleProfile.js'\r\n\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardHeader,\r\n} from '@material-ui/core/'\r\n\r\n\r\n// A users profile. If the profile is the current user, notifications \r\n// are displayed. If the profile does not match the current user, \r\n// notifications would not be displayed.\r\n\r\n\r\nfunction Profile() {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const {username} = useParams();\r\n  const { currentUser } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    async function getUserProfile(username) {\r\n      try {\r\n        let userObject = await FreebayAPI.getUser(username);\r\n        console.log(\"username from params in Profile component\", username)\r\n        setUserProfile(userObject);\r\n      } catch(err){\r\n        return  history.push(\"/notFound\")\r\n      }\r\n\r\n    }\r\n    getUserProfile(username);\r\n    console.log(\"userProfile,\", userProfile)\r\n  }, []);\r\n\r\n\r\n  if (!userProfile) return <LoadingText />;\r\n\r\n  const {  firstName, lastName, products_won, highest_bids } = userProfile\r\n\r\n  return (\r\n    <Container >\r\n      <Grid container justify=\"center\" alignItems=\"center\"   direction=\"row\" spacing={5}>\r\n        <Grid item xs={12} sm={9} md={6}><br/>\r\n          <Paper variant=\"outlined\"> \r\n            <CardContent className={classes.profileHeader}>\r\n              <Typography className = {classes.userName} variant=\"h5\" component=\"h2\" align=\"center\">\r\n              {username}\r\n              </Typography>\r\n              <Typography className={classes.pos} color=\"textSecondary\" align=\"center\">\r\n                  {firstName} {lastName}\r\n                </Typography>\r\n            </CardContent>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\" alignItems=\"center\"   direction=\"row\" spacing={3} className={classes.feedGrid}>\r\n        <Grid item xs={12} md={7}>\r\n            <Notifications userProfile={userProfile}/>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} spacing={3} justify=\"center\" alignItems=\"top\" direction=\"row\" className={classes.feedGrid}>\r\n        <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n              Products Won\r\n          </Typography>\r\n            <UserBidsOrWinsFeed products={products_won}/>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} spacing={3} justify=\"center\" alignItems=\"top\" direction=\"row\" className={classes.feedGrid}>\r\n          <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n              Current Bids\r\n          </Typography>\r\n            <UserBidsOrWinsFeed products={highest_bids}/>\r\n        </Grid>\r\n      </Grid>\r\n\r\n        \r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Signup.js",["705","706"],"import React, { useState, useContext } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Context from \"../Common/Context\";\r\nimport useStyles from \"./Stylings/styleSignup\"\r\n\r\n// Renders a Signin form to create an account. User is redirected \r\n// to the home page once an account has been created.\r\n\r\nexport default function Signup() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { signup, logout } = useContext(Context);\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n  });\r\n  const [formErrors, setFormErrors] = useState([]);\r\n\r\n  console.debug(\r\n      \"Signup\",\r\n      \"signup=\", typeof signup,\r\n      \"formData=\", formData,\r\n      \"formErrors=\", formErrors,\r\n  );\r\n\r\n  /** Handle form submit:\r\n   *\r\n   * Calls login func prop and, if successful, redirect to /companies.\r\n   */\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let result = await signup(formData);\r\n    if (result.success) {\r\n      history.push(\"/welcome\");\r\n    } else {\r\n      setFormErrors(result.errors);\r\n    }\r\n  }\r\n\r\n  /** Update form data field */\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setFormData(data => ({ ...data, [name]: value }));\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h4\">\r\n          Hello\r\n        </Typography><br></br>\r\n        <span style={{display: 'inline-block'}}>\r\n          Create a freeBay account\r\n        </span>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {formErrors.length\r\n                    ? \r\n                    <div>\r\n                      <br/>\r\n                      <Alert variant=\"filled\" severity=\"error\">\r\n                        {formErrors}\r\n                      </Alert>\r\n                    </div>\r\n                    : null\r\n                }\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/Login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link><br/>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n    </Container>\r\n  );\r\n}","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\ProductDetails.js",["707","708","709","710","711","712","713","714","715","716"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useParams, Redirect, useHistory, withRouter, ReactDOM } from 'react-router-dom';\r\nimport FreebayAPI from '../../Api.js'\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LoadingText from '../Common/LoadingText.js'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Countdown from 'react-countdown';\r\nimport useStyles from './Stylings/styleProductDetails.js'\r\nimport Context from \"../Common/Context\";\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography\r\n} from '@material-ui/core/'\r\n\r\n\r\n\r\n// Component that displays all information of a product.\r\n// Renders a countdown to the end of the auction along with an input\r\n// to allow the user to bid on the product.\r\n\r\n/** Displays all information of a product along with a form to\r\n *  bid on product, if the auction time has not expired.\r\n * \r\n *  - product: result of grabbing the desired product from API\r\n * \r\n *  - countdown: holds the imported <Countdown/> component in state\r\n * \r\n *  - bidAmount: state of entered bid into form. Updates while typing\r\n * **/\r\n\r\nfunction ProductDetails() {\r\n  const classes = useStyles();\r\n  const history = useHistory()\r\n\r\n  const [infoLoaded, setInfoLoaded] = useState(false);\r\n  const [product, setProduct] = useState(null);\r\n  const [countdown, setCountdown] = useState([]);\r\n  const [bidAmount, setBidAmount] = useState(null);\r\n  const [formErrors, setFormErrors] = useState(null);\r\n\r\n\r\n  const {id} = useParams();\r\n  const { currentUser, setUpdateAppBar } = useContext(Context);\r\n\r\n  // Grab the product from the API using product ID in the URL params\r\n  // and save to the product state.\r\n  useEffect(() => {\r\n    async function getProduct(id) {\r\n      try {\r\n        const result = await FreebayAPI.getProduct(id)\r\n        // If the product has a bid, convert to float type and set with \r\n        // 2 decimal places (price format) and save to bidPrice variable. \r\n        // If no bid, do the same with startingBid.\r\n        if (result.bidPrice){\r\n          let bidDisplay = parseFloat(result.bidPrice).toFixed(2);\r\n          result.bidDisplay = bidDisplay;\r\n        } else {\r\n          let bidDisplay = parseFloat(result.startingBid).toFixed(2);\r\n          result.bidDisplay = bidDisplay;\r\n        }\r\n        setProduct(result);\r\n        console.log(\"result\", result)\r\n\r\n\r\n        // Call the function that creates the auction countdown timer \r\n        getTimeLeft(result.auctionEndDt)\r\n        setInfoLoaded(true)\r\n      } catch(err){\r\n        return  history.push(\"/notFound\")\r\n      }\r\n\r\n    }\r\n    setInfoLoaded(false)\r\n    getProduct(id)\r\n    console.log(\"currentUser\", currentUser)\r\n  }, []);\r\n\r\n  // Function creates the countdown timer by subtracting the current time\r\n  // from the product's auction end datetime object. Saves it to state.\r\n  function getTimeLeft(dateTime){\r\n    const auctionEndObj = new Date(dateTime)\r\n    const totalTimeLeft = Date.parse(auctionEndObj) - Date.parse(new Date());\r\n    setCountdown(totalTimeLeft);\r\n    }\r\n\r\n  // Handles the form submit of the bid and renders the appropriate\r\n  // error, if any, by saving to state.\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    if (!currentUser){\r\n      setFormErrors(\"Please login to place bid\")\r\n      return\r\n    } \r\n\r\n    const balance = parseFloat(currentUser.balance)\r\n    const bid = parseFloat(bidAmount)\r\n    const bidPrice = parseFloat(product.bidPrice)\r\n    const startingBid = parseFloat(product.startingBid)\r\n\r\n    if (isNaN(bid)){\r\n      setFormErrors(\"Please submit a real bid\")\r\n    } else if (currentUser.email === product.bidderEmail){\r\n      setFormErrors(\"You have already placed a bid on this product\")\r\n    } else if (bid > balance){\r\n      setFormErrors(\"You do not have sufficient funds to place this bid\")\r\n    } else if (bid < bidPrice){\r\n      setFormErrors(\"Please submit bid higher than the current bid\")\r\n    } else if (bid < startingBid){\r\n      setFormErrors(\"Please submit bid higher than the starting bid\")\r\n    } else{\r\n      await FreebayAPI.addBid(id, bid)\r\n\r\n      // Trigger a rerender of the CurrentUser by changing the\r\n      // UpdateAppBar state. This will correctly show the user's\r\n      // current balance amount and amount of notifications in the \r\n      // <PrimarySearchAppBar/> component.\r\n      setUpdateAppBar(true)\r\n      // Go to bid confirmation page\r\n      history.push('/bidPlaced/' + product.id)\r\n    }\r\n  }\r\n\r\n  function handleChange(evt) {\r\n    setBidAmount(evt.target.value);\r\n  }\r\n\r\n  if (!infoLoaded) return <LoadingText />;\r\n\r\n  return (\r\n    <Container>\r\n      <br/>\r\n      <Grid container spacing={4} justifyContent=\"center\" alignItems=\"center\" >\r\n        <Grid item  xs={12} md={6}>\r\n          <div className={classes.imageContainer}>\r\n          <img\r\n              className={classes.media}\r\n              src={product.imageUrl}\r\n            />\r\n            </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent className={classes.content} justify=\"center\">\r\n                <Typography variant=\"h5\">\r\n                  {product.name}\r\n                </Typography><br/>\r\n                <div className={classes.ratingContainer}>\r\n                <Rating name=\"read-only\" value={product.rating} size=\"medium\" \r\n                readOnly display=\"inline\"/>      \r\n                <Typography variant=\"caption\" display=\"inline\" \r\n                className=\"ratingNumber\" color=\"textSecondary\">\r\n                  {product.numOfRatings} ratings\r\n                </Typography>\r\n                </div>\r\n                <br/>\r\n\r\n                <hr className={classes.hr}/><br/>\r\n              {/* If the product's auction has ended, render nothing.\r\n              Otherwise, render the currentBid and bidderUsername. If no bidder,\r\n              render the starting price of the product.*/}\r\n              { product.auctionEnded\r\n              ? \r\n                <div></div>\r\n              : \r\n                product.bidPrice \r\n                ?\r\n                  <div>\r\n                    <Typography variant=\"h4\" className={classes.price} \r\n                    color=\"textPrimary\" display=\"inline\" >\r\n                      ${product.bidDisplay}{' '}                 \r\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\" \r\n                      display=\"inline\">\r\n                        is the current bid by {' '} \r\n                        <Link href={\"/Profile/\" + product.bidderUsername}>\r\n                          {product.bidderUsername}\r\n                        </Link>\r\n                      </Typography>\r\n                    </Typography>\r\n                    <form className={classes.root} onSubmit={handleSubmit} \r\n                    noValidate autoComplete=\"off\">\r\n                      <TextField id=\"outlined-basic\" label=\"Bid\" variant=\"outlined\" \r\n                      size=\"small\" onChange={handleChange}/>\r\n                      <span>{\"  \"}</span>       \r\n                      <Button size=\"medium\" type=\"submit\" variant=\"contained\" \r\n                      color=\"Primary\" className={classes.margin}>\r\n                        Place Bid\r\n                      </Button>\r\n                    </form>\r\n                  </div>\r\n                : \r\n                  <div>\r\n                    <Typography variant=\"h4\" className={classes.price} \r\n                    color=\"textPrimary\"  display=\"inline\">\r\n                      ${product.bidDisplay}{' '}\r\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\" \r\n                      display=\"inline\">\r\n                        is the starting bid\r\n                      </Typography>\r\n                    </Typography>\r\n                \r\n                    <form className={classes.root} onSubmit={handleSubmit} \r\n                    noValidate autoComplete=\"off\">\r\n\r\n                    <TextField id=\"outlined-basic\" label=\"Bid\" variant=\"outlined\" \r\n                    size=\"small\" onChange={handleChange}/>\r\n                    <span>{\"  \"}</span>       \r\n                    <Button size=\"medium\" type=\"submit\" variant=\"contained\" \r\n                    color=\"Primary\" className={classes.margin}>\r\n                      Place Bid\r\n                    </Button>\r\n                    </form>\r\n                </div>\r\n              }\r\n              {/* Render errors input in the bid form, if any. If not,\r\n              render the countdown timer and number of bids. If auction has ended,\r\n              render Auction ended instead. */}\r\n                {formErrors\r\n                    ? \r\n                      <div>\r\n                        <br/>\r\n                        <Alert severity=\"error\" variant=\"filled\">{formErrors}</Alert>\r\n                      </div>\r\n                    : \r\n                      product.auctionEnded\r\n                      ? \r\n                        <div> \r\n                          <Typography  variant=\"subtitle1\" color=\"textSecondary\" \r\n                          component=\"p\" fontWeight=\"fontWeightBold\" display=\"inline\">\r\n                            Auction ended!\r\n                          </Typography>\r\n                        </div>\r\n                      :\r\n                        <div><br/>\r\n                          <Countdown date={Date.now() + countdown} renderer={props => \r\n                          <Typography  variant=\"subtitle1\" color=\"textSecondary\" \r\n                          component=\"p\">\r\n                            {'  '}{\"Time left: \" + props.days + \"d \" + \r\n                            props.hours + \"h \" + props.minutes + \"m \" + \r\n                            props.seconds + \"s\"}\r\n                          </Typography>} \r\n                        />\r\n\r\n                        <Typography  variant=\"subtitle1\" color=\"textSecondary\" \r\n                        component=\"p\" fontWeight=\"fontWeightBold\">\r\n                        {product.bidCount}\r\n                          { \r\n                          (product.bidCount == 1)\r\n                          ? \" bid\" : \" bids\"\r\n                          }\r\n                        </Typography>\r\n                        </div>\r\n                    }\r\n\r\n              </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item  xs={12}>\r\n          <Card variant=\"outlined\">\r\n              <CardContent className={classes.content}>\r\n                <Typography variant=\"h5\">\r\n                  Description\r\n                </Typography><br/>\r\n\r\n                <hr className={classes.hr}/>\r\n                <br/>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  {product.description} \r\n                  </Typography>\r\n\r\n              </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default withRouter(ProductDetails);\r\n\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\Category.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\NotificationItem.js",["717","718","719","720","721","722","723","724","725","726","727"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\styleCategoriesBar.js",["728"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  center: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    border: 1,\r\n  },\r\n  menuButton: {\r\n    maxWidth: '30px', \r\n    maxHeight: '30px', \r\n    minWidth: '30px', \r\n    minHeight: '30px'\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '40px'\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n    textTransform: 'none',\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    textTransform: 'none',\r\n  },\r\n  inputRoot: {\r\n    color: 'black',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    backgroundColor: \"#FFFFFF\",\r\n    border: 1,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  flexItem: {\r\n    flex: 1,\r\n    textTransform: 'none',\r\n    },\r\n  accordion: {\r\n    border: '1px solid rgba(0, 0, 0, .125)',\r\n    boxShadow: 'none',\r\n    '&:not(:last-child)': {\r\n      borderBottom: 0,\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n    '&$expanded': {\r\n      margin: 'auto',\r\n    },\r\n  },\r\n  expanded: {},\r\n}))\r\n\r\nexport default  useStyles;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\Stylings\\styleHome.js",["729"],"import { makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 600,\r\n      md: 960,\r\n      lg: 1280,\r\n      xl: 1920,\r\n    },\r\n  },\r\n})\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  feedTitle: {\r\n    fontWeight: 600,\r\n    \r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\ProductCard.js",["730"],"import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport useStyles from './Stylings/styleProductCard.js'\r\n\r\n\r\n// Card that displays its name, image, auction time left,\r\n// rating, and current bid price. Rendered within the ProductList component.\r\n// More detailed and bigger version of the ProductCardMini component.\r\n\r\nfunction ProductCard({product}) {\r\n  const classes = useStyles();\r\n  \r\n  let {id, name, startingBid, imageUrl, rating, auctionEndDt, \r\n      bidderUsername, bidPrice } = product\r\n  let bidDisplay;\r\n\r\n  // If the product has a bidPrice, display it on card, \r\n  // otherwise show starting bid.\r\n  // If either bidPrice or startingBid, set as a float \r\n  // type and show 2 decimal places\r\n  // to be displayed as price on a card. \r\n  if (bidPrice){\r\n    bidDisplay = parseFloat(bidPrice).toFixed(2);\r\n  } else {\r\n    bidDisplay = parseFloat(startingBid).toFixed(2);\r\n  }\r\n\r\n  // Set a shortened product name ending with \"...\" to a variable \r\n  // to be displayed on card\r\n  const shortName = name.substring(0,50) + \"...\"\r\n\r\n  // Function that subtracts current datetime object from the \r\n  // ending auction datetime parameter\r\n  // and returns an object with the days and hours remaining in the auction. \r\n  function getTimeRemaining(endtime){\r\n    const total = Date.parse(endtime) - Date.parse(new Date());\r\n    const hours = Math.floor( (total/(1000*60*60)) % 24 );\r\n    const days = Math.floor( total/(1000*60*60*24) );\r\n    return { days, hours };\r\n  }\r\n\r\n  // Execute getTimeRemaining with the product's ending \r\n  // datetime object as a parameter\r\n  const auctionEndObj = new Date(auctionEndDt)\r\n  const countdown = getTimeRemaining(auctionEndObj)\r\n\r\n  // Save the remaining days and hours of the auction \r\n  // into a string to be displayed on the card.\r\n  const countdownDisplay = `${countdown.days}d ${countdown.hours}h`\r\n\r\n  return (\r\n    <Link href={\"/product/\" + id} color=\"inherit\" \r\n    style={{ textDecoration: 'none' }}>\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardActionArea>\r\n        <div className={classes.imageContainer}>\r\n          <img className={classes.media} src={imageUrl} title={shortName} />\r\n        </div>\r\n        <CardContent style={{ minHeight: \"120px\"}}>\r\n          <div>\r\n            <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n              {shortName}\r\n            </Typography>\r\n            <Rating name=\"read-only\" value={rating} \r\n            size=\"small\" readOnly display=\"inline\"/>   \r\n          </div>\r\n          { bidderUsername\r\n          ?\r\n            <div>\r\n              <Typography variant=\"h6\" color=\"body2\" component=\"p\"\r\n               display=\"inline\"  className={classes.price}>\r\n                ${bidDisplay}{'  '}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" \r\n              component=\"p\" display=\"inline\" >\r\n                bid by {bidderUsername}\r\n              </Typography>\r\n            </div>\r\n          :\r\n            <div>\r\n              <Typography variant=\"h6\" color=\"body2\" component=\"p\"\r\n               display=\"inline\" fontWeight=\"fontWeightBold\" \r\n               className={classes.price}>\r\n                ${bidDisplay}{'  '}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" \r\n              display=\"inline\" component=\"p\">\r\n                Starting bid\r\n              </Typography>\r\n            </div>\r\n          }\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {countdownDisplay}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  </Link>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\ProductCardMini.js",["731","732"],"import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport useStyles from './Stylings/styleProductCardMini.js';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n// Card that displays its image, bids, rating, and current bid price. \r\n// Rendered within the RecentBidders component and a template to be used for \r\n// other types of feeds. less details and smaller version of the \r\n// ProductCard component.\r\n\r\nfunction ProductCardMini({product}) {\r\n  const classes = useStyles();\r\n  console.log(\"product in ProductCardMini\", product)\r\n\r\n  let {id, name, startingBid, imageUrl, rating,\r\n      bidderUsername, bidPrice, bidCount} = product\r\n  let bidDisplay;\r\n\r\n  // If the product has a bidPrice, display it on card, otherwise \r\n  // show starting bid. If either bidPrice or startingBid, set as a float type \r\n  // and show 2 decimal places to be displayed as price on a card. \r\n  if (bidPrice){\r\n    bidDisplay = parseFloat(bidPrice).toFixed(2);\r\n  } else {\r\n    bidDisplay = parseFloat(startingBid).toFixed(2);\r\n  }\r\n\r\n  // Set a shortened product name ending with \"...\" to a \r\n  // variable to be displayed on card\r\n  const shortName = name.substring(0,50) + \"...\"\r\n\r\n  return (\r\n    <Grid item xs={6} sm={6} md={4} lg={3}>\r\n      <Link href={\"/product/\" + id} \r\n            color=\"inherit\" \r\n            style={{ textDecoration: 'none' }}\r\n      >\r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <CardActionArea>\r\n            <div className={classes.imageContainer}>\r\n              <img className={classes.media} src={imageUrl} title={shortName} />\r\n            </div>\r\n            <CardContent className={ classes.cardContent }>\r\n              <Rating name=\"read-only\" value={rating} size=\"small\" \r\n              readOnly display=\"inline\"\r\n              />  \r\n              <div>\r\n                <Typography variant=\"h6\" color=\"body2\" \r\n                component=\"p\" display=\"inline\"  \r\n                className={classes.price}\r\n                >\r\n                  ${bidDisplay}{'  '}\r\n                </Typography>\r\n                <Typography variant=\"body2\" \r\n                color=\"textSecondary\" component=\"p\" \r\n                display=\"inline\" \r\n                >\r\n                  {bidCount} \r\n                  { \r\n                    (bidCount == 1)\r\n                    ? \" bid\" : \" bids\"\r\n                  }\r\n                </Typography>\r\n              </div>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                Current bid by \r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {bidderUsername}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Link>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ProductCardMini;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\Stylings\\styleCategory.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductDetails.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleBidConfirmation.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleWelcomePage.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Stylings\\styleNotifications.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductCard.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductCardMini.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductList.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Stylings\\styleProfile.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Stylings\\styleSignup.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Notifications.js",["733","734","735","736","737","738","739","740","741","742"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\User\\Stylings\\styleLogin.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\NotFound.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\FeedItem.js",["743"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\hooks\\useLocalStorageHook.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\LoadingText.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\Stylings\\styleHomepagePic.js",["744"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\UserBidsOrWinsFeed.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleBidsOrWinsFeed.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Common\\Alert.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\RecentBiddersFeed.js",["745","746"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FreebayAPI from '../../Api';\r\nimport ProductCardMini from '../Products/ProductCardMini.js';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport useStyles from './Stylings/styleRecentBidsFeed.js';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport withWidth from '@material-ui/core/withWidth';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\n\r\n\r\n/* Renders a list of <ProductCardMini/> components of products with\r\n   the most recent bids. To be displayed on the Home page */\r\n   \r\n\r\nfunction RecentBiddersFeed() {\r\n  const [recentProductsBiddedOn, setRecentProductsBiddedOn] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const handleGetRecentBidders = async () => {\r\n      const result = await FreebayAPI.recentBidders()\r\n      setRecentProductsBiddedOn(result);\r\n    }\r\n    handleGetRecentBidders();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <Container className={classes.feedContainer}>\r\n    { recentProductsBiddedOn.length > 0\r\n      ?\r\n      <Grid  container spacing={4} direction=\"row\" justify=\"center\" >\r\n        { recentProductsBiddedOn[0] \r\n        ?\r\n          <ProductCardMini product={recentProductsBiddedOn[0]} />\r\n        : <div></div>\r\n        }\r\n        { recentProductsBiddedOn[1] \r\n        ?\r\n          <ProductCardMini product={recentProductsBiddedOn[1]} />\r\n        : <div></div>\r\n        }\r\n        { recentProductsBiddedOn[2] \r\n        ?\r\n          <Hidden smDown>\r\n            <ProductCardMini product={recentProductsBiddedOn[2]} />\r\n          </Hidden>\r\n        : <div></div>\r\n        }\r\n        { recentProductsBiddedOn[3] \r\n        ?\r\n          <Hidden mdDown>\r\n            <ProductCardMini product={recentProductsBiddedOn[3]} />\r\n          </Hidden>\r\n        : <div></div>\r\n        }\r\n      </Grid>\r\n      :\r\n      <Grid  container spacing={8} direction=\"row\" justify=\"flex-start\" mt=\"10\" >\r\n        <ListItem alignItems=\"flex-start\">\r\n            <ListItemText secondary=\"Loading...\"/>\r\n        </ListItem>\r\n      </Grid>\r\n\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n\r\nRecentBiddersFeed.propTypes = {\r\n  width: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs']).isRequired,\r\n};\r\n\r\nexport default withWidth()(RecentBiddersFeed)\r\n\r\n\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleRecentBidsFeed.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\ProductsList.js",["747","748","749","750","751"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport ProductCard from './ProductCard.js'\r\nimport {\r\n    Grid\r\n  } from '@material-ui/core/'\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport FreebayAPI from '../../Api.js'\r\nimport { useLocation } from 'react-router-dom';\r\nimport useStyles from './Stylings/styleProductList.js'\r\nimport {Typography} from '@material-ui/core/'\r\nimport Context from \"../Common/Context\";\r\nimport LoadingText from \"../Common/LoadingText\";\r\nimport {Redirect, useHistory, Link} from 'react-router-dom';\r\n\r\n\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst ProductsList = ({location}) => {\r\n  const classes = useStyles();\r\n  const [nextPageQuery, setNextPageQuery] = useState(null);\r\n  const [prevPageQuery, setPrevPageQuery] = useState(null);\r\n  const [pageTitle, setPageTitle] = useState(null)\r\n  const { products, setProducts } = useContext(Context);\r\n  const history = useHistory()\r\n\r\n\r\n  let query = useQuery()\r\n  let searchQuery = Object.fromEntries(new URLSearchParams(query))\r\n\r\n // call API to grab products based on search results\r\n  useEffect(() => {\r\n    async function getProductsInCategory() {\r\n      let res = await FreebayAPI.getProducts(searchQuery);\r\n      \r\n      let productsResult = res.products\r\n      let totalAmountOfProducts = res.count\r\n\r\n      setProducts(productsResult);\r\n\r\n      \r\n      // Grab page number from the search query. If no page in query, set page to 1\r\n      let { page } = searchQuery\r\n      if (!page) {\r\n        page = \"1\"\r\n      }\r\n      page = parseInt(page)\r\n\r\n      \r\n\r\n      // Create the url query string for the link to next page\r\n      if ((totalAmountOfProducts - (page*24) > 0)) {\r\n        const nextPage = (page + 1).toString()\r\n        searchQuery[\"page\"] = nextPage\r\n        setNextPageQuery(searchQuery.toString())\r\n      } else {\r\n        setNextPageQuery(null)\r\n      }\r\n\r\n      // If not on first page, create url query string for the link to previous page\r\n      if (page > 1) {\r\n        let prevPage = (page - 1).toString()\r\n        query.set(\"page\", prevPage)\r\n        setPrevPageQuery(query.toString())\r\n      } else {\r\n        setPrevPageQuery(null)\r\n      }\r\n\r\n    }\r\n    getProductsInCategory()\r\n    // setPageTitle(products[0].subCategory)\r\n  }, []);\r\n\r\n  if (!products) return <LoadingText />;\r\n  \r\n  \r\n\r\n  return (\r\n    <Container><br/>\r\n    {\r\n      searchQuery.name\r\n      ?\r\n        <Typography variant=\"h4\" spacing={5} className={classes.listTitle}>\r\n          Search Results for \"{searchQuery.name}\"\r\n        </Typography>\r\n      :\r\n        <Typography variant=\"h4\" spacing={5} className={classes.listTitle}>\r\n          {pageTitle}\r\n        </Typography>\r\n    }\r\n      <br/>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {products.map((product) =>{\r\n          return <Grid item s={4} m={3} spacing={3}>\r\n                    <ProductCard product={product}/>\r\n                  </Grid>\r\n        })}\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        {(prevPageQuery)\r\n        ? <Button size=\"medium\" className={classes.button} \r\n          href={\"/products?\" + prevPageQuery}>\r\n            {\"< Previous page\"}\r\n          </Button>\r\n        : <Button size=\"medium\" className={classes.button} disabled>\r\n            {\"< Previous page\"}\r\n          </Button>\r\n        }\r\n        {(nextPageQuery)\r\n        ? <Button size=\"medium\" className={classes.button} \r\n          href={\"/products?\" + nextPageQuery}>\r\n            {\"Next page >\"}\r\n          </Button>\r\n        : <Button size=\"medium\" className={classes.button} disabled>\r\n            {\"Next page >\"}\r\n          </Button>\r\n        }\r\n\r\n      </Grid>\r\n      </Container>\r\n      )\r\n};\r\n\r\nexport default ProductsList;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Products\\Stylings\\styleProductListItem.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\Stylings\\styleFeedItem.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\HomePagePic2.js",["752"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport {\r\n    useStyles,\r\n    FiCard,\r\n    FiCardActions,\r\n    FiCardContent,\r\n    FiCardMedia\r\n  } from \"./Stylings/styleHomepagePic\";\r\nimport Link from '@material-ui/core/Link';\r\n\r\n// Picture to show on the homepage below CategoriesBar\r\n// Serves as a link to send users to a certain part of the freeBay website\r\n\r\nfunction HomePagePic2() {\r\n  const classes = useStyles();\r\n  return (\r\n      <div>\r\n        <Link style={{textDecoration: 'none'}} \r\n              href={\"/products?subCategory=Computers%20&%20Accessories\"}>\r\n          <Box my={0}>\r\n            <FiCard className={classes.card}>\r\n              <FiCardMedia \r\n                media=\"picture\"\r\n                alt=\"Check out our Tech!\"\r\n                image=\"/Images/electronics.jpg\"\r\n                title=\"Check out our Tech!\"\r\n              />\r\n            <FiCardContent className={classes.fiCardContent}>\r\n              <Typography variant=\"h4\" className={classes.header}>\r\n                All the best tech. For less.\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body1\"\r\n                className={classes.headerSecondary}\r\n                component=\"p\"\r\n                display=\"inline\" \r\n              >\r\n                Get it here  <ArrowForwardIcon />\r\n              </Typography >\r\n            </FiCardContent>\r\n          </FiCard>\r\n        </Box>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePagePic2;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\HomePagePic3.js",["753"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport {\r\n    useStyles,\r\n    FiCard,\r\n    FiCardActions,\r\n    FiCardContent,\r\n    FiCardMedia\r\n  } from \"./Stylings/styleHomepagePic\";\r\nimport Link from '@material-ui/core/Link';\r\n\r\n// Picture to show on the homepage below CategoriesBar\r\n// Serves as a link to send users to a certain part of the freeBay website\r\n\r\nfunction HomePagePic3() {\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n  return (\r\n      <div>\r\n        <Link style={{textDecoration: 'none'}} \r\n              href={\"/products?subCategory=Pet%20Supplies\"}>\r\n          <Box my={0}>\r\n            <FiCard className={classes.card}>\r\n              <FiCardMedia \r\n                media=\"picture\"\r\n                alt=\"Need cat food for Mittens?\"\r\n                image=\"/Images/kitten.jpg\"\r\n                title=\"Need cat food for Mittens?\"\r\n              />\r\n            <FiCardContent className={classes.fiCardContent}>\r\n              <Typography variant=\"h4\" className={classes.header}>\r\n              Need cat food for Mittens?\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body1\"\r\n                className={classes.headerSecondary}\r\n                component=\"p\"\r\n                display=\"inline\" \r\n              >\r\n                Hurry and grab it now!  <ArrowForwardIcon />\r\n              </Typography >\r\n            </FiCardContent>\r\n          </FiCard>\r\n        </Box>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePagePic3;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\HomePage\\HomePagePic1.js",["754"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport {\r\n    useStyles,\r\n    FiCard,\r\n    FiCardActions,\r\n    FiCardContent,\r\n    FiCardMedia\r\n  } from \"./Stylings/styleHomepagePic\";\r\nimport Link from '@material-ui/core/Link';\r\n\r\n// Picture to show on the homepage below CategoriesBar\r\n// Serves as a link to send users to a certain part of the freeBay website\r\n\r\nfunction HomePagePic1() {\r\n  const classes = useStyles();\r\n  return (\r\n      <div>\r\n        <Link style={{textDecoration: 'none'}} \r\n              href={\"/products?subCategory=Sports%20&%20Hobbies\"}>\r\n          <Box my={0}>\r\n            <FiCard className={classes.card}>\r\n              <FiCardMedia \r\n                media=\"picture\"\r\n                alt=\"Check out our Tech!\"\r\n                image=\"/Images/workout.jpg\"\r\n                title=\"Check out our Tech!\"\r\n              />\r\n            <FiCardContent className={classes.fiCardContent}>\r\n              <Typography variant=\"h4\" className={classes.header}>\r\n                Want to get back in shape?\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body1\"\r\n                className={classes.headerSecondary}\r\n                component=\"p\"\r\n                display=\"inline\" \r\n              >\r\n                Bid for cheap gear here <ArrowForwardIcon />\r\n              </Typography >\r\n            </FiCardContent>\r\n          </FiCard>\r\n        </Box>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePagePic1;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Feeds\\RecentWinsFeed.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\final-capstone-2-frontend\\src\\Components\\Navigation\\MobileCategory.js",["755","756","757","758","759"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport { v4 as uuid } from 'uuid';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Container from '@material-ui/core/Container';\r\nimport useStyles from './Stylings/styleCategory.js';\r\n\r\n\r\n/** Material UI button that renders a drop down list of subCategories\r\n *  links when clicked on. Each link sends user to a <ProductList> \r\n *  component displaying products of that subcategory.\r\n * \r\n * - open: Boolean state that, when true, shows that the dropdown menu is open\r\n *  */\r\n\r\nexport default function MobileCategory({subCategories}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container>\r\n        <MenuList style={{ minWidth: \"200px\" }}>\r\n        {subCategories.map((item)=>{\r\n            return <Link id={uuid()} \r\n                    href={\"/products?subCategory=\" + item} \r\n                    style={{ textDecoration: 'none' }}\r\n                    >\r\n                      <MenuItem style={{color: \"#282828\"}} id={uuid()}  >\r\n                        {item}\r\n                      </MenuItem>\r\n                    </Link>\r\n          })}\r\n        </MenuList>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"760","replacedBy":"761"},{"ruleId":"762","replacedBy":"763"},{"ruleId":"764","severity":1,"message":"765","line":61,"column":6,"nodeType":"766","endLine":61,"endColumn":27,"suggestions":"767"},{"ruleId":"768","severity":1,"message":"769","line":2,"column":10,"nodeType":"770","messageId":"771","endLine":2,"endColumn":14},{"ruleId":"768","severity":1,"message":"772","line":2,"column":16,"nodeType":"770","messageId":"771","endLine":2,"endColumn":26},{"ruleId":"768","severity":1,"message":"773","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":12},{"ruleId":"768","severity":1,"message":"774","line":19,"column":9,"nodeType":"770","messageId":"771","endLine":19,"endColumn":17},{"ruleId":"768","severity":1,"message":"775","line":23,"column":8,"nodeType":"770","messageId":"771","endLine":23,"endColumn":20},{"ruleId":"768","severity":1,"message":"776","line":24,"column":8,"nodeType":"770","messageId":"771","endLine":24,"endColumn":16},{"ruleId":"768","severity":1,"message":"777","line":40,"column":10,"nodeType":"770","messageId":"771","endLine":40,"endColumn":18},{"ruleId":"768","severity":1,"message":"778","line":40,"column":20,"nodeType":"770","messageId":"771","endLine":40,"endColumn":31},{"ruleId":"768","severity":1,"message":"779","line":67,"column":9,"nodeType":"770","messageId":"771","endLine":67,"endColumn":22},{"ruleId":"764","severity":1,"message":"780","line":99,"column":6,"nodeType":"766","endLine":99,"endColumn":29,"suggestions":"781"},{"ruleId":"782","severity":1,"message":"783","line":130,"column":62,"nodeType":"784","endLine":130,"endColumn":86},{"ruleId":"768","severity":1,"message":"785","line":14,"column":8,"nodeType":"770","messageId":"771","endLine":14,"endColumn":27},{"ruleId":"768","severity":1,"message":"772","line":2,"column":10,"nodeType":"770","messageId":"771","endLine":2,"endColumn":20},{"ruleId":"768","severity":1,"message":"786","line":6,"column":8,"nodeType":"770","messageId":"771","endLine":6,"endColumn":17},{"ruleId":"768","severity":1,"message":"787","line":19,"column":41,"nodeType":"770","messageId":"771","endLine":19,"endColumn":47},{"ruleId":"768","severity":1,"message":"788","line":19,"column":49,"nodeType":"770","messageId":"771","endLine":19,"endColumn":61},{"ruleId":"789","severity":1,"message":"790","line":61,"column":11,"nodeType":"791","endLine":65,"endColumn":13},{"ruleId":"768","severity":1,"message":"792","line":13,"column":8,"nodeType":"770","messageId":"771","endLine":13,"endColumn":15},{"ruleId":"768","severity":1,"message":"793","line":29,"column":24,"nodeType":"770","messageId":"771","endLine":29,"endColumn":39},{"ruleId":"764","severity":1,"message":"794","line":57,"column":14,"nodeType":"795","endLine":57,"endColumn":28},{"ruleId":"764","severity":1,"message":"796","line":63,"column":6,"nodeType":"766","endLine":63,"endColumn":8,"suggestions":"797"},{"ruleId":"768","severity":1,"message":"772","line":2,"column":10,"nodeType":"770","messageId":"771","endLine":2,"endColumn":20},{"ruleId":"768","severity":1,"message":"798","line":5,"column":8,"nodeType":"770","messageId":"771","endLine":5,"endColumn":11},{"ruleId":"768","severity":1,"message":"774","line":6,"column":20,"nodeType":"770","messageId":"771","endLine":6,"endColumn":28},{"ruleId":"768","severity":1,"message":"799","line":6,"column":54,"nodeType":"770","messageId":"771","endLine":6,"endColumn":62},{"ruleId":"768","severity":1,"message":"800","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":19},{"ruleId":"768","severity":1,"message":"801","line":13,"column":8,"nodeType":"770","messageId":"771","endLine":13,"endColumn":24},{"ruleId":"768","severity":1,"message":"786","line":24,"column":3,"nodeType":"770","messageId":"771","endLine":24,"endColumn":12},{"ruleId":"764","severity":1,"message":"802","line":66,"column":6,"nodeType":"766","endLine":66,"endColumn":8,"suggestions":"803"},{"ruleId":"789","severity":1,"message":"790","line":123,"column":11,"nodeType":"791","endLine":126,"endColumn":15},{"ruleId":"804","severity":1,"message":"805","line":194,"column":45,"nodeType":"806","messageId":"807","endLine":194,"endColumn":47},{"ruleId":"760","replacedBy":"808"},{"ruleId":"762","replacedBy":"809"},{"ruleId":"768","severity":1,"message":"772","line":2,"column":10,"nodeType":"770","messageId":"771","endLine":2,"endColumn":20},{"ruleId":"768","severity":1,"message":"810","line":12,"column":8,"nodeType":"770","messageId":"771","endLine":12,"endColumn":17},{"ruleId":"768","severity":1,"message":"798","line":13,"column":8,"nodeType":"770","messageId":"771","endLine":13,"endColumn":11},{"ruleId":"768","severity":1,"message":"811","line":19,"column":3,"nodeType":"770","messageId":"771","endLine":19,"endColumn":7},{"ruleId":"768","severity":1,"message":"812","line":22,"column":3,"nodeType":"770","messageId":"771","endLine":22,"endColumn":13},{"ruleId":"768","severity":1,"message":"813","line":35,"column":11,"nodeType":"770","messageId":"771","endLine":35,"endColumn":22},{"ruleId":"764","severity":1,"message":"814","line":45,"column":6,"nodeType":"766","endLine":45,"endColumn":8,"suggestions":"815"},{"ruleId":"768","severity":1,"message":"816","line":49,"column":33,"nodeType":"770","messageId":"771","endLine":49,"endColumn":38},{"ruleId":"768","severity":1,"message":"817","line":49,"column":40,"nodeType":"770","messageId":"771","endLine":49,"endColumn":47},{"ruleId":"768","severity":1,"message":"818","line":49,"column":49,"nodeType":"770","messageId":"771","endLine":49,"endColumn":61},{"ruleId":"768","severity":1,"message":"819","line":49,"column":63,"nodeType":"770","messageId":"771","endLine":49,"endColumn":75},{"ruleId":"768","severity":1,"message":"820","line":49,"column":77,"nodeType":"770","messageId":"771","endLine":49,"endColumn":90},{"ruleId":"768","severity":1,"message":"821","line":1,"column":17,"nodeType":"770","messageId":"771","endLine":1,"endColumn":25},{"ruleId":"768","severity":1,"message":"822","line":1,"column":27,"nodeType":"770","messageId":"771","endLine":1,"endColumn":36},{"ruleId":"768","severity":1,"message":"772","line":1,"column":73,"nodeType":"770","messageId":"771","endLine":1,"endColumn":83},{"ruleId":"768","severity":1,"message":"776","line":3,"column":8,"nodeType":"770","messageId":"771","endLine":3,"endColumn":16},{"ruleId":"768","severity":1,"message":"823","line":4,"column":8,"nodeType":"770","messageId":"771","endLine":4,"endColumn":22},{"ruleId":"768","severity":1,"message":"775","line":5,"column":8,"nodeType":"770","messageId":"771","endLine":5,"endColumn":20},{"ruleId":"768","severity":1,"message":"824","line":6,"column":8,"nodeType":"770","messageId":"771","endLine":6,"endColumn":14},{"ruleId":"768","severity":1,"message":"825","line":7,"column":8,"nodeType":"770","messageId":"771","endLine":7,"endColumn":12},{"ruleId":"768","severity":1,"message":"811","line":9,"column":8,"nodeType":"770","messageId":"771","endLine":9,"endColumn":12},{"ruleId":"768","severity":1,"message":"826","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":18},{"ruleId":"827","severity":1,"message":"828","line":85,"column":1,"nodeType":"829","endLine":91,"endColumn":3},{"ruleId":"768","severity":1,"message":"830","line":1,"column":8,"nodeType":"770","messageId":"771","endLine":1,"endColumn":13},{"ruleId":"768","severity":1,"message":"821","line":1,"column":17,"nodeType":"770","messageId":"771","endLine":1,"endColumn":25},{"ruleId":"768","severity":1,"message":"831","line":1,"column":27,"nodeType":"770","messageId":"771","endLine":1,"endColumn":37},{"ruleId":"768","severity":1,"message":"822","line":1,"column":39,"nodeType":"770","messageId":"771","endLine":1,"endColumn":48},{"ruleId":"768","severity":1,"message":"832","line":19,"column":9,"nodeType":"770","messageId":"771","endLine":19,"endColumn":19},{"ruleId":"768","severity":1,"message":"833","line":20,"column":9,"nodeType":"770","messageId":"771","endLine":20,"endColumn":25},{"ruleId":"768","severity":1,"message":"834","line":22,"column":9,"nodeType":"770","messageId":"771","endLine":22,"endColumn":21},{"ruleId":"768","severity":1,"message":"835","line":26,"column":9,"nodeType":"770","messageId":"771","endLine":26,"endColumn":20},{"ruleId":"768","severity":1,"message":"836","line":34,"column":12,"nodeType":"770","messageId":"771","endLine":34,"endColumn":29},{"ruleId":"768","severity":1,"message":"837","line":51,"column":9,"nodeType":"770","messageId":"771","endLine":51,"endColumn":30},{"ruleId":"768","severity":1,"message":"838","line":59,"column":9,"nodeType":"770","messageId":"771","endLine":59,"endColumn":24},{"ruleId":"768","severity":1,"message":"839","line":64,"column":9,"nodeType":"770","messageId":"771","endLine":64,"endColumn":29},{"ruleId":"768","severity":1,"message":"840","line":68,"column":9,"nodeType":"770","messageId":"771","endLine":68,"endColumn":20},{"ruleId":"782","severity":1,"message":"783","line":75,"column":37,"nodeType":"784","endLine":75,"endColumn":62},{"ruleId":"768","severity":1,"message":"772","line":11,"column":10,"nodeType":"770","messageId":"771","endLine":11,"endColumn":20},{"ruleId":"841","severity":1,"message":"842","line":29,"column":3,"nodeType":"843","messageId":"807","endLine":29,"endColumn":13},{"ruleId":"768","severity":1,"message":"772","line":2,"column":10,"nodeType":"770","messageId":"771","endLine":2,"endColumn":20},{"ruleId":"768","severity":1,"message":"844","line":4,"column":8,"nodeType":"770","messageId":"771","endLine":4,"endColumn":15},{"ruleId":"768","severity":1,"message":"845","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":13},{"ruleId":"768","severity":1,"message":"846","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":23},{"ruleId":"768","severity":1,"message":"831","line":1,"column":38,"nodeType":"770","messageId":"771","endLine":1,"endColumn":48},{"ruleId":"768","severity":1,"message":"845","line":8,"column":8,"nodeType":"770","messageId":"771","endLine":8,"endColumn":13},{"ruleId":"768","severity":1,"message":"811","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":12},{"ruleId":"768","severity":1,"message":"847","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":19},{"ruleId":"768","severity":1,"message":"831","line":1,"column":38,"nodeType":"770","messageId":"771","endLine":1,"endColumn":48},{"ruleId":"768","severity":1,"message":"845","line":8,"column":8,"nodeType":"770","messageId":"771","endLine":8,"endColumn":13},{"ruleId":"768","severity":1,"message":"811","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":12},{"ruleId":"768","severity":1,"message":"847","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":19},{"ruleId":"768","severity":1,"message":"826","line":15,"column":8,"nodeType":"770","messageId":"771","endLine":15,"endColumn":18},{"ruleId":"768","severity":1,"message":"848","line":16,"column":8,"nodeType":"770","messageId":"771","endLine":16,"endColumn":18},{"ruleId":"768","severity":1,"message":"849","line":17,"column":8,"nodeType":"770","messageId":"771","endLine":17,"endColumn":18},{"ruleId":"768","severity":1,"message":"850","line":18,"column":8,"nodeType":"770","messageId":"771","endLine":18,"endColumn":31},{"ruleId":"760","replacedBy":"851"},{"ruleId":"762","replacedBy":"852"},{"ruleId":"768","severity":1,"message":"772","line":8,"column":10,"nodeType":"770","messageId":"771","endLine":8,"endColumn":20},{"ruleId":"768","severity":1,"message":"853","line":21,"column":18,"nodeType":"770","messageId":"771","endLine":21,"endColumn":24},{"ruleId":"768","severity":1,"message":"772","line":8,"column":10,"nodeType":"770","messageId":"771","endLine":8,"endColumn":20},{"ruleId":"768","severity":1,"message":"853","line":21,"column":19,"nodeType":"770","messageId":"771","endLine":21,"endColumn":25},{"ruleId":"768","severity":1,"message":"772","line":2,"column":10,"nodeType":"770","messageId":"771","endLine":2,"endColumn":20},{"ruleId":"768","severity":1,"message":"811","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":12},{"ruleId":"782","severity":1,"message":"783","line":62,"column":21,"nodeType":"784","endLine":62,"endColumn":48},{"ruleId":"768","severity":1,"message":"811","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":12},{"ruleId":"768","severity":1,"message":"831","line":1,"column":38,"nodeType":"770","messageId":"771","endLine":1,"endColumn":48},{"ruleId":"768","severity":1,"message":"854","line":2,"column":8,"nodeType":"770","messageId":"771","endLine":2,"endColumn":12},{"ruleId":"768","severity":1,"message":"823","line":5,"column":8,"nodeType":"770","messageId":"771","endLine":5,"endColumn":22},{"ruleId":"768","severity":1,"message":"824","line":6,"column":8,"nodeType":"770","messageId":"771","endLine":6,"endColumn":14},{"ruleId":"768","severity":1,"message":"855","line":7,"column":8,"nodeType":"770","messageId":"771","endLine":7,"endColumn":18},{"ruleId":"768","severity":1,"message":"845","line":8,"column":8,"nodeType":"770","messageId":"771","endLine":8,"endColumn":13},{"ruleId":"768","severity":1,"message":"856","line":9,"column":8,"nodeType":"770","messageId":"771","endLine":9,"endColumn":12},{"ruleId":"768","severity":1,"message":"811","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":12},{"ruleId":"768","severity":1,"message":"847","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":19},{"ruleId":"768","severity":1,"message":"857","line":13,"column":8,"nodeType":"770","messageId":"771","endLine":13,"endColumn":15},{"ruleId":"768","severity":1,"message":"826","line":14,"column":8,"nodeType":"770","messageId":"771","endLine":14,"endColumn":18},{"ruleId":"768","severity":1,"message":"848","line":15,"column":8,"nodeType":"770","messageId":"771","endLine":15,"endColumn":18},{"ruleId":"768","severity":1,"message":"849","line":16,"column":8,"nodeType":"770","messageId":"771","endLine":16,"endColumn":18},{"ruleId":"768","severity":1,"message":"850","line":17,"column":8,"nodeType":"770","messageId":"771","endLine":17,"endColumn":31},{"ruleId":"768","severity":1,"message":"858","line":21,"column":8,"nodeType":"770","messageId":"771","endLine":21,"endColumn":17},{"ruleId":"768","severity":1,"message":"859","line":28,"column":9,"nodeType":"770","messageId":"771","endLine":28,"endColumn":16},{"ruleId":"768","severity":1,"message":"860","line":30,"column":10,"nodeType":"770","messageId":"771","endLine":30,"endColumn":20},{"ruleId":"768","severity":1,"message":"861","line":30,"column":22,"nodeType":"770","messageId":"771","endLine":30,"endColumn":35},{"ruleId":"768","severity":1,"message":"862","line":36,"column":13,"nodeType":"770","messageId":"771","endLine":36,"endColumn":25},{"ruleId":"768","severity":1,"message":"772","line":2,"column":10,"nodeType":"770","messageId":"771","endLine":2,"endColumn":20},{"ruleId":"768","severity":1,"message":"786","line":6,"column":8,"nodeType":"770","messageId":"771","endLine":6,"endColumn":17},{"ruleId":"768","severity":1,"message":"787","line":21,"column":41,"nodeType":"770","messageId":"771","endLine":21,"endColumn":47},{"ruleId":"768","severity":1,"message":"788","line":21,"column":49,"nodeType":"770","messageId":"771","endLine":21,"endColumn":61},{"ruleId":"768","severity":1,"message":"863","line":56,"column":9,"nodeType":"770","messageId":"771","endLine":56,"endColumn":25},{"ruleId":"789","severity":1,"message":"790","line":64,"column":11,"nodeType":"791","endLine":68,"endColumn":13},{"ruleId":"804","severity":1,"message":"805","line":82,"column":29,"nodeType":"806","messageId":"807","endLine":82,"endColumn":31},{"ruleId":"768","severity":1,"message":"821","line":1,"column":17,"nodeType":"770","messageId":"771","endLine":1,"endColumn":25},{"ruleId":"768","severity":1,"message":"831","line":1,"column":27,"nodeType":"770","messageId":"771","endLine":1,"endColumn":37},{"ruleId":"768","severity":1,"message":"864","line":2,"column":8,"nodeType":"770","messageId":"771","endLine":2,"endColumn":14},{"ruleId":"768","severity":1,"message":"865","line":3,"column":8,"nodeType":"770","messageId":"771","endLine":3,"endColumn":19},{"ruleId":"768","severity":1,"message":"866","line":4,"column":8,"nodeType":"770","messageId":"771","endLine":4,"endColumn":17},{"ruleId":"768","severity":1,"message":"856","line":5,"column":8,"nodeType":"770","messageId":"771","endLine":5,"endColumn":12},{"ruleId":"768","severity":1,"message":"772","line":8,"column":10,"nodeType":"770","messageId":"771","endLine":8,"endColumn":20},{"ruleId":"768","severity":1,"message":"858","line":9,"column":8,"nodeType":"770","messageId":"771","endLine":9,"endColumn":17},{"ruleId":"768","severity":1,"message":"867","line":10,"column":10,"nodeType":"770","messageId":"771","endLine":10,"endColumn":20},{"ruleId":"768","severity":1,"message":"868","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":13},{"ruleId":"768","severity":1,"message":"792","line":12,"column":8,"nodeType":"770","messageId":"771","endLine":12,"endColumn":15},{"ruleId":"768","severity":1,"message":"811","line":2,"column":8,"nodeType":"770","messageId":"771","endLine":2,"endColumn":12},{"ruleId":"768","severity":1,"message":"869","line":3,"column":8,"nodeType":"770","messageId":"771","endLine":3,"endColumn":22},{"ruleId":"768","severity":1,"message":"870","line":4,"column":8,"nodeType":"770","messageId":"771","endLine":4,"endColumn":19},{"ruleId":"768","severity":1,"message":"847","line":5,"column":8,"nodeType":"770","messageId":"771","endLine":5,"endColumn":19},{"ruleId":"768","severity":1,"message":"786","line":6,"column":8,"nodeType":"770","messageId":"771","endLine":6,"endColumn":17},{"ruleId":"768","severity":1,"message":"871","line":7,"column":8,"nodeType":"770","messageId":"771","endLine":7,"endColumn":18},{"ruleId":"768","severity":1,"message":"821","line":1,"column":17,"nodeType":"770","messageId":"771","endLine":1,"endColumn":25},{"ruleId":"768","severity":1,"message":"822","line":1,"column":27,"nodeType":"770","messageId":"771","endLine":1,"endColumn":36},{"ruleId":"768","severity":1,"message":"772","line":1,"column":73,"nodeType":"770","messageId":"771","endLine":1,"endColumn":83},{"ruleId":"768","severity":1,"message":"854","line":2,"column":8,"nodeType":"770","messageId":"771","endLine":2,"endColumn":12},{"ruleId":"768","severity":1,"message":"825","line":7,"column":8,"nodeType":"770","messageId":"771","endLine":7,"endColumn":12},{"ruleId":"768","severity":1,"message":"855","line":8,"column":8,"nodeType":"770","messageId":"771","endLine":8,"endColumn":18},{"ruleId":"768","severity":1,"message":"811","line":9,"column":8,"nodeType":"770","messageId":"771","endLine":9,"endColumn":12},{"ruleId":"768","severity":1,"message":"847","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":19},{"ruleId":"768","severity":1,"message":"826","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":18},{"ruleId":"768","severity":1,"message":"845","line":14,"column":8,"nodeType":"770","messageId":"771","endLine":14,"endColumn":13},{"ruleId":"768","severity":1,"message":"859","line":28,"column":9,"nodeType":"770","messageId":"771","endLine":28,"endColumn":16},{"ruleId":"768","severity":1,"message":"864","line":2,"column":8,"nodeType":"770","messageId":"771","endLine":2,"endColumn":14},{"ruleId":"768","severity":1,"message":"865","line":3,"column":8,"nodeType":"770","messageId":"771","endLine":3,"endColumn":19},{"ruleId":"768","severity":1,"message":"866","line":4,"column":8,"nodeType":"770","messageId":"771","endLine":4,"endColumn":17},{"ruleId":"768","severity":1,"message":"856","line":5,"column":8,"nodeType":"770","messageId":"771","endLine":5,"endColumn":12},{"ruleId":"768","severity":1,"message":"772","line":6,"column":10,"nodeType":"770","messageId":"771","endLine":6,"endColumn":20},{"ruleId":"768","severity":1,"message":"858","line":7,"column":8,"nodeType":"770","messageId":"771","endLine":7,"endColumn":17},{"ruleId":"768","severity":1,"message":"774","line":8,"column":20,"nodeType":"770","messageId":"771","endLine":8,"endColumn":28},{"ruleId":"768","severity":1,"message":"867","line":8,"column":30,"nodeType":"770","messageId":"771","endLine":8,"endColumn":40},{"ruleId":"768","severity":1,"message":"872","line":8,"column":42,"nodeType":"770","messageId":"771","endLine":8,"endColumn":52},{"ruleId":"768","severity":1,"message":"799","line":8,"column":54,"nodeType":"770","messageId":"771","endLine":8,"endColumn":62},{"ruleId":"768","severity":1,"message":"868","line":9,"column":8,"nodeType":"770","messageId":"771","endLine":9,"endColumn":13},{"ruleId":"768","severity":1,"message":"873","line":13,"column":8,"nodeType":"770","messageId":"771","endLine":13,"endColumn":14},{"ruleId":"768","severity":1,"message":"798","line":14,"column":8,"nodeType":"770","messageId":"771","endLine":14,"endColumn":11},{"ruleId":"768","severity":1,"message":"800","line":16,"column":8,"nodeType":"770","messageId":"771","endLine":16,"endColumn":19},{"ruleId":"768","severity":1,"message":"874","line":17,"column":8,"nodeType":"770","messageId":"771","endLine":17,"endColumn":17},{"ruleId":"768","severity":1,"message":"811","line":23,"column":3,"nodeType":"770","messageId":"771","endLine":23,"endColumn":7},{"ruleId":"768","severity":1,"message":"847","line":24,"column":3,"nodeType":"770","messageId":"771","endLine":24,"endColumn":14},{"ruleId":"768","severity":1,"message":"786","line":25,"column":3,"nodeType":"770","messageId":"771","endLine":25,"endColumn":12},{"ruleId":"764","severity":1,"message":"802","line":58,"column":10,"nodeType":"766","endLine":58,"endColumn":12,"suggestions":"875"},{"ruleId":"768","severity":1,"message":"811","line":2,"column":8,"nodeType":"770","messageId":"771","endLine":2,"endColumn":12},{"ruleId":"768","severity":1,"message":"869","line":3,"column":8,"nodeType":"770","messageId":"771","endLine":3,"endColumn":22},{"ruleId":"768","severity":1,"message":"870","line":4,"column":8,"nodeType":"770","messageId":"771","endLine":4,"endColumn":19},{"ruleId":"768","severity":1,"message":"847","line":5,"column":8,"nodeType":"770","messageId":"771","endLine":5,"endColumn":19},{"ruleId":"768","severity":1,"message":"786","line":6,"column":8,"nodeType":"770","messageId":"771","endLine":6,"endColumn":17},{"ruleId":"768","severity":1,"message":"871","line":7,"column":8,"nodeType":"770","messageId":"771","endLine":7,"endColumn":18},{"ruleId":"760","replacedBy":"876"},{"ruleId":"762","replacedBy":"877"},{"ruleId":"768","severity":1,"message":"855","line":12,"column":8,"nodeType":"770","messageId":"771","endLine":12,"endColumn":18},{"ruleId":"768","severity":1,"message":"825","line":14,"column":3,"nodeType":"770","messageId":"771","endLine":14,"endColumn":7},{"ruleId":"760","replacedBy":"878"},{"ruleId":"762","replacedBy":"879"},{"ruleId":"768","severity":1,"message":"769","line":10,"column":10,"nodeType":"770","messageId":"771","endLine":10,"endColumn":14},{"ruleId":"768","severity":1,"message":"772","line":10,"column":16,"nodeType":"770","messageId":"771","endLine":10,"endColumn":26},{"ruleId":"768","severity":1,"message":"849","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":18},{"ruleId":"768","severity":1,"message":"880","line":13,"column":8,"nodeType":"770","messageId":"771","endLine":13,"endColumn":17},{"ruleId":"768","severity":1,"message":"881","line":14,"column":8,"nodeType":"770","messageId":"771","endLine":14,"endColumn":13},{"ruleId":"768","severity":1,"message":"882","line":15,"column":8,"nodeType":"770","messageId":"771","endLine":15,"endColumn":16},{"ruleId":"768","severity":1,"message":"773","line":16,"column":8,"nodeType":"770","messageId":"771","endLine":16,"endColumn":12},{"ruleId":"768","severity":1,"message":"883","line":17,"column":8,"nodeType":"770","messageId":"771","endLine":17,"endColumn":16},{"ruleId":"768","severity":1,"message":"884","line":18,"column":8,"nodeType":"770","messageId":"771","endLine":18,"endColumn":18},{"ruleId":"768","severity":1,"message":"885","line":19,"column":8,"nodeType":"770","messageId":"771","endLine":19,"endColumn":21},{"ruleId":"768","severity":1,"message":"886","line":20,"column":8,"nodeType":"770","messageId":"771","endLine":20,"endColumn":16},{"ruleId":"768","severity":1,"message":"887","line":21,"column":8,"nodeType":"770","messageId":"771","endLine":21,"endColumn":25},{"ruleId":"768","severity":1,"message":"888","line":22,"column":8,"nodeType":"770","messageId":"771","endLine":22,"endColumn":16},{"ruleId":"768","severity":1,"message":"833","line":80,"column":9,"nodeType":"770","messageId":"771","endLine":80,"endColumn":25},{"ruleId":"768","severity":1,"message":"839","line":86,"column":9,"nodeType":"770","messageId":"771","endLine":86,"endColumn":29},{"ruleId":"768","severity":1,"message":"889","line":90,"column":9,"nodeType":"770","messageId":"771","endLine":90,"endColumn":30},{"ruleId":"782","severity":1,"message":"783","line":96,"column":35,"nodeType":"784","endLine":96,"endColumn":60},{"ruleId":"768","severity":1,"message":"822","line":1,"column":39,"nodeType":"770","messageId":"771","endLine":1,"endColumn":48},{"ruleId":"768","severity":1,"message":"769","line":2,"column":10,"nodeType":"770","messageId":"771","endLine":2,"endColumn":14},{"ruleId":"768","severity":1,"message":"772","line":2,"column":16,"nodeType":"770","messageId":"771","endLine":2,"endColumn":26},{"ruleId":"768","severity":1,"message":"773","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":12},{"ruleId":"768","severity":1,"message":"890","line":23,"column":10,"nodeType":"770","messageId":"771","endLine":23,"endColumn":21},{"ruleId":"782","severity":1,"message":"783","line":147,"column":7,"nodeType":"784","endLine":147,"endColumn":31},{"ruleId":"891","severity":1,"message":"892","line":125,"column":3,"nodeType":"893","messageId":"807","endLine":131,"endColumn":4},{"ruleId":"768","severity":1,"message":"830","line":1,"column":8,"nodeType":"770","messageId":"771","endLine":1,"endColumn":13},{"ruleId":"768","severity":1,"message":"821","line":1,"column":17,"nodeType":"770","messageId":"771","endLine":1,"endColumn":25},{"ruleId":"768","severity":1,"message":"831","line":1,"column":27,"nodeType":"770","messageId":"771","endLine":1,"endColumn":37},{"ruleId":"768","severity":1,"message":"822","line":1,"column":39,"nodeType":"770","messageId":"771","endLine":1,"endColumn":48},{"ruleId":"764","severity":1,"message":"802","line":46,"column":10,"nodeType":"766","endLine":46,"endColumn":12,"suggestions":"894"},{"ruleId":"768","severity":1,"message":"772","line":8,"column":10,"nodeType":"770","messageId":"771","endLine":8,"endColumn":20},{"ruleId":"768","severity":1,"message":"853","line":21,"column":18,"nodeType":"770","messageId":"771","endLine":21,"endColumn":24},{"ruleId":"768","severity":1,"message":"772","line":2,"column":10,"nodeType":"770","messageId":"771","endLine":2,"endColumn":20},{"ruleId":"768","severity":1,"message":"895","line":7,"column":8,"nodeType":"770","messageId":"771","endLine":7,"endColumn":24},{"ruleId":"768","severity":1,"message":"868","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":13},{"ruleId":"768","severity":1,"message":"774","line":11,"column":10,"nodeType":"770","messageId":"771","endLine":11,"endColumn":18},{"ruleId":"768","severity":1,"message":"810","line":15,"column":8,"nodeType":"770","messageId":"771","endLine":15,"endColumn":17},{"ruleId":"768","severity":1,"message":"798","line":16,"column":8,"nodeType":"770","messageId":"771","endLine":16,"endColumn":11},{"ruleId":"768","severity":1,"message":"811","line":22,"column":3,"nodeType":"770","messageId":"771","endLine":22,"endColumn":7},{"ruleId":"768","severity":1,"message":"812","line":25,"column":3,"nodeType":"770","messageId":"771","endLine":25,"endColumn":13},{"ruleId":"768","severity":1,"message":"813","line":40,"column":11,"nodeType":"770","messageId":"771","endLine":40,"endColumn":22},{"ruleId":"764","severity":1,"message":"896","line":55,"column":6,"nodeType":"766","endLine":55,"endColumn":8,"suggestions":"897"},{"ruleId":"768","severity":1,"message":"772","line":8,"column":10,"nodeType":"770","messageId":"771","endLine":8,"endColumn":20},{"ruleId":"768","severity":1,"message":"853","line":21,"column":19,"nodeType":"770","messageId":"771","endLine":21,"endColumn":25},{"ruleId":"768","severity":1,"message":"772","line":2,"column":10,"nodeType":"770","messageId":"771","endLine":2,"endColumn":20},{"ruleId":"768","severity":1,"message":"798","line":5,"column":8,"nodeType":"770","messageId":"771","endLine":5,"endColumn":11},{"ruleId":"768","severity":1,"message":"774","line":6,"column":20,"nodeType":"770","messageId":"771","endLine":6,"endColumn":28},{"ruleId":"768","severity":1,"message":"799","line":6,"column":54,"nodeType":"770","messageId":"771","endLine":6,"endColumn":62},{"ruleId":"768","severity":1,"message":"800","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":19},{"ruleId":"768","severity":1,"message":"801","line":13,"column":8,"nodeType":"770","messageId":"771","endLine":13,"endColumn":24},{"ruleId":"768","severity":1,"message":"786","line":24,"column":3,"nodeType":"770","messageId":"771","endLine":24,"endColumn":12},{"ruleId":"764","severity":1,"message":"898","line":89,"column":6,"nodeType":"766","endLine":89,"endColumn":8,"suggestions":"899"},{"ruleId":"789","severity":1,"message":"790","line":148,"column":11,"nodeType":"791","endLine":151,"endColumn":15},{"ruleId":"804","severity":1,"message":"805","line":260,"column":45,"nodeType":"806","messageId":"807","endLine":260,"endColumn":47},{"ruleId":"768","severity":1,"message":"821","line":1,"column":17,"nodeType":"770","messageId":"771","endLine":1,"endColumn":25},{"ruleId":"768","severity":1,"message":"822","line":1,"column":27,"nodeType":"770","messageId":"771","endLine":1,"endColumn":36},{"ruleId":"768","severity":1,"message":"772","line":1,"column":73,"nodeType":"770","messageId":"771","endLine":1,"endColumn":83},{"ruleId":"768","severity":1,"message":"854","line":2,"column":8,"nodeType":"770","messageId":"771","endLine":2,"endColumn":12},{"ruleId":"768","severity":1,"message":"825","line":7,"column":8,"nodeType":"770","messageId":"771","endLine":7,"endColumn":12},{"ruleId":"768","severity":1,"message":"855","line":8,"column":8,"nodeType":"770","messageId":"771","endLine":8,"endColumn":18},{"ruleId":"768","severity":1,"message":"811","line":9,"column":8,"nodeType":"770","messageId":"771","endLine":9,"endColumn":12},{"ruleId":"768","severity":1,"message":"847","line":10,"column":8,"nodeType":"770","messageId":"771","endLine":10,"endColumn":19},{"ruleId":"768","severity":1,"message":"826","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":18},{"ruleId":"768","severity":1,"message":"845","line":14,"column":8,"nodeType":"770","messageId":"771","endLine":14,"endColumn":13},{"ruleId":"768","severity":1,"message":"859","line":28,"column":9,"nodeType":"770","messageId":"771","endLine":28,"endColumn":16},{"ruleId":"841","severity":1,"message":"842","line":30,"column":3,"nodeType":"843","messageId":"807","endLine":30,"endColumn":13},{"ruleId":"768","severity":1,"message":"900","line":3,"column":7,"nodeType":"770","messageId":"771","endLine":3,"endColumn":12},{"ruleId":"789","severity":1,"message":"790","line":62,"column":11,"nodeType":"791","endLine":62,"endColumn":77},{"ruleId":"789","severity":1,"message":"790","line":47,"column":15,"nodeType":"791","endLine":47,"endColumn":81},{"ruleId":"804","severity":1,"message":"805","line":66,"column":31,"nodeType":"806","messageId":"807","endLine":66,"endColumn":33},{"ruleId":"768","severity":1,"message":"821","line":1,"column":17,"nodeType":"770","messageId":"771","endLine":1,"endColumn":25},{"ruleId":"768","severity":1,"message":"822","line":1,"column":27,"nodeType":"770","messageId":"771","endLine":1,"endColumn":36},{"ruleId":"768","severity":1,"message":"772","line":1,"column":73,"nodeType":"770","messageId":"771","endLine":1,"endColumn":83},{"ruleId":"768","severity":1,"message":"776","line":3,"column":8,"nodeType":"770","messageId":"771","endLine":3,"endColumn":16},{"ruleId":"768","severity":1,"message":"823","line":4,"column":8,"nodeType":"770","messageId":"771","endLine":4,"endColumn":22},{"ruleId":"768","severity":1,"message":"775","line":5,"column":8,"nodeType":"770","messageId":"771","endLine":5,"endColumn":20},{"ruleId":"768","severity":1,"message":"824","line":6,"column":8,"nodeType":"770","messageId":"771","endLine":6,"endColumn":14},{"ruleId":"768","severity":1,"message":"825","line":7,"column":8,"nodeType":"770","messageId":"771","endLine":7,"endColumn":12},{"ruleId":"768","severity":1,"message":"811","line":9,"column":8,"nodeType":"770","messageId":"771","endLine":9,"endColumn":12},{"ruleId":"768","severity":1,"message":"826","line":11,"column":8,"nodeType":"770","messageId":"771","endLine":11,"endColumn":18},{"ruleId":"768","severity":1,"message":"855","line":6,"column":8,"nodeType":"770","messageId":"771","endLine":6,"endColumn":18},{"ruleId":"827","severity":1,"message":"828","line":83,"column":1,"nodeType":"829","endLine":89,"endColumn":3},{"ruleId":"768","severity":1,"message":"855","line":8,"column":8,"nodeType":"770","messageId":"771","endLine":8,"endColumn":18},{"ruleId":"768","severity":1,"message":"901","line":13,"column":10,"nodeType":"770","messageId":"771","endLine":13,"endColumn":24},{"ruleId":"768","severity":1,"message":"774","line":14,"column":9,"nodeType":"770","messageId":"771","endLine":14,"endColumn":17},{"ruleId":"768","severity":1,"message":"856","line":14,"column":31,"nodeType":"770","messageId":"771","endLine":14,"endColumn":35},{"ruleId":"768","severity":1,"message":"902","line":26,"column":21,"nodeType":"770","messageId":"771","endLine":26,"endColumn":33},{"ruleId":"768","severity":1,"message":"903","line":28,"column":9,"nodeType":"770","messageId":"771","endLine":28,"endColumn":16},{"ruleId":"764","severity":1,"message":"904","line":75,"column":6,"nodeType":"766","endLine":75,"endColumn":8,"suggestions":"905"},{"ruleId":"768","severity":1,"message":"906","line":8,"column":5,"nodeType":"770","messageId":"771","endLine":8,"endColumn":18},{"ruleId":"768","severity":1,"message":"906","line":8,"column":5,"nodeType":"770","messageId":"771","endLine":8,"endColumn":18},{"ruleId":"768","severity":1,"message":"906","line":8,"column":5,"nodeType":"770","messageId":"771","endLine":8,"endColumn":18},{"ruleId":"768","severity":1,"message":"864","line":2,"column":8,"nodeType":"770","messageId":"771","endLine":2,"endColumn":14},{"ruleId":"768","severity":1,"message":"907","line":5,"column":8,"nodeType":"770","messageId":"771","endLine":5,"endColumn":25},{"ruleId":"768","severity":1,"message":"908","line":6,"column":8,"nodeType":"770","messageId":"771","endLine":6,"endColumn":12},{"ruleId":"768","severity":1,"message":"845","line":7,"column":8,"nodeType":"770","messageId":"771","endLine":7,"endColumn":13},{"ruleId":"768","severity":1,"message":"909","line":8,"column":8,"nodeType":"770","messageId":"771","endLine":8,"endColumn":14},"no-native-reassign",["910"],"no-negated-in-lhs",["911"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["912"],"no-unused-vars","'fade' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'Menu' is defined but never used.","'Redirect' is defined but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'accountMenuId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.",["913"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ProductCategoryList' is defined but never used.","'CardMedia' is defined but never used.","'rating' is assigned a value but never used.","'numOfRatings' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Context' is defined but never used.","'setSearchObject' is assigned a value but never used.","Assignments to the 'page' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'products' and 'searchObject'. Either include them or remove the dependency array.",["914"],"'Box' is defined but never used.","'ReactDOM' is defined but never used.","'Breadcrumbs' is defined but never used.","'NavigateNextIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["915"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["910"],["911"],"'PropTypes' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userProfile' and 'username'. Either include them or remove the dependency array.",["916"],"'email' is assigned a value but never used.","'balance' is assigned a value but never used.","'products_won' is assigned a value but never used.","'highest_bids' is assigned a value but never used.","'notifications' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'Grid' is defined but never used.","'FolderIcon' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","'useContext' is defined but never used.","'isMenuOpen' is assigned a value but never used.","'isMobileMenuOpen' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleListKeyDown' is defined but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'handleMobileMenuOpen' is assigned a value but never used.","'handleClick' is assigned a value but never used.","no-dupe-keys","Duplicate key 'menuButton'.","ObjectExpression","'FaqCard' is defined but never used.","'Paper' is defined but never used.","'ProductCardMini' is defined but never used.","'CardContent' is defined but never used.","'DeleteIcon' is defined but never used.","'IconButton' is defined but never used.","'ListItemSecondaryAction' is defined but never used.",["910"],["911"],"'logout' is assigned a value but never used.","'List' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'Divider' is defined but never used.","'Container' is defined but never used.","'classes' is assigned a value but never used.","'infoLoaded' is assigned a value but never used.","'setInfoLoaded' is assigned a value but never used.","'mappedResult' is assigned a value but never used.","'countdownDisplay' is assigned a value but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'useHistory' is defined but never used.","'Alert' is defined but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'withStyles' is defined but never used.","'withRouter' is defined but never used.","'Rating' is defined but never used.","'Countdown' is defined but never used.",["917"],["910"],["911"],["910"],["911"],"'InputBase' is defined but never used.","'Badge' is defined but never used.","'MenuItem' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'AccountCircle' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MoreIcon' is defined but never used.","'handleMobileMenuClose' is assigned a value but never used.","'TramRounded' is defined but never used.","no-dupe-class-members","Duplicate name 'getUser'.","MethodDefinition",["918"],"'CircularProgress' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'userProfile', and 'username'. Either include them or remove the dependency array.",["919"],"React Hook useEffect has missing dependencies: 'currentUser', 'history', and 'id'. Either include them or remove the dependency array.",["920"],"'theme' is assigned a value but never used.","'createMuiTheme' is defined but never used.","'setPageTitle' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'query', 'searchQuery', and 'setProducts'. Either include them or remove the dependency array.",["921"],"'FiCardActions' is defined but never used.","'ClickAwayListener' is defined but never used.","'Grow' is defined but never used.","'Popper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},{"desc":"926","fix":"927"},{"desc":"928","fix":"929"},{"desc":"930","fix":"931"},{"desc":"928","fix":"932"},{"desc":"928","fix":"933"},{"desc":"934","fix":"935"},{"desc":"936","fix":"937"},{"desc":"938","fix":"939"},"Update the dependencies array to be: [currentUser, token, updateAppBar]",{"range":"940","text":"941"},"Update the dependencies array to be: [currentUser.email, notificationsAnchorEl]",{"range":"942","text":"943"},"Update the dependencies array to be: [products, searchObject]",{"range":"944","text":"945"},"Update the dependencies array to be: [id]",{"range":"946","text":"947"},"Update the dependencies array to be: [userProfile, username]",{"range":"948","text":"949"},{"range":"950","text":"947"},{"range":"951","text":"947"},"Update the dependencies array to be: [history, userProfile, username]",{"range":"952","text":"953"},"Update the dependencies array to be: [currentUser, history, id]",{"range":"954","text":"955"},"Update the dependencies array to be: [query, searchQuery, setProducts]",{"range":"956","text":"957"},[2098,2119],"[currentUser, token, updateAppBar]",[3511,3534],"[currentUser.email, notificationsAnchorEl]",[1622,1624],"[products, searchObject]",[2248,2250],"[id]",[1482,1484],"[userProfile, username]",[2135,2137],[1653,1655],[1743,1745],"[history, userProfile, username]",[3114,3116],"[currentUser, history, id]",[2360,2362],"[query, searchQuery, setProducts]"]