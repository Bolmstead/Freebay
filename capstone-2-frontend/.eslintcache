[{"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\index.js":"1","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\App.js":"2","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\rootReducer.js":"4","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\PrimarySearchAppBar.js":"5","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Routes.js":"6","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Home.js":"7","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductCard.js":"8","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Login.js":"9","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Signup.js":"10","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\CategoriesBar\\CategoriesBar.js":"11","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Api.js":"12","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductList.js":"13","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductCategoryList.js":"14","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductDetails.js":"15","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\hooks\\useLocalStorage.js":"16","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Alert.js":"17","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Context.js":"18","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\CategoriesBar\\Category.js":"19","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\FaqCard.js":"20","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\LoadingSpinner.js":"21","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Profile.js":"22","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\BidsFeed.js":"23","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\WinsFeed.js":"24","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Notifications.js":"25","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\ExampleFeed.js":"26","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\HomePagePic.js":"27","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleHomepagePic.js":"28","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\CategoriesBar\\Stylings\\styleCategoriesBar.js":"29"},{"size":705,"mtime":1613191059150,"results":"30","hashOfConfig":"31"},{"size":3770,"mtime":1613557040001,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":346,"mtime":1612128940716,"results":"34","hashOfConfig":"31"},{"size":9231,"mtime":1613981290776,"results":"35","hashOfConfig":"31"},{"size":1393,"mtime":1613272468265,"results":"36","hashOfConfig":"31"},{"size":1241,"mtime":1614234928994,"results":"37","hashOfConfig":"31"},{"size":3344,"mtime":1614210827641,"results":"38","hashOfConfig":"31"},{"size":3795,"mtime":1614143367408,"results":"39","hashOfConfig":"31"},{"size":5237,"mtime":1613556819918,"results":"40","hashOfConfig":"31"},{"size":3469,"mtime":1614236465070,"results":"41","hashOfConfig":"31"},{"size":3063,"mtime":1614218493273,"results":"42","hashOfConfig":"31"},{"size":3953,"mtime":1614221350713,"results":"43","hashOfConfig":"31"},{"size":3675,"mtime":1613555996741,"results":"44","hashOfConfig":"31"},{"size":6420,"mtime":1614120620857,"results":"45","hashOfConfig":"31"},{"size":1010,"mtime":1612979792113,"results":"46","hashOfConfig":"31"},{"size":464,"mtime":1612981170300,"results":"47","hashOfConfig":"31"},{"size":103,"mtime":1612981894841,"results":"48","hashOfConfig":"31"},{"size":3126,"mtime":1613555647067,"results":"49","hashOfConfig":"31"},{"size":1244,"mtime":1613555077162,"results":"50","hashOfConfig":"31"},{"size":554,"mtime":1613632955362,"results":"51","hashOfConfig":"31"},{"size":3301,"mtime":1613633213896,"results":"52","hashOfConfig":"31"},{"size":2351,"mtime":1613624548093,"results":"53","hashOfConfig":"31"},{"size":2337,"mtime":1613624521834,"results":"54","hashOfConfig":"31"},{"size":2749,"mtime":1613632444132,"results":"55","hashOfConfig":"31"},{"size":1971,"mtime":1613554697505,"results":"56","hashOfConfig":"31"},{"size":1653,"mtime":1614235993156,"results":"57","hashOfConfig":"31"},{"size":1982,"mtime":1614235941412,"results":"58","hashOfConfig":"31"},{"size":1358,"mtime":1614236599855,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1t2oi43",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\index.js",[],["131","132"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\App.js",["133"],"import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport jwt from \"jsonwebtoken\";\nimport PrimarySearchAppBar from './Components/Navigation/PrimarySearchAppBar.js'\nimport CategoriesBar from './Components/Navigation/CategoriesBar/CategoriesBar.js'\nimport Routes from './Routes.js'\nimport Container from '@material-ui/core/Container';\nimport Context from \"./Components/Common/Context.js\";\nimport FreebayAPI from './Api'\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport LoadingSpinner from './Components/Common/LoadingSpinner.js';\n\n\nexport const TOKEN_STORAGE_ID = \"freebay-token\";\n\n// Renders entire Application\n\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  \n  console.debug(\n    \"App\",\n    \"infoLoaded=\", infoLoaded,\n    \"currentUser=\", currentUser,\n    \"token=\", token,\n  );\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt.decode(token);\n          console.log(\"FreebayAPI.token\", FreebayAPI.token)\n          FreebayAPI.token = token;\n          let userResult = await FreebayAPI.getUser(username);\n          console.log(\"userResult\",userResult)\n          setCurrentUser(userResult);\n          console.log(\"currentUser\", currentUser, \"token\", token)\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true)\n    }\n\n    setInfoLoaded(false)\n    getCurrentUser();\n\n  }, [token]);\n\n  async function login(loginData) {\n    try {\n      let loginToken = await FreebayAPI.login(loginData);\n      console.log(\"currentUser\", currentUser, \"token\", token)\n      setToken(loginToken);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  async function signup(data) {\n    try {\n      let token = await FreebayAPI.signup(data);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n\n\n// Product Hooks\n  async function getProductsInCategory(category) {\n    let res = await FreebayAPI.getProductsInCategory(category);\n    setProducts(res);\n    console.log(\"products\", products)\n  }\n\n  async function getProducts(query) {\n    let res = await FreebayAPI.getProducts(query);\n    setProducts(res);\n    console.log(\"products\", products)\n  }\n\n  async function getProduct(id) {\n    let res = await FreebayAPI.getProduct(id);\n    setProducts(res);\n    console.log(\"products\", products)\n  }\n\n\n  console.log(\"currentUser\", currentUser)\n  console.log(\"token\", token)\n\n  if (!infoLoaded) return <LoadingSpinner />;\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Context.Provider value={{ currentUser, setCurrentUser, signup, login, products, getProducts, getProductsInCategory, getProduct, logout}}>\n\n        <BrowserRouter>\n\n        <Container>\n        <PrimarySearchAppBar />\n        <hr style={{height:'1px', borderWidth:0, color:'lightgrey', backgroundColor: '#e6e6e6', margin:0, padding: 0,}}/>\n        <CategoriesBar/>\n        <Routes/>\n        <Container>\n        </Container>\n        </Container>\n        </BrowserRouter>\n\n        </Context.Provider>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\rootReducer.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\PrimarySearchAppBar.js",["134","135","136"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Context from \"../Common/Context\";\nimport {Redirect, useHistory} from 'react-router-dom';\nimport FreebayAPI from \"../../Api.js\"\n\n// Search Bar to allow user to search products.\n// If logged in, displays user's account balance, notifications \n// icon, and profile icon. When clicked on, the notifications icon \n// will show user's unread notifications. If not logged in, shows \n// login and signup links.\n\nconst useStyles = makeStyles((theme) => ({\n  balance: {\n    color: \"#282828\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    display: \"flex\"\n\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    textTransform: 'none',\n    color: '#282828'\t\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.10),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.15),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n    flex: 3,\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(.65, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'black',\n  },\n  inputRoot: {\n    color: 'black',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    [theme.breakpoints.up('md')]: {\n      width: '50ch',\n    },\n  },\n  flex: {\n      display: 'flex',\n    },\n  searchButton: {\n    background: 'none',\n    padding: '0px',\n    border: 'none',\n  },\n\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n\n  sectionDesktop: {\n    display: 'flex',\n  },\n\n  link: {\n    textTransform: 'none'\n  }\n\n}));\n\nfunction PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [accountAnchorEl, setaccountAnchorEl] = useState(null);\n  const [notificationsAnchorEl, setNotificationsAnchorEl] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n\n\n  const { currentUser, logout} = useContext(Context);\n\n  console.log(\"currentUser from PrimarySearchAppBar\", currentUser)\n\n  const history = useHistory()\n\n  let notifications;\n  let newNotifications;\n\n  if (currentUser){\n    notifications = currentUser[\"notifications\"];\n    console.log(\"notifications from PrimarySearchAppBar\", notifications)\n    newNotifications = notifications.filter( n => !n.wasViewed)\n    console.log(\"newNotifications from PrimarySearchAppBar\", newNotifications)\n  }\n\n\n\n  function handleChange(evt) {\n    setSearchTerm(evt.target.value);\n    console.log(\"searchTerm\", searchTerm)\n  }\n\n  // Handle functionality of the app bar\n  const isAccountMenuOpen = Boolean(accountAnchorEl);\n  const isNotificationsMenuOpen = Boolean(notificationsAnchorEl);\n\n\n  const handleProfileMenuOpen = (event) => {\n    setaccountAnchorEl(event.currentTarget);\n  };\n\n  const handleProfileMenuClose = () => {\n    setaccountAnchorEl(null);\n  };\n\n  const handleNotificationsMenuOpen = (event) => {\n    console.log(\"handleNotificationsMenuOpen\")\n    setNotificationsAnchorEl(event.currentTarget);\n  };\n\n  \n\n  useEffect(function viewNotifications() {\n    async function viewNotificationsApi() {\n        try {\n          await FreebayAPI.viewNotifications(currentUser.email);\n        } catch (err) {\n          console.error(\"Error with FreebayAPI.viewNotifications()\", err);\n        }\n      }\n    viewNotificationsApi();\n  }, [notificationsAnchorEl]);\n\n\n  // Handle the Input in the Search Bar\n  function handleSubmit(evt) {\n    console.log(\"searchTerm from handleSubmit\", searchTerm)\n    let newUrl = `/products?name=` + searchTerm\n    console.log(\"newUrl from the handlesubmit in searchbar\",newUrl)\n    setRedirect(true)\n    if(redirect){\n      return <Redirect to='products?name=tv'/>\n   }\n    }\n\n\n\n  const handleNotificationsMenuClose = () => {\n    setNotificationsAnchorEl(null);\n  };\n\n\n\n\n\n  const menuId = 'primary-search-account-menu';\n  const renderAccountMenu = (\n    <Menu\n      anchorEl={accountAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isAccountMenuOpen}\n      onClose={handleProfileMenuClose}\n      className={classes.link}\n    >\n      { currentUser \n      ? <Link href={\"/Profile/\" + currentUser[\"username\"]}><MenuItem onClick={handleProfileMenuClose} className={classes.link}>Profile</MenuItem></Link>\n      : <MenuItem onClick={handleProfileMenuClose} className={classes.link}>Profile</MenuItem>\n      } \n      <Link className=\"m-2\" onClick={logout} className={classes.link}><MenuItem onClick={handleProfileMenuClose}>Logout</MenuItem></Link>\n    </Menu>\n  );\n\n\n\n\n  const renderNotificationsMenu = (\n    \n    <Menu\n      anchorEl={notificationsAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isNotificationsMenuOpen}\n      onClose={handleNotificationsMenuClose}\n    >\n    { notifications \n    ?\n      ( newNotifications.length > 0\n      ?\n        newNotifications.map( n => (<MenuItem onClick={handleNotificationsMenuClose}>{n.text}</MenuItem>))\n      :\n      <MenuItem onClick={handleNotificationsMenuClose}>No new notifications</MenuItem>\n      )\n    :\n      <div></div>\n    }\n    </Menu>\n  );\n\n\n  console.debug(\n    \"PrimarySearchAppBar\",\n    \"currentUser=\", currentUser,\n  );\n    \n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" style= {{background: \"#FFFFFF\"}} elevation={0}>\n        <Toolbar className= \"flex\">  \n          <Link href=\"/\">\n            <img src=\"/images/logo.png\" alt=\"logo\" id=\"logo\"></img>\n          </Link>\n          <div className={classes.search}>\n          <form onSubmit={handleSubmit} >\n            <div className={classes.searchIcon}>\n              <button type=\"submit\" className={classes.searchButton} >\n                <SearchIcon />\n              </button>\n            </div>\n            <InputBase\n              placeholder=\"Search for anything\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              value={searchTerm}\n              onChange={handleChange}\n            />\n          </form>\n          </div>\n          {currentUser \n          ?  <div>\n\n                <div className={classes.sectionDesktop}>\n                <Typography className={classes.balance}>{\"$\" + currentUser[\"balance\"]}</Typography>\n                <IconButton aria-label=\"show notifications\">\n                  {newNotifications.length > 0 \n                  ? <Badge badgeContent={newNotifications.length} color=\"secondary\" >      \n                      <NotificationsIcon \n                      edge=\"end\"\n                      aria-label=\"account of current user\"\n                      aria-controls={menuId}\n                      onClick={handleNotificationsMenuOpen}\n                      aria-haspopup=\"true\"/>\n                    </Badge>\n                  : <NotificationsIcon \n                    edge=\"end\"\n                    aria-label=\"account of current user\"\n                    aria-controls={menuId}\n                    onClick={handleNotificationsMenuOpen}\n                    aria-haspopup=\"true\"/>}\n\n                </IconButton>\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"account of current user\"\n                  aria-controls={menuId}\n                  onClick={handleProfileMenuOpen}\n                  aria-haspopup=\"true\"\n                >\n                  <AccountCircle />\n                </IconButton>\n              </div>\n            </div>\n          :  <div>\n                <Button color=\"default\" href=\"/login\" className={classes.button}>Login</Button>\n                <Button color=\"default\" href=\"/signup\" className={classes.button}>Signup</Button>\n             </div>\n          }\n        </Toolbar>\n      </AppBar>\n      \n      {renderNotificationsMenu}\n      {renderAccountMenu}\n    </div>\n  )\n}\n\nexport default PrimarySearchAppBar;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Routes.js",["137","138"],"import './App.css';\r\nimport { Switch, Route  } from \"react-router-dom\";\r\nimport React  from \"react\";\r\n\r\nimport Home from \"./Home\";\r\nimport Login from \"./Components/Login\";\r\nimport ProductCard from \"./Components/Products/ProductCard\";\r\nimport Signup from \"./Components/Signup\";\r\nimport Profile from \"./Components/User/Profile\";\r\n\r\nimport ProductList from \"./Components/Products/ProductList\";\r\nimport ProductCategoryList from \"./Components/Products/ProductCategoryList\";\r\nimport ProductDetails from \"./Components/Products/ProductDetails\";\r\n\r\n\r\n/** All routes of website along with a catch all route to display a not found route */\r\n\r\nfunction Routes() {\r\n  return (\r\n    <div>\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n            <Route exact path=\"/login\">\r\n                <Login />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n                <Signup />\r\n            </Route>\r\n            <Route exact path=\"/products\" >\r\n                <ProductList />\r\n            </Route>\r\n            <Route exact path=\"/product/:id\">\r\n                <ProductDetails />\r\n            </Route>\r\n            <Route exact path=\"/profile/:username\">\r\n                <Profile />\r\n            </Route>\r\n        \r\n            <Route><h1>Not Found!</h1></Route>\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Home.js",["139","140","141"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductCard.js",["142","143"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n// Card of product image and some information regarding the product.\r\n// Will be rendered within the ProductList components.\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n  },\r\n  media: {\r\n    height: 200,\r\n    minWidth: 250,\r\n  },\r\n  ratingNumber: {\r\n    top: 200\r\n  }\r\n});\r\n\r\n\r\nfunction ProductCard({product}) {\r\n  const classes = useStyles();\r\n\r\n  let {id, name, marketPrice, imageUrl, rating, numOfRatings, auctionEndDt, bidderUsername, bidPrice} = product\r\n\r\n  function truncate(str, n){\r\n    if (str !== undefined) {\r\n    return (str.length > n) ? str.substr(0, n-1) + '...' : str;}\r\n  };\r\n\r\n  marketPrice = `$` + marketPrice\r\n  const shortName = truncate(name, 100)\r\n\r\n  const auctionEndObj = new Date(auctionEndDt)\r\n\r\n  function getTimeRemaining(endtime){\r\n    const total = Date.parse(endtime) - Date.parse(new Date());\r\n    const seconds = Math.floor( (total/1000) % 60 );\r\n    const minutes = Math.floor( (total/1000/60) % 60 );\r\n    const hours = Math.floor( (total/(1000*60*60)) % 24 );\r\n    const days = Math.floor( total/(1000*60*60*24) );\r\n  \r\n    return {\r\n      total,\r\n      days,\r\n      hours,\r\n      minutes,\r\n      seconds\r\n    };\r\n  }\r\n\r\n  const countdown = getTimeRemaining(auctionEndObj)\r\n\r\n  const countdownDisplay = `${countdown[\"days\"]}D ${countdown[\"hours\"]}H`\r\n\r\n  return (\r\n    <Link href={\"/product/\" + id} color=\"inherit\">\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={imageUrl}\r\n          title={shortName}\r\n        />\r\n        <CardContent style={{ minHeight: \"100px\"}}>\r\n          <div>\r\n          <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n            {shortName}\r\n          </Typography>\r\n        <Rating name=\"read-only\" value={rating} size=\"small\" readOnly display=\"inline\"/> \r\n      </div>\r\n          <Typography variant=\"body1\" color=\"body2\" component=\"p\">\r\n            {marketPrice}\r\n          </Typography>\r\n          { bidderUsername\r\n          ?\r\n            <div>\r\n              <Typography variant=\"body1\" color=\"body2\" component=\"p\">\r\n                {bidPrice}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {bidderUsername}\r\n              </Typography>\r\n            </div>\r\n          :\r\n          <div>\r\n            <Typography variant=\"body1\" color=\"body2\" component=\"p\">\r\n              {marketPrice}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {bidPrice}\r\n            </Typography>\r\n          </div>\r\n\r\n          }\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {marketPrice}\r\n          </Typography>\r\n\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  </Link>\r\n  );\r\n}\r\n\r\nexport default ProductCard;\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Login.js",["144"],"import React, { useState, useContext } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Context from \"./Common/Context\";\r\n\r\n// Renders a login form. User is redirected to the home page once logged in\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login( ) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { login, logout } = useContext(Context);\r\n\r\n  \r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [formErrors, setFormErrors] = useState([]);\r\n\r\n  console.debug(\r\n      \"LoginForm\",\r\n      \"login=\", typeof login,\r\n      \"formData=\", formData,\r\n      \"formErrors\", formErrors,\r\n  );\r\n\r\n  /** Handle form submit:\r\n   *\r\n   * Calls login func prop and, if successful, redirect to /companies.\r\n   */\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let result = await login(formData);\r\n    if (result.success) {\r\n      history.push(\"/\");\r\n    } else {\r\n      setFormErrors(result.errors);\r\n    }\r\n  }\r\n\r\n  /** Update form data field */\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setFormData(l => ({ ...l, [name]: value }));\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h4\">\r\n          Hello\r\n        </Typography><br></br>\r\n        <span style={{display: 'inline-block'}}>\r\n          Log in to freeBay\r\n        </span>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/Signup\" variant=\"body2\">\r\n                Don't have an account? Create one here\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Signup.js",["145"],"import React, { useState, useContext } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from \"./Common/Alert\";\r\nimport Context from \"./Common/Context\";\r\n\r\n\r\n// Renders a Signin form to create an account. User is redirected \r\n// to the home page once an account has been created.\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Signup() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { signup, logout } = useContext(Context);\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n  });\r\n  const [formErrors, setFormErrors] = useState([]);\r\n\r\n  console.debug(\r\n      \"Signup\",\r\n      \"signup=\", typeof signup,\r\n      \"formData=\", formData,\r\n      \"formErrors=\", formErrors,\r\n  );\r\n\r\n  /** Handle form submit:\r\n   *\r\n   * Calls login func prop and, if successful, redirect to /companies.\r\n   */\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let result = await signup(formData);\r\n    if (result.success) {\r\n      history.push(\"/\");\r\n    } else {\r\n      setFormErrors(result.errors);\r\n    }\r\n  }\r\n\r\n  /** Update form data field */\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setFormData(data => ({ ...data, [name]: value }));\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h4\">\r\n          Hello\r\n        </Typography><br></br>\r\n        <span style={{display: 'inline-block'}}>\r\n          Create a freeBay account\r\n        </span>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {formErrors.length\r\n                    ? <Alert type=\"danger\" messages={formErrors} />\r\n                    : null\r\n                }\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/Login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n    </Container>\r\n  );\r\n}","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\CategoriesBar\\CategoriesBar.js",["146","147","148","149","150","151","152","153","154","155"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Api.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductList.js",["156"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductCategoryList.js",["157"],"import React, { useState, useEffect } from \"react\";\r\nimport ProductCard from './ProductCard.js'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    Grid\r\n} from '@material-ui/core/'\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport FreebayAPI from '../../Api.js'\r\nimport { useLocation} from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\n// The list of product categories when a user clicks on a subcategory\r\n// that is listed within the categories navigation bar\r\n\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \r\n    root: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      textTransform: 'none'\r\n\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nconst ProductList = () => {\r\n  const classes = useStyles();\r\n  const [products, setProducts] = useState([]);\r\n  // grab the number of the page\r\n  let query = useQuery()\r\n  let subCategory = query.get(\"subCategory\")\r\n  let page = query.get(\"page\")\r\n  if (!page) {\r\n    page = \"1\"\r\n  }\r\n\r\n  let searchObject = {\r\n    page: page,\r\n    subCategory: subCategory\r\n  }\r\n\r\n  console.log(\"searchObject\", searchObject)\r\n //grab products\r\n  useEffect(() => {\r\n    async function getProductsInCategory() {\r\n      let res = await FreebayAPI.getProducts(searchObject);\r\n      setProducts(res);\r\n      console.log(\"products\", products)\r\n    }\r\n    getProductsInCategory()\r\n  }, []);\r\n\r\n\r\n  // grab the next page number\r\n  const nextPage = (parseInt(page) + 1).toString()\r\n  console.log(\"nextPage\", nextPage)\r\n\r\n  query.set(\"page\", nextPage)\r\n  \r\n  const nextPageQuery = query.toString()\r\n  console.log(\"nextPageQuery\", nextPageQuery)\r\n\r\n  // grab the previous page number\r\n  let prevPage;\r\n  console.log(\"declared prevPage Boolean Value\", Boolean(prevPage))\r\n  if (parseInt(page) > 1) {\r\n    prevPage = (parseInt(page) - 1).toString()\r\n\r\n    console.log(\"prevPage\", prevPage)\r\n\r\n    query.set(\"page\", prevPage)\r\n    \r\n    const prevPageQuery = query.toString()\r\n    console.log(\"prevPageQuery\", prevPageQuery)\r\n  }\r\n\r\n\r\n\r\n  // Add \"Clothing & Accessories to title if in fashion category\"\r\n  let categoryTitle;\r\n\r\n  if (subCategory === \"Women\" || subCategory === \"Men\" || subCategory === \"Boys\" || subCategory === \"Girls\" || subCategory === \"Baby\"){\r\n    categoryTitle = subCategory + \" Clothing & Accessories\"\r\n  } else {\r\n    categoryTitle = subCategory\r\n  }\r\n\r\n  if (!products) return <CircularProgress />;\r\n\r\n  return (\r\n    <Container>\r\n      <h1>{categoryTitle}</h1>\r\n      <Grid container spacing={3}>\r\n        {products.map((product) =>{\r\n          return <Grid item s={4} m={3} spacing={3}>\r\n                    <ProductCard id={product[\"id\"]} imageUrl = {product[\"imageUrl\"]} name ={product[\"name\"]} bidPrice = {product[\"marketPrice\"]} rating = {product[\"rating\"]} numOfRatings = {product[\"numOfRatings\"]} auctionEndDt = {product[\"auctionEndDt\"]}/>\r\n                  </Grid>\r\n        })}\r\n      </Grid>\r\n      <Grid container justify=\"center\">\r\n        {(!prevPage)\r\n        ? <Button size=\"medium\" className={classes.button} disabled>\r\n            {\"< Previous page\"}\r\n          </Button>\r\n        : <Button size=\"medium\" className={classes.button}>\r\n            {\"< Previous page\"}\r\n          </Button>}\r\n      <Button size=\"medium\" className={classes.button} href={\"/products?\" + nextPageQuery}>\r\n          {\"Next page >\"}\r\n      </Button>\r\n      </Grid>\r\n      </Container>\r\n      )\r\n};\r\n\r\nexport default ProductList;","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Products\\ProductDetails.js",["158","159","160","161","162","163","164"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useParams, Redirect, useHistory, withRouter, ReactDOM } from 'react-router-dom';\r\nimport FreebayAPI from '../../Api.js'\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LoadingSpinner from '../Common/LoadingSpinner.js'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography\r\n} from '@material-ui/core/'\r\n\r\n\r\n\r\n// Component that displays all information of a product.\r\n// Renders a countdown to the end of the auction along with an input\r\n// to allow the user to bid on the product.\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n  imageContainer: {\r\n    height: '400px',\r\n    width: '400px',\r\n    margin: 'auto'\r\n  },\r\n  media: {\r\n    height: '400px',\r\n    objectFit: 'contain',\r\n  },\r\n\r\n  cover: {\r\n    width: 151,\r\n  },\r\n\r\n  hr: {\r\n    height:'1px', \r\n    borderWidth:0, \r\n    color:'lightgrey', \r\n    backgroundColor: '#e6e6e6', \r\n    margin:0, \r\n    padding: 0\r\n  },\r\n  root: {\r\n\r\n  }\r\n\r\n\r\n  \r\n});\r\n\r\n\r\n\r\n\r\nfunction ProductDetails() {\r\n  const classes = useStyles();\r\n  const [infoLoaded, setInfoLoaded] = useState(false);\r\n  const [product, setProduct] = useState(null);\r\n  const [countdown, setCountdown] = useState([]);\r\n  const [bidAmount, setBidAmount] = useState(null);\r\n\r\n  const history = useHistory()\r\n  const {id} = useParams();\r\n\r\n  useEffect(() => {\r\n    async function getProduct(id) {\r\n      const result = await FreebayAPI.getProduct(id)\r\n      setProduct(result);\r\n      console.log('product', product)\r\n      console.log(\"productfrom ProductDetails component\", product)\r\n      getTimeLeft(result[\"auctionEndDt\"])\r\n      setInfoLoaded(true)\r\n    }\r\n    setInfoLoaded(false)\r\n    getProduct(id)\r\n  }, []);\r\n\r\n  // Create countdown timer\r\n  function getTimeLeft(dateTime){\r\n    const auctionEndObj = new Date(dateTime)\r\n    const totalTimeLeft = Date.parse(auctionEndObj) - Date.parse(new Date());\r\n    setCountdown(totalTimeLeft);\r\n    }\r\n\r\n  async function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    let addBidRes = await FreebayAPI.addBid(id, bidAmount)\r\n      return <Redirect to=\"/\" />\r\n\r\n\r\n  }\r\n\r\n  function handleChange(evt) {\r\n    setBidAmount(evt.target.value);\r\n    console.log(\"bidAmount\", bidAmount)\r\n  }\r\n\r\n  if (!infoLoaded) return <LoadingSpinner />;\r\n  console.log(\"countdown\",countdown)\r\n\r\n\r\n  return (\r\n    <Container>\r\n<br/>\r\n\r\n\r\n      <Grid container spacing={2}  >\r\n        <Grid item  xs={12} md={6}>\r\n          <Card className={classes.imageContainer} variant=\"outlined\">\r\n          <CardMedia\r\n              className={classes.media}\r\n              image={product[\"imageUrl\"]}\r\n            />\r\n            </Card>\r\n        </Grid>\r\n        <Grid item  xs={12} md={6}   justifyContent=\"center\"\r\n  alignItems=\"center\">\r\n          <Card className={classes.root}>\r\n              <CardContent className={classes.content} justify=\"center\">\r\n                <Typography component=\"h7\" variant=\"h7\">\r\n                  {product[\"name\"]}\r\n                </Typography><br/>\r\n                <Rating name=\"read-only\" value={product[\"rating\"]} size=\"medium\" readOnly display=\"inline\"/>      \r\n                <Typography variant=\"caption\" display=\"inline\" className=\"ratingNumber\" color=\"textSecondary\">\r\n                  {product[\"numOfRatings\"]} ratings\r\n                </Typography>\r\n                <br/><br/>\r\n\r\n                <hr className={classes.hr}/><br/>\r\n                { \r\n                product[\"currentBid\"] \r\n                ? <div>\r\n                    <Typography variant=\"h4\" color=\"textPrimary\" display=\"inline\" >\r\n                    ${product[\"currentBid\"]}                   <Typography variant=\"subtitle1\" color=\"textSecondary\" display=\"inline\">\r\n                 is the current bid by <Link href={\"/Profile/\" + product.currentBidderUsername}>{product.currentBidderUsername}</Link>\r\n                  </Typography>\r\n                    </Typography>\r\n                  </div>\r\n                : <div>\r\n                <Typography variant=\"h4\" color=\"textPrimary\"  display=\"inline\">\r\n                  ${product[\"marketPrice\"]}                  <Typography variant=\"subtitle1\" color=\"textSecondary\" display=\"inline\">\r\n                  is the starting bid\r\n                  </Typography>\r\n                  </Typography>\r\n\r\n                  </div>\r\n                }\r\n\r\n                <form className={classes.root} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n\r\n                  <TextField id=\"outlined-basic\" label=\"Bid\" variant=\"outlined\" size=\"small\" onChange={handleChange}/>        \r\n                  <Button size=\"medium\" type=\"submit\" variant=\"contained\" color=\"Primary\" className={classes.margin}>\r\n                    Place Bid\r\n                  </Button>\r\n                </form>\r\n                <br/>\r\n\r\n                <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" fontWeight=\"fontWeightBold\">{product.bidCount} bids</Typography>\r\n\r\n                <Countdown date={Date.now() + countdown} renderer={props => <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" fontWeight=\"fontWeightBold\">{\"Time left: \" + props.days + \"d \" + props.hours + \"h \" + props.minutes + \"m \" + props.seconds + \"s\"}</Typography>} />\r\n\r\n\r\n                \r\n              </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item  xs={12}>\r\n          <Card className={classes.root}>\r\n              <CardContent className={classes.content}>\r\n                <Typography component=\"h7\" variant=\"h7\">\r\n                  Description\r\n                </Typography><br/><br/>\r\n\r\n                <hr className={classes.hr}/>\r\n                <br/>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  {product[\"description\"]} \r\n                  </Typography>\r\n\r\n              </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default withRouter(ProductDetails);\r\n\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Alert.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Context.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\CategoriesBar\\Category.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\FaqCard.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\LoadingSpinner.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Profile.js",["165","166","167","168","169","170","171","172","173","174","175"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { makeStyles} from '@material-ui/core/styles';\r\nimport {useParams} from 'react-router-dom';\r\nimport FreebayAPI from '../../Api.js'\r\nimport Context from \"../Common/Context\";\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ExampleFeed from \"./ExampleFeed\";\r\nimport BidsFeed from \"./BidsFeed\";\r\nimport WinsFeed from \"./WinsFeed\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardHeader,\r\n} from '@material-ui/core/'\r\n\r\n\r\n// A users profile. If the profile is the current user, notifications \r\n// are displayed. If the profile does not match the current user, \r\n// notifications would not be displayed.\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 300,\r\n    width: 300,\r\n    borderRadius: 2,\r\n    border: 1,\r\n  },\r\n\r\n  cover: {\r\n    width: 151,\r\n  },\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  tabPanel: {\r\n    flexGrow: 1,\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\nfunction Profile() {\r\n  const classes = useStyles();\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const {username} = useParams();\r\n  const { currentUser } = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    async function getUserProfile(username) {\r\n        let userObject = await FreebayAPI.getUser(username);\r\n        console.log(\"username from params in Profile component\", username)\r\n        setUserProfile(userObject);\r\n    }\r\n    getUserProfile(username);\r\n    console.log(\"userProfile,\", userProfile)\r\n  }, []);\r\n\r\n  if (!userProfile) return <CircularProgress />;\r\n\r\n  const {  firstName, lastName, email, balance, products_won, highest_bids, notifications } = userProfile\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container justify=\"center\" alignItems=\"center\"   direction=\"row\">\r\n        <Grid item xs={12} md={6} ><br/>\r\n          <Card> \r\n            <CardContent >\r\n              <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n              {username}\r\n              </Typography>\r\n              <Typography className={classes.pos} color=\"textSecondary\" align=\"center\">\r\n                  {firstName} {lastName}\r\n                </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\" alignItems=\"center\"   direction=\"row\">\r\n        <Grid item xs={12} md={10}><br/>\r\n          <Notifications userProfile={userProfile}/>\r\n        </Grid>\r\n          <Grid container  justify=\"center\" alignItems=\"center\" direction=\"row\">\r\n            <Grid item justify=\"center\" alignItems=\"center\" xs={6}><br/>\r\n              <WinsFeed userProfile={userProfile}/>\r\n            </Grid>\r\n            <Grid item justify=\"center\" alignItems=\"center\"  xs={6}><br/>\r\n              <BidsFeed userProfile={userProfile}/>\r\n            </Grid>\r\n          </Grid>\r\n          </Grid>\r\n\r\n        \r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\BidsFeed.js",["176"],"import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\n\r\n\r\n\r\n// Feed of a user's highest bids. To be displayed for anyone viewing the page\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nexport default function BidsFeed(userProfile) {\r\n  const classes = useStyles();\r\n\r\n  console.log(\"userProfile in WonOrBids Feed\", userProfile )\r\n\r\n  const { highest_bids } = userProfile[\"userProfile\"]\r\n\r\n  console.log(\"highest_bids in WonOrBids Feed\", highest_bids )\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n            Current Bids\r\n      </Typography>\r\n      <Card >\r\n      <CardContent style={{maxHeight: 150, overflow: 'auto'}}>\r\n    <List className={classes.root}>\r\n      <h1>{userProfile[\"username\"]}</h1>\r\n        { highest_bids.length > 0 \r\n        \r\n        ? \r\n          \r\n        highest_bids.map( p => (  \r\n          <ListItem alignItems=\"flex-start\">\r\n          <ListItemAvatar>\r\n            <Avatar alt=\"Product Image\" src={p.imageUrl} />\r\n          </ListItemAvatar>\r\n        <ListItemText\r\n          primary={p.name}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                variant=\"caption\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                ${p.bidPrice}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        </ListItem>\r\n        ))\r\n\r\n        :\r\n        \r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemText secondary=\"None yet!\"/>\r\n          </ListItem>\r\n        }\r\n    </List>\r\n    </CardContent>\r\n    </Card>\r\n    </div>\r\n\r\n  )}\r\n\r\n\r\n  ","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\WinsFeed.js",["177"],"import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\n\r\n\r\n\r\n// Feed of a user's highest bids. To be displayed for anyone viewing the page\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nexport default function BidsFeed(userProfile) {\r\n  const classes = useStyles();\r\n\r\n  console.log(\"userProfile in WonOrBids Feed\", userProfile )\r\n\r\n  const { products_won } = userProfile[\"userProfile\"]\r\n\r\n  console.log(\"products_won in WonOrBids Feed\", products_won )\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n      Products Won\r\n    </Typography>\r\n    <Card >\r\n    <CardContent style={{maxHeight: 150, overflow: 'auto'}}>\r\n    <List className={classes.root}>\r\n      <h1>{userProfile[\"username\"]}</h1>\r\n        { products_won.length > 0 \r\n        \r\n        ? \r\n          \r\n        products_won.map( p => (  \r\n          <ListItem alignItems=\"flex-start\">\r\n          <ListItemAvatar>\r\n            <Avatar alt=\"Product Image\" src={p.imageUrl} />\r\n          </ListItemAvatar>\r\n        <ListItemText\r\n          primary={p.name}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography\r\n                variant=\"caption\"\r\n                className={classes.inline}\r\n                color=\"textPrimary\"\r\n              >\r\n                ${p.bidPrice}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        </ListItem>\r\n        ))\r\n\r\n        :\r\n        \r\n          <ListItem alignItems=\"flex-start\">\r\n            <ListItemText secondary=\"None yet!\"/>\r\n          </ListItem>\r\n        }\r\n    </List>\r\n    </CardContent>\r\n    </Card>\r\n    </div>\r\n\r\n  )}\r\n\r\n\r\n  ","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\Notifications.js",["178","179"],"import React, { useState, useEffect, useContext } from \"react\";import { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Context from \"../Common/Context\";\r\n\r\n\r\n// Displays a feed of a user's viewed and unviewed notifications. \r\n// If a user has not viewed a notification, the notification will be highlighted.\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 752,\r\n  },\r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  title: {\r\n    margin: theme.spacing(4, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport default function Notifications(userProfile) {\r\n  const classes = useStyles();\r\n  const { currentUser } = useContext(Context);\r\n\r\n  const userProfileUsername = userProfile[\"userProfile\"][\"username\"]\r\n\r\n  console.log(\"userProfileUsername\", userProfileUsername)\r\n\r\n  if (userProfileUsername !== currentUser[\"username\"]) {\r\n    return <div></div>\r\n  }\r\n\r\n  const { notifications } = currentUser\r\n\r\n  notifications.reverse()\r\n\r\n  console.log(\"notifications descrucutred from currentUser in Notifications component\", notifications)\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container justify=\"center\" alignItems=\"center\"   direction=\"row\" spacing=\"2\">\r\n        <Grid item xs={12}>\r\n        <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n            All Notifications\r\n          </Typography>\r\n        <Card>  \r\n            <CardContent style={{maxHeight: 150, overflow: 'auto'}}>\r\n              <List >\r\n        { notifications.length\r\n          ? \r\n          notifications.map( n => (\r\n\r\n              <ListItem dense=\"true\">\r\n                <ListItemAvatar>\r\n                  <Avatar>\r\n                    <FolderIcon />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={n.text}\r\n                />\r\n              </ListItem>\r\n              ))\r\n          : \r\n              <ListItem alignItems=\"flex-start\">\r\n                <ListItemText secondary=\"You don't have any notifications\"/>\r\n              </ListItem>\r\n        \r\n        }\r\n            </List>\r\n\r\n            </CardContent>\r\n          </Card>\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\User\\ExampleFeed.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\HomePagePic.js",[],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Common\\Stylings\\styleHomepagePic.js",["180"],"C:\\Users\\olms2\\OneDrive\\Desktop\\Coding\\Springboard\\Current VS Code Projects\\capstone-2\\capstone-2-frontend\\src\\Components\\Navigation\\CategoriesBar\\Stylings\\styleCategoriesBar.js",["181","182","183"],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":56,"column":6,"nodeType":"190","endLine":56,"endColumn":13,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":115,"column":9,"nodeType":"194","messageId":"195","endLine":115,"endColumn":16},{"ruleId":"188","severity":1,"message":"196","line":163,"column":6,"nodeType":"190","endLine":163,"endColumn":29,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":203,"column":46,"nodeType":"200","endLine":203,"endColumn":70},{"ruleId":"192","severity":1,"message":"201","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":19},{"ruleId":"192","severity":1,"message":"202","line":12,"column":8,"nodeType":"194","messageId":"195","endLine":12,"endColumn":27},{"ruleId":"192","severity":1,"message":"203","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":16},{"ruleId":"192","severity":1,"message":"204","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":16},{"ruleId":"192","severity":1,"message":"205","line":16,"column":9,"nodeType":"194","messageId":"195","endLine":16,"endColumn":18},{"ruleId":"192","severity":1,"message":"206","line":31,"column":49,"nodeType":"194","messageId":"195","endLine":31,"endColumn":61},{"ruleId":"192","severity":1,"message":"207","line":61,"column":9,"nodeType":"194","messageId":"195","endLine":61,"endColumn":25},{"ruleId":"192","severity":1,"message":"208","line":38,"column":18,"nodeType":"194","messageId":"195","endLine":38,"endColumn":24},{"ruleId":"192","severity":1,"message":"208","line":42,"column":19,"nodeType":"194","messageId":"195","endLine":42,"endColumn":25},{"ruleId":"192","severity":1,"message":"209","line":19,"column":9,"nodeType":"194","messageId":"195","endLine":19,"endColumn":19},{"ruleId":"192","severity":1,"message":"210","line":20,"column":9,"nodeType":"194","messageId":"195","endLine":20,"endColumn":25},{"ruleId":"192","severity":1,"message":"211","line":22,"column":9,"nodeType":"194","messageId":"195","endLine":22,"endColumn":21},{"ruleId":"192","severity":1,"message":"212","line":26,"column":9,"nodeType":"194","messageId":"195","endLine":26,"endColumn":20},{"ruleId":"192","severity":1,"message":"213","line":34,"column":12,"nodeType":"194","messageId":"195","endLine":34,"endColumn":29},{"ruleId":"192","severity":1,"message":"214","line":51,"column":9,"nodeType":"194","messageId":"195","endLine":51,"endColumn":30},{"ruleId":"192","severity":1,"message":"215","line":59,"column":9,"nodeType":"194","messageId":"195","endLine":59,"endColumn":24},{"ruleId":"192","severity":1,"message":"216","line":64,"column":9,"nodeType":"194","messageId":"195","endLine":64,"endColumn":29},{"ruleId":"192","severity":1,"message":"217","line":68,"column":9,"nodeType":"194","messageId":"195","endLine":68,"endColumn":20},{"ruleId":"198","severity":1,"message":"199","line":75,"column":37,"nodeType":"200","endLine":75,"endColumn":62},{"ruleId":"188","severity":1,"message":"218","line":66,"column":14,"nodeType":"219","endLine":66,"endColumn":28},{"ruleId":"188","severity":1,"message":"220","line":63,"column":6,"nodeType":"190","endLine":63,"endColumn":8,"suggestions":"221"},{"ruleId":"192","severity":1,"message":"222","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":11},{"ruleId":"192","severity":1,"message":"223","line":6,"column":54,"nodeType":"194","messageId":"195","endLine":6,"endColumn":62},{"ruleId":"192","severity":1,"message":"224","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":19},{"ruleId":"192","severity":1,"message":"225","line":13,"column":8,"nodeType":"194","messageId":"195","endLine":13,"endColumn":24},{"ruleId":"192","severity":1,"message":"193","line":75,"column":9,"nodeType":"194","messageId":"195","endLine":75,"endColumn":16},{"ruleId":"188","severity":1,"message":"226","line":89,"column":6,"nodeType":"190","endLine":89,"endColumn":8,"suggestions":"227"},{"ruleId":"192","severity":1,"message":"228","line":100,"column":9,"nodeType":"194","messageId":"195","endLine":100,"endColumn":18},{"ruleId":"192","severity":1,"message":"229","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":19},{"ruleId":"192","severity":1,"message":"230","line":13,"column":8,"nodeType":"194","messageId":"195","endLine":13,"endColumn":17},{"ruleId":"192","severity":1,"message":"222","line":14,"column":8,"nodeType":"194","messageId":"195","endLine":14,"endColumn":11},{"ruleId":"192","severity":1,"message":"231","line":21,"column":3,"nodeType":"194","messageId":"195","endLine":21,"endColumn":13},{"ruleId":"192","severity":1,"message":"232","line":68,"column":11,"nodeType":"194","messageId":"195","endLine":68,"endColumn":22},{"ruleId":"188","severity":1,"message":"233","line":78,"column":6,"nodeType":"190","endLine":78,"endColumn":8,"suggestions":"234"},{"ruleId":"192","severity":1,"message":"235","line":82,"column":33,"nodeType":"194","messageId":"195","endLine":82,"endColumn":38},{"ruleId":"192","severity":1,"message":"236","line":82,"column":40,"nodeType":"194","messageId":"195","endLine":82,"endColumn":47},{"ruleId":"192","severity":1,"message":"237","line":82,"column":49,"nodeType":"194","messageId":"195","endLine":82,"endColumn":61},{"ruleId":"192","severity":1,"message":"238","line":82,"column":63,"nodeType":"194","messageId":"195","endLine":82,"endColumn":75},{"ruleId":"192","severity":1,"message":"239","line":82,"column":77,"nodeType":"194","messageId":"195","endLine":82,"endColumn":90},{"ruleId":"192","severity":1,"message":"240","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":13},{"ruleId":"192","severity":1,"message":"240","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":13},{"ruleId":"192","severity":1,"message":"241","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"242","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"244","line":85,"column":1,"nodeType":"245","endLine":92,"endColumn":3},{"ruleId":"192","severity":1,"message":"246","line":1,"column":8,"nodeType":"194","messageId":"195","endLine":1,"endColumn":13},{"ruleId":"247","severity":1,"message":"248","line":30,"column":3,"nodeType":"249","messageId":"250","endLine":30,"endColumn":13},{"ruleId":"243","severity":1,"message":"244","line":66,"column":1,"nodeType":"245","endLine":68,"endColumn":5},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["253"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.",["254"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ProductCard' is defined but never used.","'ProductCategoryList' is defined but never used.","'BidsFeed' is defined but never used.","'WinsFeed' is defined but never used.","'useStyles' is assigned a value but never used.","'numOfRatings' is assigned a value but never used.","'countdownDisplay' is assigned a value but never used.","'logout' is assigned a value but never used.","'isMenuOpen' is assigned a value but never used.","'isMobileMenuOpen' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleListKeyDown' is defined but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","'handleMobileMenuOpen' is assigned a value but never used.","'handleClick' is assigned a value but never used.","Assignments to the 'page' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'products' and 'searchObject'. Either include them or remove the dependency array.",["255"],"'Box' is defined but never used.","'ReactDOM' is defined but never used.","'Breadcrumbs' is defined but never used.","'NavigateNextIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'product'. Either include them or remove the dependency array.",["256"],"'addBidRes' is assigned a value but never used.","'ExampleFeed' is defined but never used.","'PropTypes' is defined but never used.","'CardHeader' is defined but never used.","'currentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'userProfile' and 'username'. Either include them or remove the dependency array.",["257"],"'email' is assigned a value but never used.","'balance' is assigned a value but never used.","'products_won' is assigned a value but never used.","'highest_bids' is assigned a value but never used.","'notifications' is assigned a value but never used.","'Paper' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","no-dupe-keys","Duplicate key 'menuButton'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [currentUser, token]",{"range":"268","text":"269"},"Update the dependencies array to be: [currentUser.email, notificationsAnchorEl]",{"range":"270","text":"271"},"Update the dependencies array to be: [products, searchObject]",{"range":"272","text":"273"},"Update the dependencies array to be: [id, product]",{"range":"274","text":"275"},"Update the dependencies array to be: [userProfile, username]",{"range":"276","text":"277"},[1817,1824],"[currentUser, token]",[4466,4489],"[currentUser.email, notificationsAnchorEl]",[1622,1624],"[products, searchObject]",[2165,2167],"[id, product]",[1889,1891],"[userProfile, username]"]